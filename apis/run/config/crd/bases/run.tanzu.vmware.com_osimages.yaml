---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: osimages.run.tanzu.vmware.com
spec:
  group: run.tanzu.vmware.com
  names:
    kind: OSImage
    listKind: OSImageList
    plural: osimages
    shortNames:
    - osimg
    singular: osimage
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.kubernetesVersion
      name: K8S Version
      type: string
    - jsonPath: .spec.os.name
      name: OS Name
      type: string
    - jsonPath: .spec.os.version
      name: OS Version
      type: string
    - jsonPath: .spec.os.arch
      name: Arch
      type: string
    - jsonPath: .spec.image.type
      name: Type
      type: string
    - jsonPath: .status.conditions[?(@.type=='Compatible')].status
      name: Compatible
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Created
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: OSImage is the schema for the OSImages API. OSImage objects represent
          OSImages shipped as parts of TKRs. OSImages are immutable to end-users.
          They are created and managed by TKG to provide discovery of Kubernetes releases
          to TKG users and OS image details for infrastructure Machines.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OSImageSpec defines the desired state of OSImage
            properties:
              image:
                description: Image specifies the "Image" part of the OSImage.
                properties:
                  ref:
                    description: Ref is a key-value map identifying the image within
                      the infrastructure provider. This is the data to be injected
                      into the infra-Machine objects (like AWSMachine) on creation.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  type:
                    description: 'Type of the OSImage, roughly corresponding to the
                      infrastructure provider (vSphere can serve both ova and vmop).
                      Some of currently known types are: "ami", "azure", "docker",
                      "ova", "vmop".'
                    type: string
                required:
                - ref
                - type
                type: object
              kubernetesVersion:
                description: KubernetesVersion specifies the build version of the
                  Kubernetes shipped with this OSImage.
                type: string
              os:
                description: OS specifies the "OS" part of the OSImage.
                properties:
                  arch:
                    type: string
                  name:
                    type: string
                  type:
                    type: string
                  version:
                    type: string
                required:
                - arch
                - name
                - type
                - version
                type: object
            required:
            - image
            - kubernetesVersion
            - os
            type: object
          status:
            description: OSImageStatus defines the observed state of OSImage
            properties:
              conditions:
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
