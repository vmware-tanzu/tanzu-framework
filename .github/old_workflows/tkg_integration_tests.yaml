name: TKG Integration Tests

on:
  pull_request:
    branches: [ main, release-* ]
    paths:
    - 'tkg/**'
    - '!packageclients/**'
    - '!cmd/cli/plugin/package/test/**'
    - 'providers/**'
    - '.github/workflows/tkg_integration_tests.yaml'

concurrency:
  group: ${{ format('integration-tests-{0}', github.head_ref) }}
  cancel-in-progress: true

jobs:
  integ-tests-docker:
    if: false
    name: TKG Integration Tests CAPD
    runs-on: tkg
    steps:
    - name: Free disk space and clean up installed plugins on runner
      run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/lib/jvm
          sudo rm -rf /usr/lib/firefox
          sudo rm -rf /opt/microsoft/powershell
          sudo rm -rf /opt/hostedtoolcache
          sudo rm -rf /home/tanzu/.cache
          sudo rm -rf /home/tanzu/.kube
          sudo rm -rf /home/tanzu/.local/share/tanzu-cli/*
          sudo sh -c 'find /tmp -type d -name "go-build*" -mtime +3 | xargs rm -rf'
          echo "free space after cleanup:"
          df -h

    - name: Set up Go 1.x
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: go cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build Tools
      run: make tools

    - name: Extract PR Number
      uses: Dovyski/payload-info-action@master
      id: get_pr_num
      with:
        # when event is a pull request, obtaining the PR number is obvious
        filter_pull_request: '.number'
        # when event is a push (merge of PR), since we require linear history,
        # we are not even generating a merge commit that can help identify the
        # PR number, so don't even try. Instead we just hard-code to a dummy
        # value.
        filter_push: 1009

    - name: Find Comment
      uses: peter-evans/find-comment@v1
      id: findcomment
      with:
        issue-number: ${{ steps.get_pr_num.outputs.value }}
        body-includes: //usebom
        direction: last

    - name: Extract Alternate BOM
      shell: bash
      run: |
        export BOMCOMMENT=$(echo -e "${{ steps.findcomment.outputs.comment-body }}" | tr -d "[:space:]")
        echo "##[set-output name=bompath;]$(echo "$BOMCOMMENT" | awk -F : '{print $2}')"
      id: extract_bom

    - name: Cleanup
      run: rm -rf ~/.tanzu ~/.tkg ~/.config; docker kill $(docker ps -q) | true; docker system prune -a --volumes -f

    - name: Build CLI
      run: |
        make install-cli

    - name: Run TKG integration tests
      run: |
        if [[ ! -z "${{ steps.extract_bom.outputs.bompath }}" ]]; then
          export TKG_DEFAULT_COMPATIBILITY_IMAGE_PATH=${{ steps.extract_bom.outputs.bompath }}
        fi
        make configure-bom
        make generate-embedproviders
        pushd tkg
        E2E_CONFIG=$PWD/test/config/docker.yaml ../hack/tools/bin/ginkgo -nodes=3 -v -trace -tags embedproviders test/tkgctl/docker
        popd

  integ-tests-azure:
    name: TKG Integration Tests CAPZ
    runs-on: ubuntu-latest
    env:
      azure_client_id: ${{secrets.AZURE_CLIENT_ID_SAIB}}
    steps:
    - name: Free disk space and clean up installed plugins on runner
      run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/lib/jvm
          sudo rm -rf /usr/lib/firefox
          sudo rm -rf /opt/microsoft/powershell
          sudo rm -rf /opt/hostedtoolcache
          sudo rm -rf /home/tanzu/.cache
          sudo rm -rf /home/tanzu/.kube
          sudo rm -rf /home/tanzu/.local/share/tanzu-cli/*
          sudo sh -c 'find /tmp -type d -name "go-build*" -mtime +3 | xargs rm -rf'
          echo "free space after cleanup:"
          df -h

    - name: Set up Go 1.x
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: go cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Get dependencies
      run: go mod download

    - name: Build Tools
      run: make tools

    - name: Extract PR Number
      uses: Dovyski/payload-info-action@master
      id: get_pr_num
      with:
        # when event is a pull request, obtaining the PR number is obvious
        filter_pull_request: '.number'
        # when event is a push (merge of PR), since we require linear history,
        # we are not even generating a merge commit that can help identify the
        # PR number, so don't even try. Instead we just hard-code to a dummy
        # value.
        filter_push: 1009

    - name: Find Comment
      uses: peter-evans/find-comment@v1
      id: findcomment
      with:
        issue-number: ${{ steps.get_pr_num.outputs.value }}
        body-includes: //usebom
        direction: last

    - name: Extract Alternate BOM
      shell: bash
      run: |
        export BOMCOMMENT=$(echo -e "${{ steps.findcomment.outputs.comment-body }}" | tr -d "[:space:]")
        echo "##[set-output name=bompath;]$(echo "$BOMCOMMENT" | awk -F : '{print $2}')"
      id: extract_bom

    - name: Cleanup
      run: rm -rf ~/.tanzu ~/.tkg ~/.config; docker kill $(docker ps -q) | true; docker system prune -a --volumes -f

    - name: Build CLI
      run: |
        make install-cli

    - name: Generate cluster prefix
      if: ${{ env.azure_client_id != '' }}
      env:
        NUM: ${{ github.run_number }}
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      run: |
        echo ::set-env name=CLUSTER_PREFIX::"github-$NUM-"
    - uses: microsoft/variable-substitution@v1
      if: ${{ env.azure_client_id != '' }}
      with:
        files: 'tkg/test/config/azure.yaml'
      env:
        tkg_config_variables.AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID_SAIB }}
        tkg_config_variables.AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID_SAIB }}
        tkg_config_variables.AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID_SAIB }}
        tkg_config_variables.AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET_SAIB }}
        cluster_prefix: ${{ env.CLUSTER_PREFIX }}
    - run: |
        cat tkg/test/config/azure.yaml
    - name: Run TKG integration tests
      if: ${{ env.azure_client_id != '' }}
      run: |
        if [[ ! -z "${{ steps.extract_bom.outputs.bompath }}" ]]; then
          export TKG_DEFAULT_COMPATIBILITY_IMAGE_PATH=${{ steps.extract_bom.outputs.bompath }}
        fi
        make configure-bom
        make generate-embedproviders
        pushd tkg
        E2E_CONFIG=$PWD/test/config/azure.yaml ../hack/tools/bin/ginkgo -nodes=3 -v -trace -tags embedproviders test/tkgctl/azure
        popd

    - uses: Azure/login@v1.1
      if: ${{ always() && env.azure_client_id != '' }}
      with:
        creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID_SAIB }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET_SAIB }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID_SAIB }}","tenantId":"${{ secrets.AZURE_TENANT_ID_SAIB }}"}'

    - name: Cleanup Azure resources
      if: ${{ always() }}
      run: |
        for rgname in `az group list --query "[? contains(name,'${cluster_prefix}')][].{name:name}" -o tsv`; do
        echo Deleting ${rgname}
        az group delete -n ${rgname} --yes --no-wait
        done
      env:
        cluster_prefix: ${{ env.CLUSTER_PREFIX }}
