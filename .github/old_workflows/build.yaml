name: Build

on:
  pull_request:
    branches: [ main, release-* ]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
    - name: Free some disk space on runner
      run: |
        echo "free space before cleanup:"
        df -h
        sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/share/boost /usr/lib/jvm /usr/lib/firefox /opt/microsoft/powershell /opt/hostedtoolcache
        echo "free space after cleanup:"
        df -h

    - name: Set up Go 1.x
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
      id: go

    - name: Use Node 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.x

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: go cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Get npm cache directory
      id: npm-cache-dir
      run: |
        echo "::set-output name=dir::$(npm config get cache)"
    - name: npm cache
      uses: actions/cache@v3
      id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Get dependencies
      run: go mod download

    - name: Extract PR Number
      uses: Dovyski/payload-info-action@master
      id: get_pr_num
      with:
        # when event is a pull request, obtaining the PR number is obvious
        filter_pull_request: '.number'
        # when event is a push (merge of PR), since we require linear history,
        # we are not even generating a merge commit that can help identify the
        # PR number, so don't even try. Instead we just hard-code to a dummy
        # value.
        filter_push: 1009

    - name: Find Comment
      uses: peter-evans/find-comment@v1
      id: findcomment
      with:
        issue-number: ${{ steps.get_pr_num.outputs.value }}
        body-includes: //usebom
        direction: last

    - name: Extract Alternate BOM
      shell: bash
      run: |
        export BOMCOMMENT=$(echo -e "${{ steps.findcomment.outputs.comment-body }}" | tr -d "[:space:]")
        echo "##[set-output name=bompath;]$(echo "$BOMCOMMENT" | awk -F : '{print $2}')"
      id: extract_bom

    - name: run make all
      run: |
        if [[ ! -z "${{ steps.extract_bom.outputs.bompath }}" ]]; then
          export TKG_DEFAULT_COMPATIBILITY_IMAGE_PATH=${{ steps.extract_bom.outputs.bompath }}
        fi
        env | sort
        make configure-bom
        make all ENVS=linux-amd64
