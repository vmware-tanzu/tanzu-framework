name: Plugin Tests

on:
  pull_request:
    branches: [main, release-* ]
    paths:
      - "cmd/cli/plugin/cluster/**"
      - "cmd/cli/plugin/managementcluster/**"
      - 'tkg/**'
      - 'providers/**'
      - '.github/workflows/plugin_tests.yaml'
      - Makefile
      - 'cli/**'

concurrency:
  group: ${{ format('plugin-tests-{0}', github.head_ref) }}
  cancel-in-progress: true

jobs:
  build:
    name: Plugin Tests
    runs-on: tkg
    steps:
      - name: Free disk space and clean up installed plugins on runner
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /home/tanzu/.cache
          sudo rm -rf /home/tanzu/.kube
          sudo rm -rf /home/tanzu/.local/share/tanzu-cli/*
          sudo sh -c 'find /tmp -type d -name "go-build*" -mtime +3 | xargs rm -rf'
          mkdir -p /home/tanzu/.local/share/tanzu-cli/test

      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: go cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get dependencies
        run: go mod download

      - name: Extract PR Number
        uses: Dovyski/payload-info-action@master
        id: get_pr_num
        with:
          # when event is a pull request, obtaining the PR number is obvious
          filter_pull_request: '.number'
          # when event is a push (merge of PR), since we require linear history,
          # we are not even generating a merge commit that can help identify the
          # PR number, so don't even try. Instead we just hard-code to a dummy
          # value.
          filter_push: 1009

      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: findcomment
        with:
          issue-number: ${{ steps.get_pr_num.outputs.value }}
          body-includes: //usebom
          direction: last

      - name: Extract Alternate BOM
        shell: bash
        run: |
          export BOMCOMMENT=$(echo -e "${{ steps.findcomment.outputs.comment-body }}" | tr -d "[:space:]")
          echo "##[set-output name=bompath;]$(echo "$BOMCOMMENT" | awk -F : '{print $2}')"
        id: extract_bom

      - name: Build
        run: |
          if [[ ! -z "${{ steps.extract_bom.outputs.bompath }}" ]]; then
            export TKG_DEFAULT_COMPATIBILITY_IMAGE_PATH=${{ steps.extract_bom.outputs.bompath }}
          fi
          env | sort
          make configure-bom
          make build-cli-local

      - name: Cleanup
        run: rm -rf ~/.tanzu ~/.tkg ~/.config ~/.cache/tanzu; docker kill $(docker ps -q) | true; docker system prune -a --volumes -f

      - name: Install Tanzu CLI
        run: |
          make install-cli
          tanzu config set features.global.context-aware-cli-for-plugins true

      - name: Install CLI plugins
        run: |
          tanzu plugin install all --local artifacts/linux/amd64/cli/
          tanzu plugin install all --local artifacts-admin/linux/amd64/cli/

      - name: Run cluster test plugin
        run: tanzu test plugin cluster
