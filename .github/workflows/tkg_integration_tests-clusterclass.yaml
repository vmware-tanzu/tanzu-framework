name: TKG Integration Tests ClusterClass

on:
  pull_request:
    branches: [ main, release-*, package-based-lcm ]
    paths:
      - 'pkg/v1/tkg/**'
      - 'pkg/v1/tkr/**'
      - 'pkg/v2/tkr/**'
      - 'packages/management/**'
      - '!pkg/v1/tkg/tkgpackage*/*'
      - '!pkg/v1/tkg/kappclient/*'
      - '!pkg/v1/tkg/test/tkgpackageclient/**'
      - 'pkg/v1/providers/**'
      - '.github/workflows/publish_management_package.yaml'

  push:
    branches: [ package-based-lcm* ]
    paths:
    - 'pkg/v1/tkg/**'
    - '!pkg/v1/tkg/tkgpackage*/*'
    - '!pkg/v1/tkg/kappclient/*'
    - '!pkg/v1/tkg/test/tkgpackageclient/**'
    - 'pkg/v1/providers/**'
    - '.github/workflows/tkg_integration_tests.yaml'

concurrency:
  group: ${{ format('integration-tests-{0}', github.head_ref) }}
  cancel-in-progress: true

jobs:
  integ-tests-aws-cc:
    name: TKG Integration Tests CAPA (ClusterClass)
    runs-on: ubuntu-latest
    env:
      aws_client_id: ${{secrets.AWS_ACCESS_KEY_ID}}
    steps:
      - name: Free disk space and clean up installed plugins on runner
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /home/tanzu/.cache
          sudo rm -rf /home/tanzu/.kube
          sudo rm -rf /home/tanzu/.local/share/tanzu-cli/*

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Build Tools
        run: make tools

      - name: Extract PR Number
        uses: Dovyski/payload-info-action@master
        id: get_pr_num
        with:
          # when event is a pull request, obtaining the PR number is obvious
          filter_pull_request: '.number'
          # when event is a push (merge of PR), since we require linear history,
          # we are not even generating a merge commit that can help identify the
          # PR number, so don't even try. Instead we just hard-code to a dummy
          # value.
          filter_push: 1009

      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: findcomment
        with:
          issue-number: ${{ steps.get_pr_num.outputs.value }}
          body-includes: //usebom
          direction: last

      - name: Extract Alternate BOM
        shell: bash
        run: |
          export BOMCOMMENT=$(echo -e "${{ steps.findcomment.outputs.comment-body }}" | tr -d "[:space:]")
          echo "##[set-output name=bompath;]$(echo "$BOMCOMMENT" | awk -F : '{print $2}')"
        id: extract_bom

      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCP_BUCKET_SA }}

      - name: Build management packages
        env:
          NUM: ${{ github.run_id }}
          OCI_REGISTRY: gcr.io/eminent-nation-87317/tanzu_framework/github-actions/${{ github.event.number }}
          COMPONENTS: "pkg/v2/tkr/controller/tkr-source pkg/v2/tkr/controller/tkr-status pkg/v1/sdk/features addons pkg/v2/tkr/webhook/infra-machine pkg/v1/sdk/capabilities pkg/v2/tkr/webhook/tkr-conversion pkg/v2/tkr/webhook/cluster/tkr-resolver addons/pinniped/tanzu-auth-controller-manager"
          BUILD_VERSION: "v0.21.0"
          IMG_VERSION_OVERRIDE: latest
        run: |
          make docker-build

      - name: Publish management packages
        env:
          NUM: ${{ github.run_number }}
          OCI_REGISTRY: gcr.io/eminent-nation-87317/tanzu_framework/github-actions/${{ github.event.number }}
          COMPONENTS: "pkg/v2/tkr/controller/tkr-source pkg/v2/tkr/controller/tkr-status pkg/v1/sdk/features addons pkg/v2/tkr/webhook/infra-machine pkg/v1/sdk/capabilities pkg/v2/tkr/webhook/tkr-conversion pkg/v2/tkr/webhook/cluster/tkr-resolver addons/pinniped/tanzu-auth-controller-manager"
          BUILD_VERSION: "v0.21.0"
          IMG_VERSION_OVERRIDE: latest
        run: |
          make docker-publish
          make local-registry
          cp pkg/v1/tkg/test/config/packages/kbld_config_test.yaml packages/kbld-config.yaml
          make kbld-image-replace
          make package-push-bundles-repo PACKAGE_REPOSITORY=management
          make clean-registry

      - name: Cleanup
        run: rm -rf ~/.tanzu ~/.tkg ~/.config; docker kill $(docker ps -q) | true; docker system prune -a --volumes -f

      - name: Build CLI
        run: |
          make install-cli

      - name: Generate cluster prefix
        if: ${{ env.aws_client_id != '' }}
        env:
          NUM: ${{ github.run_number }}
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: |
          echo ::set-env name=CLUSTER_PREFIX::"github-$NUM-"

      - uses: microsoft/variable-substitution@v1
        if: ${{ env.aws_client_id != '' }}
        with:
          files: 'pkg/v1/tkg/test/config/aws.yaml'
        env:
          tkg_config_variables.AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          tkg_config_variables.AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          tkg_config_variables.AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          cluster_prefix: ${{ env.CLUSTER_PREFIX }}
      - run: |
          cat pkg/v1/tkg/test/config/aws.yaml

      - name: Run TKG integration tests
        if: ${{ env.aws_client_id != '' }}
        run: |
          if [[ ! -z "${{ steps.extract_bom.outputs.bompath }}" ]]; then
            export TKG_DEFAULT_COMPATIBILITY_IMAGE_PATH=${{ steps.extract_bom.outputs.bompath }}
          fi
          make configure-bom
          make generate-embedproviders
          E2E_CONFIG=$PWD/pkg/v1/tkg/test/config/aws.yaml hack/tools/bin/ginkgo -nodes=3 -v -trace -tags embedproviders pkg/v1/tkg/test/tkgctl/aws_cc
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_REGION: "us-west-2"
          _MANAGEMENT_PACKAGE_REPO_IMAGE: gcr.io/eminent-nation-87317/tanzu_framework/github-actions/${{ github.event.number }}/management:v0.21.0
          _MANAGEMENT_PACKAGE_VERSION: "0.21.0"
          _ADDITIONAL_MANAGEMENT_COMPONENT_CONFIGURATION_FILE: "https://gist.githubusercontent.com/anujc25/cf8b5ce3e9e241527e3af881d5d748c1/raw/32dda7874da12f98c05d6d5400cdde2f5334a90d/tkr-addons-resources-v1.23.5.yaml"

      - name: Cleanup AWS resources
        if: ${{ always() }}
        run: |
          pkg/v1/tkg/test/scripts/aws_cleanup.sh ${{ secrets.AWS_ACCESS_KEY_ID }} ${{ secrets.AWS_SECRET_ACCESS_KEY }} "" "us-west-2" ${{ env.CLUSTER_PREFIX }}
        env:
          cluster_prefix: ${{ env.CLUSTER_PREFIX }}
