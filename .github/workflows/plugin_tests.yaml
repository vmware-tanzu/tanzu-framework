name: Plugin Tests

on:
  pull_request:
    branches: [xmain, release-*]
    paths:
      - "cmd/cli/plugin/cluster/**"
      - "cmd/cli/plugin/managementcluster/**"
      - 'pkg/v1/tkg/**'
      - 'pkg/v1/providers/**'
      - '.github/workflows/plugin_tests.yaml'

concurrency:
  group: ${{ format('plugin-tests-{0}', github.head_ref) }}
  cancel-in-progress: true

jobs:
  build:
    name: Plugin Tests
    runs-on: tkg
    steps:
      - name: Free disk space and clean up installed plugins on runner
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /home/tanzu/.local/share/tanzu-cli/*
          mkdir -p /home/tanzu/.local/share/tanzu-cli/test

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: "1.17"
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Extract PR Number
        uses: Dovyski/payload-info-action@master
        id: get_pr_num
        with:
          # when event is a pull request, obtaining the PR number is obvious
          filter_pull_request: '.number'
          # when event is a push (merge of PR), obtains original PR number from the merge commit message
          filter_push: '.head_commit.message | capture("Merge pull request #(?<pr>[[:digit:]]+)").pr | tonumber'

      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: findcomment
        with:
          issue-number: ${{ steps.get_pr_num.outputs.value }}
          body-includes: //usebom
          direction: last

      - name: Extract Alternate BOM
        shell: bash
        run: |
          export BOMCOMMENT=$(echo -e "${{ steps.findcomment.outputs.comment-body }}" | tr -d "[:space:]")
          echo "##[set-output name=bompath;]$(echo "$BOMCOMMENT" | awk -F : '{print $2}')"
        id: extract_bom

      # Using `ENABLE_CONTEXT_AWARE_PLUGIN_DISCOVERY=false` to build and install cli and plugins because
      # currently, context-aware-plugin-discovery does not support test plugins
      # Issue: https://github.com/vmware-tanzu/tanzu-framework/issues/1164
      # above issue need to be addressed and as part of the change we can use context-aware way of plugin
      # tests as part of this test workflow.
      - name: Build
        run: |
          if [[ ! -z "${{ steps.extract_bom.outputs.bompath }}" ]]; then
            export TKG_DEFAULT_COMPATIBILITY_IMAGE_PATH=${{ steps.extract_bom.outputs.bompath }}
          fi
          env | sort
          make configure-bom
          make build-cli-local ENABLE_CONTEXT_AWARE_PLUGIN_DISCOVERY=false

      - name: Install Tanzu CLI
        run: |
          make install-cli ENABLE_CONTEXT_AWARE_PLUGIN_DISCOVERY=false

      - name: Install CLI plugins
        run: make install-cli-plugins ENABLE_CONTEXT_AWARE_PLUGIN_DISCOVERY=false

      - name: Cleanup
        run: rm -rf ~/.tanzu ~/.tkg ~/.config ~/.cache/tanzu; docker kill $(docker ps -q) | true; docker system prune -a --volumes -f

      - name: Run cluster test plugin
        run: tanzu test plugin cluster
