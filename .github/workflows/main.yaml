name: Main

on:
  pull_request:
    branches: [ main, release-*, package-based-lcm ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v3
      with:
        go-version: '1.17'
      id: go

    - name: Use Node 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.x

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Extract PR Number
      uses: Dovyski/payload-info-action@master
      id: get_pr_num
      with:
        # when event is a pull request, obtaining the PR number is obvious
        filter_pull_request: '.number'
        # when event is a push (merge of PR), obtains original PR number from the merge commit message
        filter_push: '.head_commit.message | capture("Merge pull request #(?<pr>[[:digit:]]+)").pr | tonumber'

    - name: Find Comment
      uses: peter-evans/find-comment@v1
      id: findcomment
      with:
        issue-number: ${{ steps.get_pr_num.outputs.value }}
        body-includes: //usebom
        direction: last

    - name: Extract Alternate BOM
      shell: bash
      run: |
        export BOMCOMMENT=$(echo -e "${{ steps.findcomment.outputs.comment-body }}" | tr -d "[:space:]")
        echo "##[set-output name=bompath;]$(echo "$BOMCOMMENT" | awk -F : '{print $2}')"
      id: extract_bom

    - name: Build
      run: |
        if [[ ! -z "${{ steps.extract_bom.outputs.bompath }}" ]]; then
          export TKG_DEFAULT_COMPATIBILITY_IMAGE_PATH=${{ steps.extract_bom.outputs.bompath }}
        fi
        env | sort
        make configure-bom
        make all ENVS=linux-amd64

    - name: Verify
      run: |
        make verify

    - name: Test
      run: |
        if [[ ! -z "${{ steps.extract_bom.outputs.bompath }}" ]]; then
          export TKG_DEFAULT_COMPATIBILITY_IMAGE_PATH=${{ steps.extract_bom.outputs.bompath }}
        fi
        make configure-bom
        make test ENVS=linux-amd64
    - name: Upload coverage reports to Codecov with GitHub Action
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage1.txt,./coverage2.txt,./coverage3.txt,./addons/coverage.txt,./addons/pinniped/post-deploy/coverage.txt,./addons/pinniped/tanzu-auth-controller-manager/coverage.txt

  check:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go 1.x
      uses: actions/setup-go@v3
      with:
        go-version: '1.17'
      id: go

    - name: Cache linting
      uses: actions/cache@v3
      with:
        path: ${{ runner.temp }}/lint_cache
        key: ${{ runner.os }}-lint-cache-2

    - name: Run lint checks
      env:
        GOLANGCI_LINT_CACHE: ${{ runner.temp }}/lint_cache
      run: |
        make lint
