
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: tanzukubernetesclusters.run.tanzu.vmware.com
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.topology.controlPlane.replicas
    name: Control Plane
    type: integer
  - JSONPath: .status.totalWorkerReplicas
    name: Worker
    type: integer
  - JSONPath: .spec.topology.controlPlane.tkr.reference.name
    name: TKR Name
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: Ready
    type: string
  - JSONPath: .status.conditions[?(@.type=='TanzuKubernetesReleaseCompatible')].status
    name: TKR Compatible
    type: string
  - JSONPath: .status.conditions[?(@.type=='UpdatesAvailable')].message
    name: Updates Available
    type: string
  group: run.tanzu.vmware.com
  names:
    kind: TanzuKubernetesCluster
    listKind: TanzuKubernetesClusterList
    plural: tanzukubernetesclusters
    shortNames:
    - tkc
    singular: tanzukubernetescluster
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: TanzuKubernetesCluster is the schema for the Tanzu Kubernetes Grid
        service for vSphere API.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: 'TanzuKubernetesClusterSpec defines the desired state of TanzuKubernetesCluster:
            its nodes, the software installed on those nodes and the way that software
            should be configured.'
          properties:
            distribution:
              description: 'Distribution specifies the distribution for the Tanzu
                Kubernetes cluster: the software installed on the control plane and
                worker nodes, including Kubernetes itself. DEPRECATED: use topology.controlPlane.tkr
                and topology.nodePools[*].tkr instead.'
              properties:
                fullVersion:
                  description: "Version specifies the fully-qualified desired Kubernetes
                    distribution version of the Tanzu Kubernetes cluster. If the cluster
                    exists and is not of the specified version, it will be upgraded.
                    \n Version is a semantic version string. The version may not be
                    decreased. The major version may not be changed. If the minor
                    version is changed, it may only be incremented; skipping minor
                    versions is not supported. \n The current observed version of
                    the cluster is held by `status.version`. DEPRECATED: use topology.controlPlane.tkr
                    and topology.nodePools[*].tkr instead."
                  type: string
                version:
                  description: "VersionHint provides the version webhook with guidance
                    about the desired Kubernetes distribution version of the Tanzu
                    Kubernetes cluster. If a hint is provided without a full version,
                    the most recent distribution matching the hint will be selected.
                    \n The version selected based on the hint will be stored in the
                    spec as the full version. This ensures that the same version is
                    used if the cluster is scaled out in the future. \n VersionHint
                    is a semantic prefix of a full version number. (E.g., v1.15.1
                    matches any distribution of v1.15.1, including v1.15.1+vmware.1-tkg.1
                    or v1.15.1+vmware.2-tkg.1, but not v1.15.10+vmware.1-tkg.1.) \n
                    A hint that does not match the full version is invalid and will
                    be rejected. \n To upgrade a cluster to the most recent version
                    that still matches the hint, leave the hint alone and remove the
                    fullVersion from the spec. This will cause the hint to be re-resolved.
                    DEPRECATED: use topology.controlPlane.tkr and topology.nodePools[*].tkr
                    instead."
                  type: string
              type: object
            settings:
              description: 'Settings specifies settings for the Tanzu Kubernetes cluster:
                the way an instance of a distribution is configured, including information
                about pod networking and storage.'
              properties:
                network:
                  description: Network specifies network-related settings for the
                    cluster.
                  properties:
                    cni:
                      description: "CNI is the Container Networking Interface plugin
                        for the Tanzu Kubernetes cluster. \n Defaults to Calico."
                      properties:
                        name:
                          description: "Name is the name of the CNI plugin to use.
                            \n Supported values: \"calico\", \"antrea\"."
                          type: string
                      required:
                      - name
                      type: object
                    pods:
                      description: "Pods specify network settings for pods. \n When
                        CNI is antrea, set Defaults to 192.168.0.0/16. When CNI is
                        antrea-nsx-routed, set Defaults to empty"
                      properties:
                        cidrBlocks:
                          description: "CIDRBlocks specifies one or more ranges of
                            IP addresses. \n Note: supplying multiple ranges many
                            not be supported by all CNI plugins."
                          items:
                            type: string
                          type: array
                      type: object
                    proxy:
                      description: "Proxy specifies HTTP(s) proxy configuration for
                        Tanzu Kubernetes cluster. \n If omitted, no proxy will be
                        configured in the system."
                      properties:
                        httpProxy:
                          description: 'HttpProxy specifies a proxy URL to use for
                            creating HTTP connections outside the cluster. Example:
                            http://<user>:<pwd>@<ip>:<port>'
                          type: string
                        httpsProxy:
                          description: 'HttpsProxy specifies a proxy URL to use for
                            creating HTTPS connections outside the cluster. Example:
                            http://<user>:<pwd>@<ip>:<port>'
                          type: string
                        noProxy:
                          description: 'NoProxy specifies a list of destination domain
                            names, domains, IP addresses or other network CIDRs to
                            exclude proxying. Example: [localhost, 127.0.0.1, 10.10.10.0/24]'
                          items:
                            type: string
                          type: array
                      type: object
                    serviceDomain:
                      description: "ServiceDomain specifies service domain for Tanzu
                        Kubernetes cluster. \n Defaults to a cluster.local."
                      type: string
                    services:
                      description: "Services specify network settings for services.
                        \n Defaults to 10.96.0.0/12."
                      properties:
                        cidrBlocks:
                          description: "CIDRBlocks specifies one or more ranges of
                            IP addresses. \n Note: supplying multiple ranges many
                            not be supported by all CNI plugins."
                          items:
                            type: string
                          type: array
                      type: object
                    trust:
                      description: "Trust specifies certificate configuration for
                        the Tanzu Kubernetes Cluster. \n If omitted, no certificate
                        will be configured in the system."
                      properties:
                        additionalTrustedCAs:
                          description: AdditionalTrustedCAs specifies the additional
                            trusted certificates (which can be additional CAs or end
                            certificates) to add to the cluster
                          items:
                            description: TLSCertificate specifies a single additional
                              certificate name and contents
                            properties:
                              data:
                                description: 'Data specifies the contents of the additional
                                  certificate, encoded as a base64 string. Specifically,
                                  this is the PEM Public Certificate data as a base64
                                  string.. Example: LS0tLS1C...LS0tCg== (where "..."
                                  is the middle section of the long base64 string)'
                                type: string
                              name:
                                description: 'Name specifies the name of the additional
                                  certificate, used in the filename Example: CompanyInternalCA'
                                type: string
                            required:
                            - data
                            - name
                            type: object
                          type: array
                      type: object
                  type: object
                storage:
                  description: "Storage specifies storage-related settings for the
                    cluster. \n The storage used for node's disks is controlled by
                    TopologySettings."
                  properties:
                    classes:
                      description: "Classes is a list of storage classes from the
                        supervisor namespace to expose within a cluster. \n If omitted,
                        all storage classes from the supervisor namespace will be
                        exposed within the cluster."
                      items:
                        type: string
                      type: array
                    defaultClass:
                      description: DefaultClass is the valid storage class name which
                        is treated as the default storage class within a cluster.
                        If omitted, no default storage class is set
                      type: string
                  type: object
              type: object
            topology:
              description: 'Topology specifies the topology for the Tanzu Kubernetes
                cluster: the number, purpose, and organization of the nodes which
                form the cluster and the resources allocated for each.'
              properties:
                controlPlane:
                  description: ControlPlane specifies the topology of the cluster's
                    control plane, including the number of control plane nodes and
                    resources allocated for each. The control plane must have an odd
                    number of nodes.
                  properties:
                    nodeDrainTimeout:
                      description: 'NodeDrainTimeout is the total amount of time that
                        the controller will spend on draining a node. The default
                        value is 0, meaning that the node will be drained without
                        any time limitations. NOTE: NodeDrainTimeout is different
                        from `kubectl drain --timeout`'
                      type: string
                    replicas:
                      description: Replicas is the number of nodes. This is a pointer
                        to distinguish between explicit zero and not specified, `nil`.
                        For control plane, defaults to 1 if `nil`. For node pools,
                        a value of `nil` indicates that the field will not be reconciled,
                        allowing external services like autoscalers to choose the
                        number of nodes. By default, CAPI's `MachineDeployment` will
                        pick 1.
                      format: int32
                      type: integer
                    storageClass:
                      description: StorageClass is the storage class to be used for
                        storage of the disks which store the root filesystems of the
                        nodes. Run `kubectl describe ns` on your namespace to see
                        which storage classes are available to use.
                      type: string
                    tkr:
                      description: TKR points to TanzuKubernetesRelease intended to
                        be used by the node pool (the control plane being special
                        kind of a node pool).
                      properties:
                        reference:
                          description: Reference is a way to set the fixed link to
                            the target object.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                      type: object
                    vmClass:
                      description: VMClass is the name of the VirtualMachineClass,
                        which describes the virtual hardware settings, to be used
                        each node in the pool. This controls the hardware available
                        to the node (CPU and memory) as well as the requests and limits
                        on those resources. Run `kubectl describe virtualmachineclasses`
                        to see which VM classes are available to use.
                      type: string
                    volumes:
                      description: Volumes is the set of PVCs to be created and attached
                        to each node.
                      items:
                        description: Volume defines a PVC attachment. These volumes
                          are tied to the node lifecycle, created and deleted when
                          the node is. The volumes are mounted in the node during
                          the bootstrap process, prior to services being started (e.g.
                          etcd, containerd).
                        properties:
                          capacity:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: Capacity is the PVC capacity
                            type: object
                          mountPath:
                            description: MountPath is the directory where the volume
                              device is to be mounted
                            type: string
                          name:
                            description: 'Name is suffix used to name this PVC as:
                              node.Name + "-" + Name'
                            type: string
                          storageClass:
                            description: StorageClass is the storage class to be used
                              for the disks. Defaults to TopologySettings.StorageClass
                            type: string
                        required:
                        - capacity
                        - mountPath
                        - name
                        type: object
                      type: array
                  required:
                  - storageClass
                  - vmClass
                  type: object
                nodePools:
                  description: NodePools specifies the topology of cluster's worker
                    node pools, including the number of nodes and resources allocated
                    for each node.
                  items:
                    description: NodePool describes a group of nodes within a cluster
                      that have the same configuration
                    properties:
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are map of string keys and values that
                          can be used to organize and categorize objects. User-defined
                          labels will be propagated to the created nodes.
                        type: object
                      name:
                        description: Name is the name of the NodePool.
                        type: string
                      nodeDrainTimeout:
                        description: 'NodeDrainTimeout is the total amount of time
                          that the controller will spend on draining a node. The default
                          value is 0, meaning that the node will be drained without
                          any time limitations. NOTE: NodeDrainTimeout is different
                          from `kubectl drain --timeout`'
                        type: string
                      replicas:
                        description: Replicas is the number of nodes. This is a pointer
                          to distinguish between explicit zero and not specified,
                          `nil`. For control plane, defaults to 1 if `nil`. For node
                          pools, a value of `nil` indicates that the field will not
                          be reconciled, allowing external services like autoscalers
                          to choose the number of nodes. By default, CAPI's `MachineDeployment`
                          will pick 1.
                        format: int32
                        type: integer
                      storageClass:
                        description: StorageClass is the storage class to be used
                          for storage of the disks which store the root filesystems
                          of the nodes. Run `kubectl describe ns` on your namespace
                          to see which storage classes are available to use.
                        type: string
                      taints:
                        description: Taints specifies the taints the Node API object
                          should be registered with. User-defined taints will be propagated
                          to the created nodes.
                        items:
                          description: The node this Taint is attached to has the
                            "effect" on any pod that does not tolerate the Taint.
                          properties:
                            effect:
                              description: Required. The effect of the taint on pods
                                that do not tolerate the taint. Valid effects are
                                NoSchedule, PreferNoSchedule and NoExecute.
                              type: string
                            key:
                              description: Required. The taint key to be applied to
                                a node.
                              type: string
                            timeAdded:
                              description: TimeAdded represents the time at which
                                the taint was added. It is only written for NoExecute
                                taints.
                              format: date-time
                              type: string
                            value:
                              description: Required. The taint value corresponding
                                to the taint key.
                              type: string
                          required:
                          - effect
                          - key
                          type: object
                        type: array
                      tkr:
                        description: TKR points to TanzuKubernetesRelease intended
                          to be used by the node pool (the control plane being special
                          kind of a node pool).
                        properties:
                          reference:
                            description: Reference is a way to set the fixed link
                              to the target object.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object
                                  instead of an entire object, this string should
                                  contain a valid JSON/Go field access statement,
                                  such as desiredState.manifest.containers[2]. For
                                  example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only
                                  to have some well-defined way of referencing a part
                                  of an object. TODO: this design is not final and
                                  this field is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                        type: object
                      vmClass:
                        description: VMClass is the name of the VirtualMachineClass,
                          which describes the virtual hardware settings, to be used
                          each node in the pool. This controls the hardware available
                          to the node (CPU and memory) as well as the requests and
                          limits on those resources. Run `kubectl describe virtualmachineclasses`
                          to see which VM classes are available to use.
                        type: string
                      volumes:
                        description: Volumes is the set of PVCs to be created and
                          attached to each node.
                        items:
                          description: Volume defines a PVC attachment. These volumes
                            are tied to the node lifecycle, created and deleted when
                            the node is. The volumes are mounted in the node during
                            the bootstrap process, prior to services being started
                            (e.g. etcd, containerd).
                          properties:
                            capacity:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: Capacity is the PVC capacity
                              type: object
                            mountPath:
                              description: MountPath is the directory where the volume
                                device is to be mounted
                              type: string
                            name:
                              description: 'Name is suffix used to name this PVC as:
                                node.Name + "-" + Name'
                              type: string
                            storageClass:
                              description: StorageClass is the storage class to be
                                used for the disks. Defaults to TopologySettings.StorageClass
                              type: string
                          required:
                          - capacity
                          - mountPath
                          - name
                          type: object
                        type: array
                    required:
                    - name
                    - storageClass
                    - vmClass
                    type: object
                  type: array
              required:
              - controlPlane
              - nodePools
              type: object
          required:
          - topology
          type: object
        status:
          description: TanzuKubernetesClusterStatus defines the observed state of
            TanzuKubernetesCluster.
          properties:
            addons:
              description: Addons groups the statuses of a Tanzu Kubernetes cluster's
                add-ons.
              items:
                description: AddonStatus represents the status of an addon.
                properties:
                  conditions:
                    description: Conditions defines the current conditions of the
                      add-on.
                    items:
                      description: Condition defines an observation of a Cluster API
                        resource operational state.
                      properties:
                        lastTransitionTime:
                          description: Last time the condition transitioned from one
                            status to another. This should be when the underlying
                            condition changed. If that is not known, then using the
                            time when the API field changed is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: A human readable message indicating details
                            about the transition. This field may be empty.
                          type: string
                        reason:
                          description: The reason for the condition's last transition
                            in CamelCase. The specific API may choose whether or not
                            this field is considered a guaranteed API. This field
                            may not be empty.
                          type: string
                        severity:
                          description: Severity provides an explicit classification
                            of Reason code, so the users or machines can immediately
                            understand the current situation and act accordingly.
                            The Severity field MUST be set only when Status=False.
                          type: string
                        status:
                          description: Status of the condition, one of True, False,
                            Unknown.
                          type: string
                        type:
                          description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                            Many .condition.type values are consistent across resources
                            like Available, but because arbitrary conditions can be
                            useful (see .node.status.conditions), the ability to deconflict
                            is important.
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  name:
                    description: Name of the add-on used.
                    type: string
                  type:
                    description: Type of the add-on used
                    type: string
                  version:
                    description: Version of the distribution applied
                    type: string
                required:
                - name
                - type
                type: object
              type: array
            apiEndpoints:
              description: APIEndpoints represents the endpoints to communicate with
                the control plane.
              items:
                description: APIEndpoint represents a reachable Kubernetes API endpoint.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    type: integer
                required:
                - host
                - port
                type: object
              type: array
            conditions:
              description: Conditions defines current service state of the TanzuKubernetestCluster.
              items:
                description: Condition defines an observation of a Cluster API resource
                  operational state.
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another. This should be when the underlying condition changed.
                      If that is not known, then using the time when the API field
                      changed is acceptable.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition. This field may be empty.
                    type: string
                  reason:
                    description: The reason for the condition's last transition in
                      CamelCase. The specific API may choose whether or not this field
                      is considered a guaranteed API. This field may not be empty.
                    type: string
                  severity:
                    description: Severity provides an explicit classification of Reason
                      code, so the users or machines can immediately understand the
                      current situation and act accordingly. The Severity field MUST
                      be set only when Status=False.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                      Many .condition.type values are consistent across resources
                      like Available, but because arbitrary conditions can be useful
                      (see .node.status.conditions), the ability to deconflict is
                      important.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            phase:
              description: 'Phase of this TanzuKubernetesCluster. DEPRECATED: will
                be removed in v1alpha3'
              type: string
            totalWorkerReplicas:
              description: Total number of replicas in worker node pools.
              format: int32
              type: integer
            version:
              description: Version holds the observed version of the Tanzu Kubernetes
                cluster. While an upgrade is in progress this value will be the version
                of the cluster when the upgrade began.
              type: string
          type: object
      type: object
  version: v1alpha2
  versions:
  - name: v1alpha2
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
