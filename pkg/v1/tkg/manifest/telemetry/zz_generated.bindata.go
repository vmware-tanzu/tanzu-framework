// Code generated by go-bindata. DO NOT EDIT.
// sources:
// pkg/v1/tkg/manifest/telemetry/config-aws.yaml
// pkg/v1/tkg/manifest/telemetry/config-azure.yaml
// pkg/v1/tkg/manifest/telemetry/config-docker.yaml
// pkg/v1/tkg/manifest/telemetry/config-vsphere.yaml
// pkg/v1/tkg/manifest/telemetry/zz_generated.bindata.go

package telemetry

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataPkgV1TkgManifestTelemetryConfigawsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x6d\x6b\xdb\x4c\x10\xfc\xae\x5f\xb1\x18\x42\x20\x3c\xf2\x0b\x0f\x84\x22\xc8\x87\x36\x85\x86\x50\x92\xe0\x84\xd2\x52\x4a\x59\x9d\x36\xf6\xc5\xa7\x3b\x71\xbb\xa7\xd4\xfd\xf5\xe5\x64\x29\xf8\x45\x8e\x9d\x42\x2f\x9f\x72\x3b\x37\x33\xbb\x9a\x75\x9a\xa6\x09\x56\xfa\x0b\x79\xd6\xce\x66\x50\x4f\x92\x85\xb6\x45\x06\x37\x58\x12\x57\xa8\x28\x29\x49\xb0\x40\xc1\x2c\x01\xb0\x58\x52\x06\xb2\x98\xa5\xbc\x64\xa1\x32\x15\x32\x54\x92\xf8\x65\x02\x90\xec\x25\xbb\x27\x5f\x6b\x45\xef\x95\x72\xc1\xca\x1e\xc6\x17\xaa\x94\xb1\x2d\x34\x06\xf6\xe8\x35\x6a\x2b\xfa\x4b\x13\x58\xc8\x4f\x9d\xa1\x0d\x7d\x9f\xa3\x1a\x62\x90\xb9\xf3\xfa\x37\x8a\x76\x76\xb8\x78\xc7\x43\xed\x46\xf5\xe4\xa0\x09\xb5\x22\x4d\x7d\x64\xf5\xc1\x10\x47\x64\x0a\x58\xe9\x4f\xde\x85\x8a\x33\xf8\x3e\x18\xfc\x48\x00\x00\x3c\xb1\x0b\x5e\x51\x73\xc7\xa4\x3c\x09\x0f\xfe\x83\xc1\x4b\x0f\xdc\x02\x6b\xf2\x79\x03\x9a\x91\x44\x80\xd1\x2c\x4d\x69\x8b\xb7\x15\x1f\xfe\x4a\x57\x86\xfb\x74\x5a\x4c\x23\x54\xa2\x9a\x6b\x4b\x05\x55\xc6\x2d\x4b\xb2\xf2\x56\x41\x6d\x1f\x3d\xb2\xf8\xa0\x24\x78\x1a\x1e\xa3\x8f\xcf\xbc\x6e\x01\x9f\xb9\x75\x21\x54\x56\x06\xe5\xed\x4d\x3b\x2b\xde\x99\xca\xa0\x3d\xce\xc1\x22\xe4\x84\x45\xb9\xfe\xee\x80\x66\x7f\x68\x3e\x68\x5b\x68\x3b\xfb\x37\xd9\x49\xf3\x96\x9d\x43\xfe\x44\x4a\xda\x18\xf5\x2e\x46\x74\xbe\x77\x21\x0e\xaf\x44\x94\x9b\xd2\x63\x14\xe8\x06\xfb\x4a\x23\x09\xc0\xee\xfa\x1c\xb1\x0b\x3b\x6b\x9e\xa3\xa8\xf9\xa8\x9e\xe4\x24\xd8\x6d\xfc\xa5\x77\xf6\xda\xe5\x87\x26\x75\xc4\x9e\x03\x18\xcc\xc9\x34\x63\x03\xd8\x8e\xc5\xa8\xb3\xb6\x22\x3f\x3d\xe1\xd3\x84\x2b\x52\x11\xcd\x6a\x4e\x45\x30\x94\xc1\x60\x0c\x67\xa3\x73\x38\x8b\x7f\x83\x04\x40\x39\xab\x82\xf7\x64\xd5\xf2\xce\x19\xad\x96\x19\x4c\xa9\x32\xf1\xd7\x0e\xe0\x11\xb5\xa1\xe2\xda\xe5\x7c\xa5\x59\x9c\x5f\x7e\xd6\xa5\x96\x0c\x26\xe3\x04\xe0\xc9\xe5\x0f\x6d\xbc\x57\x86\x3a\xb1\x78\x64\xa3\xb2\x5d\x6d\xfe\xdf\xf8\xde\x7b\x3e\xf3\xea\xa0\x12\x5d\xd3\x47\xc2\xc2\x68\x4b\xf7\xa4\x9c\x2d\x38\x83\xff\xcf\xc7\xe3\x35\x54\xcc\x3e\x6a\x4b\x9e\xd7\x65\x62\xc0\xfa\xa7\xbd\x7e\x74\x89\xb3\x6e\x66\x9b\x15\xe5\xca\x12\x6d\x91\x6d\x5d\x47\xda\xd1\x6b\x8c\x11\x90\xa6\xec\xac\xcb\x83\x5b\xc6\xe4\xa7\x15\xca\xfc\x62\xd4\x5d\xf5\xe2\x63\x3e\xe2\xa0\x29\x0d\xde\x5c\x9c\x70\x2f\x68\x15\x82\xdd\x2a\xd9\x7a\xdb\x66\xd7\xfb\xd5\xc3\xc3\xdd\xcf\xbb\xe9\xed\xd7\x6f\x3b\x8c\x35\x9a\xd0\xdf\xfa\xfa\xe3\xfb\xbf\x7e\x7d\x73\xfb\xa6\xa7\x9e\x58\xd0\x4b\x97\xc5\x1b\xaa\xc9\x27\x7f\x02\x00\x00\xff\xff\xf6\x15\x3d\x26\x9b\x07\x00\x00")

func bindataPkgV1TkgManifestTelemetryConfigawsYamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPkgV1TkgManifestTelemetryConfigawsYaml,
		"pkg/v1/tkg/manifest/telemetry/config-aws.yaml",
	)
}

func bindataPkgV1TkgManifestTelemetryConfigawsYaml() (*asset, error) {
	bytes, err := bindataPkgV1TkgManifestTelemetryConfigawsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "pkg/v1/tkg/manifest/telemetry/config-aws.yaml",
		size:        1947,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPkgV1TkgManifestTelemetryConfigazureYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5d\x6b\x1b\x3b\x10\x7d\xdf\x5f\x31\x18\x42\x20\x44\xfe\xe0\x42\xb8\x2c\xe4\xe1\xde\x14\x1a\x42\x49\x82\x13\x4a\x4b\x29\x65\x56\x3b\xb1\x15\x6b\xa5\x45\x1a\x2d\x75\x7e\x7d\xd1\x7e\x84\xb5\xbd\x8e\x9d\x42\xe4\x27\x6b\x8e\xce\x39\x9a\x3d\x23\x21\x44\x82\xa5\xfa\x4a\xce\x2b\x6b\x52\xa8\x66\xc9\x4a\x99\x3c\x85\x5b\x2c\xc8\x97\x28\x29\x29\x88\x31\x47\xc6\x34\x01\x30\x58\x50\x0a\xbc\x5a\x08\xbf\xf6\x4c\x85\x60\xd2\x54\x10\xbb\x75\x92\xec\xa5\x7a\x20\x57\x29\x49\xff\x49\x69\x83\xe1\x3d\x7c\xaf\x44\xc2\x63\x5b\xa8\xe5\xdf\x52\x6b\xe8\xaf\x74\xf0\x4c\x6e\x6e\x35\x6d\xe8\xbb\x0c\xe5\x18\x03\x2f\xad\x53\x2f\xc8\xca\x9a\xf1\xea\x5f\x3f\x56\x76\x52\xcd\x0e\x9a\x90\x0d\xa9\x70\x91\xd5\x05\x4d\x3e\x22\x05\x60\xa9\x3e\x3b\x1b\x4a\x9f\xc2\x8f\xd1\xe8\x67\x02\x00\xe0\xc8\xdb\xe0\x24\xd5\x7b\x9e\xa4\x23\xf6\xa3\x73\x18\xbd\xde\xc1\xb7\xc0\x8a\x5c\x56\x83\x16\xc4\x11\xa0\x95\xe7\xba\xb4\xc5\xdb\x8a\x8f\x7f\x8b\xc6\xf0\x90\x4e\x8b\xf9\x50\xea\x73\x18\x15\x28\x97\xca\x50\x4e\xa5\xb6\xeb\x82\x0c\xbf\x57\x50\x99\x27\x87\x9e\x5d\x90\x1c\x1c\x8d\x8f\xd1\xc7\x97\xe0\xa8\x15\xae\x4d\xd4\x1b\x7d\x57\x7d\x04\x53\x51\x6a\xe4\xf7\x37\xd9\x1a\x76\x56\x97\x1a\xcd\x71\xb6\x56\x21\x23\xcc\x8b\xfe\xb9\x03\x9a\xc3\x21\xfd\x5f\x99\x5c\x99\xc5\xc7\x64\x55\x64\x2d\xbb\x0f\xd9\x33\x49\x6e\x63\x3b\x38\x88\xd1\xf9\xde\x01\x3c\x3c\x82\x51\x6e\x4e\x4f\x51\xa0\x6b\xec\x1b\x17\x49\x00\x76\xc7\xf5\x88\xd9\xdb\x79\x56\x32\x64\xb9\x9c\x54\xb3\x8c\x18\xbb\x17\xe6\xca\x59\x73\x63\xb3\x43\x9d\x3a\xe2\x5d\x01\xd0\x98\x91\xae\xdb\x06\xb0\x1d\x8b\x49\x67\xad\x21\x3f\x3d\xf1\xa7\x89\x2f\x49\x46\xb4\x97\x4b\xca\x83\xa6\x14\x46\x53\x38\x9b\x5c\xc0\x59\xfc\x8d\x12\x00\x69\x8d\x0c\xce\x91\x91\xeb\x7b\xab\x95\x5c\xa7\x30\xa7\x52\xc7\xb7\x15\xe0\x09\x95\xa6\xfc\xc6\x66\xfe\x5a\x79\xb6\x6e\xfd\x45\x15\x8a\x53\x98\x4d\x13\x80\x67\x9b\x3d\xb6\xf1\x6e\x0c\x75\x62\x71\xf1\x46\x65\xbb\x5a\xff\xdf\xf8\xde\x7b\x3e\x73\xb3\x50\xb2\xaa\xe8\x13\x61\xae\x95\xa1\x07\x92\xd6\xe4\x3e\x85\x7f\x2e\xa6\xd3\x1e\x2a\x66\x1f\x95\x21\xe7\xfb\x32\x31\x60\xc3\xdd\xee\x2f\x55\xe0\xa2\xeb\xd9\x66\x45\xda\xa2\x40\x93\xa7\x5b\xdb\x91\x76\xf2\x16\x63\x04\x08\xe1\xad\xb1\x59\xb0\xeb\x98\x7c\x51\x22\x2f\x2f\x27\xdd\xd6\x20\x3e\xe6\x23\x36\x9a\x44\x70\xfa\xf2\xc4\x0f\x82\x9a\x10\xec\x56\xc9\x54\xdb\x36\xbb\xbb\x5f\x3f\x3e\xde\xff\xba\x9f\xdf\x7d\xfb\xbe\xc3\x58\xa1\x0e\xc3\x57\xef\x1f\x7e\xf8\xeb\xd3\xb7\x77\xef\x3a\xea\xc8\x33\x3a\xee\xb2\x78\x4b\x15\xb9\xe4\x4f\x00\x00\x00\xff\xff\x7e\xaf\x00\xd5\x09\x08\x00\x00")

func bindataPkgV1TkgManifestTelemetryConfigazureYamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPkgV1TkgManifestTelemetryConfigazureYaml,
		"pkg/v1/tkg/manifest/telemetry/config-azure.yaml",
	)
}

func bindataPkgV1TkgManifestTelemetryConfigazureYaml() (*asset, error) {
	bytes, err := bindataPkgV1TkgManifestTelemetryConfigazureYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "pkg/v1/tkg/manifest/telemetry/config-azure.yaml",
		size:        2057,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPkgV1TkgManifestTelemetryConfigdockerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5b\x6b\x1b\x3d\x10\x7d\xdf\x5f\x31\x18\x42\x20\x44\xbe\xf0\x41\xf8\x58\xc8\x43\x9b\x42\x43\x28\x49\x70\x42\x69\x29\xa5\xcc\x6a\x27\xb6\x62\xad\xb4\x48\xa3\xa5\xdb\x5f\x5f\xb4\x97\xe0\xcb\x3a\x76\x0a\x91\x9f\xac\x39\x3a\xe7\x68\xf6\x8c\x84\x10\x09\x96\xea\x2b\x39\xaf\xac\x49\xa1\x9a\x25\x2b\x65\xf2\x14\x6e\xb1\x20\x5f\xa2\xa4\xa4\x20\xc6\x1c\x19\xd3\x04\xc0\x60\x41\x29\xf0\x6a\x21\x7c\xed\x99\x0a\xc1\xa4\xa9\x20\x76\x75\x92\xec\xa5\x7a\x20\x57\x29\x49\x1f\xa4\xb4\xc1\xf0\x1e\xbe\x17\x22\xe1\xb1\x2b\x34\xf2\xaf\xa9\xb5\xf4\x57\x3a\x78\x26\x37\xb7\x9a\x36\xf4\x5d\x86\x72\x8c\x81\x97\xd6\xa9\x3f\xc8\xca\x9a\xf1\xea\x7f\x3f\x56\x76\x52\xcd\x0e\x9a\x90\x2d\xa9\x70\x91\xd5\x05\x4d\x3e\x22\x05\x60\xa9\x3e\x3b\x1b\x4a\x9f\xc2\x8f\xd1\xe8\x67\x02\x00\xe0\xc8\xdb\xe0\x24\x35\x7b\x9e\xa4\x23\xf6\xa3\x73\x18\xbd\xdc\xc1\x77\xc0\x8a\x5c\xd6\x80\x16\xc4\x11\xa0\x95\xe7\xa6\xb4\xc5\xdb\x89\x8f\x7f\x8b\xd6\xf0\x90\x4e\x87\x79\x57\xea\x73\x18\x15\x28\x97\xca\x50\x4e\xa5\xb6\x75\x41\x86\xdf\x2a\xa8\xcc\x93\x43\xcf\x2e\x48\x0e\x8e\xc6\xc7\xe8\xe7\x56\xae\xc8\x75\xca\x8d\x8b\x76\x67\xdd\xd7\x06\x86\xa9\x28\x35\xf2\xdb\xfb\x6c\x0d\x3b\xab\x4b\x8d\xe6\x38\x67\xab\x90\x11\xe6\xc5\xfa\xb9\x03\x9a\xc3\x39\xfd\xa8\x4c\xae\xcc\xe2\x7d\xe2\x2a\xb2\x8e\xdd\x87\xec\x99\x24\x77\xc9\x1d\x9c\xc5\xe8\x7c\xef\x0c\x1e\x9e\xc2\x28\x37\xa7\xa7\x28\xd0\x37\xf6\x95\x8b\x24\x00\xbb\x13\x7b\xc4\xf8\xed\xbc\x2c\x19\xb2\x5c\x4e\xaa\x59\x46\x8c\xfd\x23\x73\xe5\xac\xb9\xb1\xd9\xa1\x4e\x1d\xf1\xb4\x00\x68\xcc\x48\x37\x6d\x03\xd8\x8e\xc5\xa4\xb7\xd6\x92\x9f\x9e\xf8\xd3\xc4\x97\x24\x23\xda\xcb\x25\xe5\x41\x53\x0a\xa3\x29\x9c\x4d\x2e\xe0\x2c\xfe\x46\x09\x80\xb4\x46\x06\xe7\xc8\xc8\xfa\xde\x6a\x25\xeb\x14\xe6\x54\xea\xf8\xbc\x02\x3c\xa1\xd2\x94\xdf\xd8\xcc\x5f\x2b\xcf\xd6\xd5\x5f\x54\xa1\x38\x85\xd9\x34\x01\x78\xb6\xd9\x63\x17\xef\xd6\x50\x2f\x16\x17\x6f\x54\xb6\xab\xcd\xff\x8d\xef\xbd\xe7\x33\xb7\x0b\x25\xab\x8a\x3e\x11\xe6\x5a\x19\x7a\x20\x69\x4d\xee\x53\xf8\xef\x62\x3a\x5d\x43\xc5\xec\xa3\x32\xe4\xfc\xba\x4c\x0c\xd8\x70\xb7\xd7\x97\x2a\x70\xd1\xf7\x6c\xb3\x22\x6d\x51\xa0\xc9\xd3\xad\xed\x48\x3b\x79\x8d\x31\x02\x84\xf0\xd6\xd8\x2c\xd8\x3a\x26\x5f\x94\xc8\xcb\xcb\x49\xbf\x35\x88\x8f\xf9\x88\x8d\x26\x11\x9c\xbe\x3c\xf1\x83\xa0\x36\x04\xbb\x55\x32\xd5\xb6\xcd\xfe\xee\xd7\x8f\x8f\xf7\xbf\xee\xe7\x77\xdf\xbe\xef\x30\x56\xa8\xc3\xf0\xd5\xd7\x0f\x3f\xfc\xf3\xe9\xdb\xbb\x37\x1d\x75\xe4\x19\x1d\xf7\x59\xbc\xa5\x8a\x5c\xf2\x37\x00\x00\xff\xff\xfc\x14\x7b\x2f\x0c\x08\x00\x00")

func bindataPkgV1TkgManifestTelemetryConfigdockerYamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPkgV1TkgManifestTelemetryConfigdockerYaml,
		"pkg/v1/tkg/manifest/telemetry/config-docker.yaml",
	)
}

func bindataPkgV1TkgManifestTelemetryConfigdockerYaml() (*asset, error) {
	bytes, err := bindataPkgV1TkgManifestTelemetryConfigdockerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "pkg/v1/tkg/manifest/telemetry/config-docker.yaml",
		size:        2060,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPkgV1TkgManifestTelemetryConfigvsphereYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5b\x6b\x1b\x3d\x10\x7d\xdf\x5f\x31\x18\x42\x20\x44\xbe\xf0\x41\xf8\x58\xc8\x43\x9b\x42\x43\x28\x49\x70\x42\x69\x29\xa5\xcc\x6a\x27\xb6\x62\xad\xb4\x48\xa3\xa5\xdb\x5f\x5f\xb4\x97\xe0\xcb\x3a\x76\x0a\x91\x9f\xac\x39\x3a\xe7\x68\xf6\x8c\x84\x10\x09\x96\xea\x2b\x39\xaf\xac\x49\xa1\x9a\x25\x2b\x65\xf2\x14\x6e\xb1\x20\x5f\xa2\xa4\xa4\x20\xc6\x1c\x19\xd3\x04\xc0\x60\x41\x29\xf0\x6a\x21\x7c\xed\x99\x0a\xc1\xa4\xa9\x20\x76\x75\x92\xec\xa5\x7a\x20\x57\x29\x49\x1f\xa4\xb4\xc1\xf0\x1e\xbe\x17\x22\xe1\xb1\x2b\x34\xf2\xaf\xa9\xb5\xf4\x57\x3a\x78\x26\x37\xb7\x9a\x36\xf4\x5d\x86\x72\x8c\x81\x97\xd6\xa9\x3f\xc8\xca\x9a\xf1\xea\x7f\x3f\x56\x76\x52\xcd\x0e\x9a\x90\x2d\xa9\x70\x91\xd5\x05\x4d\x3e\x22\x05\x60\xa9\x3e\x3b\x1b\x4a\x9f\xc2\x8f\xd1\xe8\x67\x02\x00\xe0\xc8\xdb\xe0\x24\x35\x7b\x9e\xa4\x23\xf6\xa3\x73\x18\xbd\xdc\xc1\x77\xc0\x8a\x5c\xd6\x80\x16\xc4\x11\xa0\x95\xe7\xa6\xb4\xc5\xdb\x89\x8f\x7f\x8b\xd6\xf0\x90\x4e\x87\x79\x57\xea\x73\x18\x15\x28\x97\xca\x50\x4e\xa5\xb6\x75\x41\x86\xdf\x2a\xa8\xcc\x93\x43\xcf\x2e\x48\x0e\x8e\xc6\xc7\xe8\x57\xbe\x5c\x92\xa3\x4e\xba\xb1\xd1\x6d\xad\x3b\xdb\x44\x31\x15\xa5\x46\x7e\x7b\xab\xad\x61\x67\x75\xa9\xd1\x1c\x67\x6e\x15\x32\xc2\xbc\x58\x3f\x77\x40\x73\x38\xaa\x1f\x95\xc9\x95\x59\xbc\x4f\x62\x45\xd6\xb1\xfb\x90\x3d\x93\xe4\x2e\xbc\x83\xe3\x18\x9d\xef\x1d\xc3\xc3\x83\x18\xe5\xe6\xf4\x14\x05\xfa\xc6\xbe\x72\x91\x04\x60\x77\x68\x8f\x98\xc0\x9d\xc7\x25\x43\x96\xcb\x49\x35\xcb\x88\xb1\x7f\x67\xae\x9c\x35\x37\x36\x3b\xd4\xa9\x23\x5e\x17\x00\x8d\x19\xe9\xa6\x6d\x00\xdb\xb1\x98\xf4\xd6\x5a\xf2\xd3\x13\x7f\x9a\xf8\x92\x64\x44\x7b\xb9\xa4\x3c\x68\x4a\x61\x34\x85\xb3\xc9\x05\x9c\xc5\xdf\x28\x01\x90\xd6\xc8\xe0\x1c\x19\x59\xdf\x5b\xad\x64\x9d\xc2\x9c\x4a\x1d\x5f\x58\x80\x27\x54\x9a\xf2\x1b\x9b\xf9\x6b\xe5\xd9\xba\xfa\x8b\x2a\x14\xa7\x30\x9b\x26\x00\xcf\x36\x7b\xec\xe2\xdd\x1a\xea\xc5\xe2\xe2\x8d\xca\x76\xb5\xf9\xbf\xf1\xbd\xf7\x7c\xe6\x76\xa1\x64\x55\xd1\x27\xc2\x5c\x2b\x43\x0f\x24\xad\xc9\x7d\x0a\xff\x5d\x4c\xa7\x6b\xa8\x98\x7d\x54\x86\x9c\x5f\x97\x89\x01\x1b\xee\xf6\xfa\x52\x05\x2e\xfa\x9e\x6d\x56\xa4\x2d\x0a\x34\x79\xba\xb5\x1d\x69\x27\xaf\x31\x46\x80\x10\xde\x1a\x9b\x05\x5b\xc7\xe4\x8b\x12\x79\x79\x39\xe9\xb7\x06\xf1\x31\x1f\xb1\xd1\x24\x82\xd3\x97\x27\x7e\x10\xd4\x86\x60\xb7\x4a\xa6\xda\xb6\xd9\xdf\xfd\xfa\xf1\xf1\xfe\xd7\xfd\xfc\xee\xdb\xf7\x1d\xc6\x0a\x75\x18\xbe\xfa\xfa\xe1\x87\x7f\x3e\x7d\x7b\xf7\xa6\xa3\x8e\x3c\xa3\xe3\x3e\x8b\xb7\x54\x91\x4b\xfe\x06\x00\x00\xff\xff\x06\xcb\x68\x3f\x0f\x08\x00\x00")

func bindataPkgV1TkgManifestTelemetryConfigvsphereYamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPkgV1TkgManifestTelemetryConfigvsphereYaml,
		"pkg/v1/tkg/manifest/telemetry/config-vsphere.yaml",
	)
}

func bindataPkgV1TkgManifestTelemetryConfigvsphereYaml() (*asset, error) {
	bytes, err := bindataPkgV1TkgManifestTelemetryConfigvsphereYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "pkg/v1/tkg/manifest/telemetry/config-vsphere.yaml",
		size:        2063,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPkgV1TkgManifestTelemetryZzgeneratedBindataGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x9a\x6b\x6f\x1b\xc7\x77\xc6\x5f\x73\x3f\xc5\x56\xc0\x3f\x20\x0b\x45\xda\xfb\x45\x80\xdf\xc4\x76\x81\xbc\x48\x52\xb4\x6e\x81\xa2\x53\x04\x7b\x99\x55\x08\x4b\xa2\x4a\x52\xce\x58\x81\xbf\x7b\xf1\x3b\xe7\xac\x44\x2b\x8e\x23\x39\x4e\x8a\x00\x36\x40\x93\x5c\xee\xce\x9c\xfb\x79\x9e\x33\x3a\x3d\x8d\x9f\x6f\x46\x1f\x9f\xfb\x2b\xbf\xed\xf6\x7e\x8c\xfb\xb7\xf1\xf9\xe6\xeb\x7e\x7d\x35\x76\xfb\xee\x24\x7e\xf1\x43\xfc\xfd\x0f\xaf\xe2\x97\x2f\xbe\x7d\x75\x12\x9d\x9e\xc6\xbb\xcd\xcd\x76\xf0\xbb\x33\x3e\x5f\xbf\x3e\x3f\x7d\x93\x9e\xee\x5f\x9f\x9f\x5e\x76\x57\xeb\xc9\xef\xf6\xa7\x7b\x7f\xe1\x2f\xfd\x7e\xfb\xf6\x74\xd8\x5c\x4d\xeb\xf3\xaf\xbb\x9f\x77\x27\x6f\xbb\xcb\x8b\xc7\x3f\x70\x7b\xb3\xf5\x4f\x7b\x64\xdc\x0c\xaf\xfd\xf6\x69\xcf\xbc\xd9\x5d\xff\xe4\x1f\xbd\xd1\xed\xed\x8f\x77\x26\x3a\x99\x8d\x73\xbe\x89\xa2\xeb\x6e\x78\xdd\x9d\xfb\xf8\xee\xd6\x28\x8a\xd6\x97\xd7\x9b\xed\x3e\x5e\x46\x8b\xa3\xfe\xed\xde\xef\x8e\xa2\xc5\xd1\xb0\xb9\xbc\xde\xfa\xdd\xee\xf4\xfc\x76\x7d\xcd\x85\xe9\x72\xcf\xdb\x7a\xa3\xff\x9f\xae\x37\x37\xfb\xf5\x05\x5f\x36\xf2\xc0\x75\xb7\xff\xe9\x74\x5a\x5f\x78\x3e\x70\x61\xb7\xdf\xae\xaf\xce\xe5\xb7\xfd\xfa\xd2\x1f\x45\xab\x28\x9a\x6e\xae\x86\xd8\xc4\xf9\x37\xdf\x8d\x4b\x3e\xc4\xff\xfd\x3f\x6c\x7b\x1c\x5f\x75\x97\x3e\xd6\xc7\x56\xf1\x72\xbe\xea\xb7\xdb\xcd\x76\x15\xff\x12\x2d\xce\x6f\xe5\x5b\x7c\xf6\x2c\x46\xaa\x93\xef\xfd\xcf\x2c\xe2\xb7\x4b\x11\x9b\xef\xdf\xdc\x4c\x93\xdf\xca\xb2\xab\x55\xb4\x58\x4f\xf2\xc0\x3f\x3d\x8b\xaf\xd6\x17\x2c\xb1\xd8\xfa\xfd\xcd\xf6\x8a\xaf\xc7\xf1\x74\xb9\x3f\x79\xc9\xea\xd3\xf2\x88\x85\xe2\x7f\xfc\xef\x59\xfc\x8f\x37\x47\x2a\x89\xec\xb5\x8a\x16\xef\xa2\x68\xf1\xa6\xdb\xc6\xfd\xcd\x14\xeb\x3e\xba\x49\xb4\xf8\x51\xc5\x79\x16\xaf\x37\x27\xcf\x37\xd7\x6f\x97\x5f\xf5\x37\xd3\x71\x7c\x7e\xbb\x8a\x16\xc3\xc5\xcb\x59\xd2\x93\xe7\x17\x9b\x9d\x5f\xae\xa2\xcf\x25\x0f\xcb\xe8\xfa\xbf\xb1\x90\xdf\x6e\x55\x6e\xbb\xd8\xdf\x4c\x27\xdf\x20\xfa\x72\x75\xcc\x1d\xd1\xbb\x28\x8a\xf6\x6f\xaf\x7d\xdc\xed\x76\x7e\x8f\xcd\x6f\x86\x3d\xcb\x88\x82\xe6\x90\x68\xb1\xbe\x9a\x36\x71\x8c\x53\xbf\xbd\x9a\x36\x2f\x03\xcf\xc9\x63\xf7\x97\xe2\xf5\xd5\xde\x6f\xa7\x6e\xf0\x3c\xbe\xd9\x9d\xfc\x8b\xfd\x14\x2d\xbe\x7b\x51\x3e\xff\xc9\x0f\xaf\x77\x37\x97\xcb\x95\xf9\xf5\x6e\x05\x0b\x82\xf9\xee\x03\x11\x24\x0a\xec\x9f\x3d\xb4\xd8\xad\x6f\xef\xae\xad\xaf\xf6\x55\x11\x2d\x2e\x29\x03\xf6\xcf\xb6\xfd\x6e\x33\x7a\xf9\xe1\xd5\xda\x96\x20\xf0\x4e\xf8\x16\x2d\x2e\xc7\x72\x30\x69\x0e\x64\x91\x80\x5c\x4e\xeb\x87\xf2\xac\xe2\xef\xbb\x4b\x7f\x27\x36\x72\x99\x2d\xa7\xf5\x09\x12\x46\xef\x3e\xf2\xec\xbf\xaf\x6f\x79\x56\x24\x7d\xff\x51\x14\xf9\xe8\xa3\xe8\xb0\x5c\x1d\x6a\xf4\xfe\x02\xa8\xfd\x7b\x0b\xa0\xf0\x72\x75\xaf\xfc\xaf\x56\x10\x8b\x7c\x74\x91\x0f\xb8\xee\xc1\x2a\xf7\xe6\xfc\xe8\x4a\xdf\xee\x5e\xac\xb7\xcb\x55\xdc\x6f\x36\x17\x87\x2b\x74\x17\xbb\xdf\xb1\xe1\xdb\x9d\x9a\x50\xa3\xeb\x97\x77\x07\x4f\x5b\x08\x93\x95\x3f\xda\x83\xff\xfa\xfa\xfc\x3f\xd3\x57\xaf\xcf\xbf\xb3\x5a\xf8\x6a\xae\x6f\xcf\xa5\x7c\x76\x3f\xef\xfe\xab\xbb\xbc\x88\x9f\x59\x6c\x2f\x8f\x5c\x48\x27\x17\x9a\xde\x85\xa4\x71\x21\x49\x3e\xfc\x9a\x26\x17\xfa\xc2\x85\xb2\x70\xa1\x1a\x5d\xa8\x7a\x17\xc6\xde\x85\x62\x70\x21\xe5\xf7\xc1\x85\xce\xbb\x50\x72\x5f\xea\x42\xda\xb8\x50\x64\x2e\x64\x89\x0b\xf9\xe0\xc2\x94\xb9\x90\xb0\x07\x7b\x15\x2e\x64\x99\x0b\x43\xe3\x42\x53\xbb\x90\x57\x2e\x34\xa5\x0b\x4d\xe5\x42\x99\xb8\xd0\x66\x2e\xf8\x44\xef\x1b\x33\x17\xca\xcc\x85\xa2\x73\xa1\x6c\x5d\x68\x47\xbd\x7f\xaa\x5c\x18\x4a\x17\x3a\x9e\xef\x5d\xa8\x53\x17\xfa\x5e\xbf\x8f\x85\x0b\xd3\xe8\xc2\x54\xba\xe0\x4b\x17\x2a\xf6\x6b\x5d\x98\x90\x89\x7d\xbc\xae\x23\xf2\x4d\x2e\xb4\x93\x0b\x75\xa6\xeb\xe4\xac\x97\xeb\x5a\x6d\xe7\x42\x5d\xea\x7b\x57\xb9\x90\xb4\x2e\x94\xec\xdd\xa9\x2e\x75\xeb\xc2\x88\x1c\xde\x85\xca\x64\x2f\x26\x95\x1f\x7d\xfa\x4a\xf7\x4b\x2a\x5d\xb7\x6c\x5c\x48\xd1\xa7\x76\xa1\x6b\x5c\xc8\x1a\x95\xab\x68\x5d\xe8\x79\x36\x71\x61\x48\x5d\xc8\x06\x17\x92\x54\xaf\xf1\x0c\xfa\xb3\x46\x9f\xb9\xd0\x36\x2e\x74\xac\x3d\xa8\x5e\x5d\xea\x42\x9e\xb9\x90\x96\xfa\x8e\x7f\xd8\x1f\x5d\x2b\xf6\xe6\x99\xc4\x05\x3f\xb8\x90\x95\xaa\x57\x56\xab\x9f\xf0\x21\xf2\x79\x64\x2e\xd5\x06\xec\x3f\x74\x2e\xa4\xde\x85\xa1\x72\x21\x45\xd6\xce\x85\xb6\x50\xbf\x66\xd8\xbf\x50\x79\xf0\x81\x6f\x5c\xc8\xb1\x71\xe7\x42\xd6\xab\x6d\x8a\xde\x85\x34\x57\xd9\xf1\xb1\xd8\x64\x54\x59\x93\xd1\x85\x7a\x54\x9b\x77\xb9\x0b\x69\xe7\x42\x65\x32\xf6\xf8\x28\xd7\x35\xb0\x57\x83\xfd\x2b\x7d\xf5\x8d\x0b\x35\xeb\xd5\x2e\x14\xb9\x0b\x1e\xff\x55\xe6\x63\xec\x90\xa8\x7f\xfa\x52\x63\xab\xb0\x7d\xb0\x11\xf7\xa0\x17\x71\x5a\xd4\x7a\x2d\xe9\x54\x3e\xdf\xaa\x7c\xa3\xb7\x18\xec\xd4\xff\xd8\x2f\xf7\x1a\xc7\xc4\x76\x71\x90\x1b\xc4\x33\xb6\x20\x06\x4a\x62\x3e\x75\xa1\xce\x55\xb6\xae\xd0\xdf\x91\x85\x58\x9f\x58\x37\xd7\xfd\x0b\x8b\xff\x71\x50\xbf\x60\x7f\xf2\x82\x38\x4a\x72\x8d\xb3\x96\xfb\x0a\x17\x9a\xc4\x85\xd1\x62\x01\x5d\xaa\x56\x73\xb4\xaf\xd5\xd7\xa9\xad\x2d\x79\x51\x6b\xee\x4c\xc4\x24\x39\xda\x69\x5e\x66\xb9\xc6\x43\x97\xe9\xda\xe2\x6f\x64\x28\x5d\x28\x4b\xf5\x2f\xfe\xe4\x1a\xb1\x85\x2c\xc4\x77\x91\x6a\x8e\xb3\x47\x3e\xda\x6f\x8d\xda\x38\x2b\xd4\x0f\xa9\xc5\x08\x3e\x6c\x26\x17\x86\xc9\x62\xd2\x6b\xec\xe2\x5f\xfc\x49\xfe\x64\xa9\xca\xc1\xda\xc4\x0d\x39\x29\xfe\x1b\x35\xe7\x88\x1b\xec\xdf\xb6\x1a\x7b\xec\xc3\xbe\xe4\x95\xe4\x43\xa6\x3e\xa6\x1e\x10\xaf\x12\x27\xde\x05\xef\xd5\x4e\xe4\x5e\x4d\x3c\x9b\xcf\x78\x2f\x7b\xfb\xde\xab\x5d\x88\xa7\xd1\x72\x8d\x18\x6b\x2b\xab\x01\xb9\xd9\xb1\x50\x5b\x8e\x9d\xf9\x1c\xb9\xbd\xc6\x18\x36\xed\xbd\x0b\x75\xad\xba\x24\xe8\x3d\xe9\x33\xe4\x45\xdb\x6b\x9d\xaa\x88\xe7\x42\x73\x22\x31\x7f\xb0\x26\x7e\x20\x1e\x86\x44\x65\x26\xbe\xd3\x83\x18\x42\x46\x7c\xd3\x9a\x3d\xa9\x0d\x53\xab\xef\x5c\x43\x77\xec\x3e\x36\xea\x17\xa9\xb5\xa5\xca\x43\x0e\x22\x33\x36\xa5\x96\x66\x95\xda\x7c\x28\xf4\x59\xe2\x0a\x7d\x86\xc1\x85\xa1\xd5\xdc\x45\x4e\xae\xb3\x1e\xb5\x50\xea\x68\xe3\x42\x9f\x6b\xcd\xc2\xde\xb9\xf9\xde\xa7\x2e\x8c\xb9\xd5\xec\x5e\x6b\x51\x4a\x8d\x18\x35\xe7\x0b\xaf\x3e\xc9\x13\xb5\x05\xfe\xaa\xc8\x13\x62\xa1\x56\x7d\xc8\x8d\xbc\xd1\xf8\xc5\x4f\xe4\x43\x52\x68\xbd\xcb\xd1\xb3\x77\xa1\x21\xc6\x2c\x37\xc7\x52\x63\x11\xff\xa7\xfc\x3e\xaa\xbf\xf8\x4c\x5c\x77\xad\xd6\xba\x09\xd9\x6a\xf5\x07\xfd\x02\xb9\xc8\x7f\xea\x8c\xcf\xee\xed\x52\x9b\xbd\xa4\x7f\x0c\x5a\xfb\x6a\xaf\xb5\x9b\xeb\xac\x8d\xbc\xd8\xce\x9b\x6c\xac\x87\xbd\x78\x9e\x9c\xc5\xee\xc4\xf7\x9c\x6b\x79\xa7\xfe\x23\x17\xa4\x0e\xe7\x9a\x27\xe5\x68\x3e\x62\xfd\x49\xf3\x86\xd8\xae\x7b\x8d\x4d\x62\xcf\x5b\x8c\xa7\x76\x3f\xf6\xa5\x2e\x0d\x99\xbe\x88\x5b\x72\x72\xb2\x7a\x82\xcc\x52\x77\x1b\xb5\xdd\x64\xf9\x46\xbd\x41\x5e\xea\x2f\xf9\x85\x8f\x25\xfe\xad\x06\xe3\x7f\xec\x43\x1f\xa0\xc6\x12\x7f\xc4\x1e\x3d\xb2\x1f\xd5\x06\xc4\x76\xd3\xaa\xef\x2b\xeb\x63\xc4\x73\x6a\xbd\x53\x7a\x41\xa6\x3a\xb5\x56\x17\x90\x19\x79\xb1\x2f\x35\x8a\xd8\x6d\x06\xb5\x3f\x75\x9c\x5e\x49\xbf\xe9\x88\xb9\x5e\x65\x26\x1f\xa9\x37\x52\xab\xad\x86\xb1\x36\xb1\x8c\x6c\xf4\xec\x72\xee\xd9\x96\x4b\xe8\xc2\x67\xa9\x3b\xad\xf6\x0e\x6c\x59\x0e\x6a\x93\x3a\xd1\xfe\x8d\xbd\x58\x8f\x18\x1a\x47\x17\xb2\x4e\x73\xbd\xee\x14\xa3\xa0\x13\x76\x20\x1f\x89\xad\x21\xd7\x17\xf7\x4a\xdd\xea\xb5\x0f\x50\x93\xc4\x5e\x93\xe6\x24\x3a\xe5\xd6\xff\xc7\xc4\xfc\xd9\xe9\x0b\xbb\xb3\x5e\x6f\xb1\x44\xaf\xa9\xed\x1a\xfa\xa3\x23\xf6\xa7\xc7\xf0\xac\xf8\xa3\xd6\x5c\x4b\x7b\xed\xa9\xc4\x17\xbd\x98\x9c\xa0\x1f\x1c\x62\x2d\x79\x55\xd6\xd7\x47\x8d\x4d\xfc\x92\xd4\xf3\x7d\x47\x0f\x68\xe4\xe3\x80\x9f\xb1\x9f\x0f\xb1\xca\x99\x23\x1d\xb0\xd2\x68\xb1\x78\x1a\xae\x3c\x8e\x16\x8b\xa3\x27\x8d\x17\x8e\x8e\xa3\xc5\x4a\x78\xd8\x27\x68\x83\x22\xff\x2c\xd4\xed\x50\x11\xe1\x6e\x77\x0c\xf9\x53\xcc\xf3\x7b\x04\xf5\x8e\x57\x0a\x31\xbc\xdf\x64\x46\xed\xdc\x0f\x39\x3a\x8b\x9f\x6e\x0c\xe1\x78\x67\x71\xda\x16\x35\xdf\x0e\xf8\xc5\x59\x7c\x24\x37\x40\x7d\xce\x0e\x99\xd1\xb2\xc8\x92\x95\xfd\x02\xa5\x39\x53\xca\xf3\x1f\x57\xeb\xb0\x4c\x8f\x63\xf9\x0d\x69\x3b\x44\xfd\x4a\xec\xf5\x8b\x18\xe9\x2c\x36\x5b\xa1\xc7\x99\xfc\x7f\xc0\x96\xbb\xe3\x4f\x21\x18\xb7\x37\x5b\xff\x87\x29\x46\x69\x14\x23\xb5\xf6\x08\x74\x23\xc5\x48\x41\xca\x77\xfe\x80\x62\xd0\x8a\x27\x6b\x03\x5c\x03\x2e\x02\x9d\x28\x37\xd2\xc2\xbc\xb6\x66\x60\x0b\xbf\x03\x03\x28\x17\xc0\xd4\xc2\xca\x25\x25\x86\x52\x09\x4c\x61\x4f\xa1\x31\xa5\xca\x41\x9b\xa0\xcd\xf1\x3c\xa5\x98\x16\x3b\xa7\x3d\x25\x90\xcf\xb4\x48\xda\x0f\xa5\xf5\x90\x62\x48\xfb\xae\xad\x4c\x7a\x6d\x6b\xb4\x3d\xca\x8a\xa4\x76\xae\xb0\x42\x60\x5f\xa6\x7b\x09\x8c\xee\xf4\xde\xcc\xe0\x01\xad\x97\x36\x4d\x39\xa3\x74\xf0\x3b\x90\x09\xb8\x09\x74\xa5\xc4\xa2\x33\x90\x9b\x52\x33\xd3\x0b\x5e\x4d\xa3\x36\x93\x36\x53\x19\x84\x4f\xb5\x6d\x0b\xc5\x48\x14\x12\x4b\x8b\xeb\xd4\x4f\xbd\x95\xa0\xc2\xd6\xa7\xad\x8f\x46\x31\xf0\x07\x65\x53\xe8\x51\x66\xe5\xbe\xd4\x92\x8b\x3f\x68\x93\x33\xb5\xc1\xaf\xbc\x0b\x84\xcd\xd5\x1f\xe8\x2d\x6d\xd9\x60\xd4\x60\x25\x1f\x1d\xd0\x91\xd6\x23\xbe\x36\x98\x0c\xa4\xe2\x5e\xda\xd5\x94\xa8\x4c\xd2\xae\xbc\xd1\x8f\x51\xef\x41\x26\x5a\x39\xcf\x13\x1f\xc0\x1c\x5a\x04\x10\xa2\xb4\xcf\xd8\x87\xd6\x83\xfd\x81\x10\xb4\x63\x89\xa9\x49\x7d\x0f\xdd\x60\x5f\x20\x0e\xd0\x42\x60\x79\xa2\xed\x07\xe8\x41\xdb\xa1\x15\xd2\x4a\x80\xd2\x02\x63\xbd\xc2\xa6\xc4\xec\x24\x10\xc5\x5b\xec\x1a\x0c\x04\x12\xa3\x27\x70\x99\x98\x41\x5e\x20\xd2\x5c\xfa\x05\x72\x34\xda\xb2\xbc\x41\x6d\xf6\xa8\x67\x68\x58\x68\xac\xe0\x93\x19\x56\xa1\x63\x6f\x6d\x11\xe8\x05\x3d\xa0\xcd\x43\x63\x68\x93\xe8\x83\xcd\xd3\x4a\x21\x21\x2d\x9a\x76\x0a\xdd\xf3\xc0\x80\x4e\x73\x8e\xb6\xc4\xbe\x3c\x87\x7c\xb5\xe5\x2b\xb1\x82\xbd\xd1\x1f\xa8\xc7\x35\xa0\x29\xf1\x82\xdd\x66\x19\xc8\x93\xcc\xe2\x0e\xdb\x96\x76\x7f\x67\x34\xd8\x1b\xc4\xc3\x37\xc4\x15\xf1\x21\x54\xdf\x5a\x60\x33\xb7\xcb\x51\xf7\x02\x1e\xf3\x6a\xc6\x7b\x7b\x01\x77\x58\x1f\xdb\x74\xb6\x67\xe7\xd5\xfe\xc0\x07\xec\x4c\x3e\xb2\x36\xef\xc0\x38\x7c\x0e\x3d\x03\x12\x91\x87\x40\xaa\x99\x0a\xa4\x46\x2f\xb1\x11\xeb\xf2\x1d\x9f\xcb\x28\xc1\xae\x93\x97\xd8\x1c\x68\x25\xba\x7b\xa5\x1f\x33\x5d\x1b\x2c\x77\xa7\x51\x63\x08\x7d\x04\x9e\xb4\x6a\xd3\xc1\x20\x6d\x39\x8f\x21\x46\x8b\xd1\x49\x65\x80\x6a\x4a\x6e\x78\x83\x3c\xbd\xc1\xbc\x46\x75\xc6\xd6\xa3\x51\x2a\xf2\x5c\x72\x3d\x33\x9d\xbc\xc1\xef\x49\xbf\xe3\x57\xc9\x95\x41\x6d\x01\x75\x67\x6d\x62\x0b\x3d\x91\x05\x78\x25\x6b\xb7\xea\xef\xda\x46\x1a\xc0\x69\xe4\xeb\x67\x88\x5c\x28\x24\x14\x58\x67\x79\xc5\x7a\xbe\x32\xff\xb6\xea\x7b\x64\xe6\x3e\x68\x94\x8c\x66\x3a\x85\x6c\xf8\x11\x99\x81\x3e\x6d\xa3\xf9\x82\xaf\xd8\x53\x46\x19\xf8\x78\x54\x9b\x8a\xfe\xb5\xe6\x28\xb6\x9c\xa9\x07\xb9\x09\x8c\x02\x9e\x66\x56\x43\xa0\x63\xc4\x2b\xfe\xa2\x66\x23\x0b\xf1\x0d\xe4\xa2\xbe\xf3\x7b\x69\x74\x03\xb8\x84\x2f\xc8\x07\xe4\x9d\x2c\x9e\x52\xcb\x37\xa9\x47\xa3\xc6\x24\x75\x16\x19\x79\x11\xab\xe4\x1c\xb4\x84\x3c\x61\x0d\x19\x33\x25\xfa\x2e\xb5\xa1\xbe\xa7\xe2\xde\x46\x0f\xdc\x8b\x1c\xec\x43\xde\x50\xa7\x89\x17\xea\x29\x76\x26\xa6\xf0\x19\xb1\x22\xbd\xc4\xc6\x0d\xc8\x8b\x8d\x88\x63\xfa\x91\x50\xda\x5a\xe5\x17\xfa\x5d\xa9\x2d\x84\x5a\x0f\x5a\x73\x81\xcc\xc4\x29\xd7\xd1\xb9\xb2\xd1\x0e\x7b\x51\x6f\x3f\x44\x3d\x6a\xf3\x15\x79\x07\x55\x01\x82\x52\x83\xd8\xb3\x32\xff\xb4\x46\x9f\x80\x99\xd4\xf5\xd1\x20\x7b\x6e\xe3\x11\xea\x02\xb4\x18\x3d\xa1\x2d\xa9\x57\xb8\x8d\xae\xa9\x8d\x91\xf0\xa1\x37\xb8\x4d\x5c\xe5\x46\x09\x67\xc8\x0d\x05\xc6\x9f\xa5\xd9\xae\xcb\xd4\xe6\xc4\x64\x65\x23\x33\xa8\x05\xd7\xa1\x88\x6d\x6e\x76\xb7\x91\x23\x3e\x22\x9e\xa1\x88\xd4\xb5\xca\x28\x1b\x3d\x8b\xde\x42\x1c\xd1\xbb\x4b\x1b\xab\xb1\x36\xf6\xa5\xdf\x94\x36\x4e\x60\x7f\x79\xd5\x2a\x13\x7a\xca\xa8\xd2\x6b\x8c\x93\xf3\x79\xa5\x39\x4e\x7f\xaa\x8d\x3a\x09\x2d\x2d\x6c\x8c\x69\x63\x95\xd4\xc6\x6b\xa5\xf5\x65\x72\x07\x39\x79\x1e\x9f\x88\x5f\xac\xbf\xb0\x3e\x3e\x11\xac\x63\x3d\x01\x5f\x51\xaf\x84\x4e\x78\xb5\x13\x3d\xb9\xb3\x51\x83\x7c\xaf\x75\x4c\x97\x1a\xdd\xc0\xb7\x62\xb3\x5c\xe3\xb0\xb6\xdf\x25\xff\x3a\xed\x23\xd4\x16\xf9\xee\xd5\xdf\xb5\xd1\xca\xd4\x46\x28\xf8\x95\xda\xf1\x10\x83\x4d\xb6\x47\x67\xbf\x49\x9f\x6b\x0f\xb1\xdb\x53\xa9\xc7\x0c\x09\xff\x34\xf2\x31\x6f\xf0\x04\xfa\x71\x77\x58\xf9\x89\x04\x64\xde\xf2\x33\x52\x90\x07\x66\xfa\xcb\x49\xc8\x7b\x26\x31\x1a\x92\x25\xe5\xdf\x92\x86\xe8\xc9\xf2\x1f\xe7\x21\xfd\x01\x0f\x19\x1f\xc7\x43\xc8\x61\xc1\xa8\xa9\xe6\xe9\xdd\x18\x3c\xd7\x9a\x2e\xfc\x23\x57\xbc\x54\x18\x9e\xe4\x5a\x65\x58\x1d\xcc\x04\xde\x90\x91\x7a\x6d\x7d\x23\xb3\xba\x56\xe8\x28\x5a\xc6\x84\x86\xd9\x4a\x93\x65\xee\x8b\x82\x23\x7b\xcd\x7d\xea\x64\x62\x63\x65\x19\xb9\x0f\xca\x3d\xa4\x2e\xd4\x3a\x3a\x01\x4f\xd2\xe7\x1b\xc3\xf5\xd2\xcb\x2a\xad\x23\x70\x0f\x19\xd1\xd9\xb3\xc8\x4b\x5d\xa2\xee\x65\xa5\x71\x13\x1b\xd7\xd1\x7f\xe9\x51\x72\x4c\x90\xa8\x4c\xd4\x70\x70\xab\x60\xd7\xc4\x8e\x14\x06\x1d\xe5\x8d\x56\xb7\xe9\xcf\x95\xd9\x4b\x8e\x69\x12\xd3\x3d\xd5\x9a\xed\x47\xc5\x53\xe8\x01\xc6\x95\xf5\x5a\x5d\xaf\xae\x1e\xc7\x41\xf0\x3b\xcf\xf5\x36\xa2\x64\x0f\x7a\x17\xbe\x02\xd7\xc8\x88\x39\x35\xd9\x7b\xe5\x47\xe8\x24\x7a\xdb\xb1\xc2\x54\xe8\x9a\x62\xd7\x46\x47\x32\xb9\xe1\x00\xe1\x72\x95\xdd\x33\xea\x88\xb0\xce\xcc\xae\xa9\xfa\x45\xc6\x8d\xad\xf6\x81\x0f\x71\x90\xfa\x11\x1c\x24\xfb\x7f\xe0\x20\xf9\x63\x39\xc8\xa0\xb6\xad\x1f\x70\x10\xf4\x06\xd3\xfc\x16\x07\xe9\xaa\x07\x1c\xa4\x7d\x9f\x83\x8c\x0f\x39\x48\x6d\xb8\xb5\x7e\x1a\x07\x21\x4e\x88\x31\x7c\x43\xfe\x82\x5b\x3a\x1b\x8d\xb7\x86\x61\x07\xc3\x37\x72\xdc\xe3\x8d\xaf\x1b\x76\xc6\x56\xc8\x8b\x7f\xc0\x4a\xd8\xa9\xb6\x31\x66\x63\x58\x16\xbf\x55\x33\xa6\xa8\x15\xeb\x36\xe6\xf7\xcc\x8e\xca\x88\xab\xd1\x8e\x25\xaa\x41\x79\x65\x6e\x78\x93\xfe\xcc\x5a\x60\x90\xdc\x7c\x23\x38\xd4\xc6\xdb\xde\x8e\x3d\xc1\x22\x0f\x79\x08\x79\x0a\xb6\x44\xa7\xc2\x8e\x63\xd1\x0d\x3c\x4e\xcd\xe2\x1d\x9d\xc1\x02\xe8\x85\x8c\xd8\xd2\x1b\x5f\x91\xa3\x9d\x5a\x31\x0c\xd8\x1c\x1e\xc0\x5e\xde\xb0\x13\xf8\x02\xfc\x49\xde\x10\x0b\xc4\x91\xe8\x54\x2b\x3e\xeb\x6c\xe6\x00\xe6\xcf\xed\x68\x02\x1f\x63\x17\xd6\x4e\x6c\x66\x00\xde\x24\x9e\x88\x05\xc1\x31\x36\x5a\xcf\xac\x2e\xc8\x18\x7d\x30\xdf\x19\xd7\x28\xac\x46\x4d\x36\x2f\xc1\xe7\x70\x7c\x6a\x12\x76\x20\x6f\x47\xab\x4d\x3c\x97\x1a\x7f\xe8\x6d\xdf\xca\xfc\x5c\x98\xbc\xd5\xf8\x81\x23\x90\x42\x73\x99\x78\xa3\x9e\x90\x2b\xad\x61\x2d\x6a\xd5\x60\xf5\x35\xb3\x1c\x00\xa3\x52\x67\x33\x1b\x95\x13\x5b\x60\x79\xea\x14\xb9\x91\x19\x97\x22\x37\x33\x9b\x4d\xa1\xe3\x64\xc7\x4a\xd4\x59\xf2\xa2\x37\xde\x22\x47\x63\xb5\xd5\x86\x46\x7d\x3c\xda\x38\x5f\xf6\xe8\xed\x78\xa9\xd2\xde\x44\xec\x23\x5b\x6f\xc7\x89\x70\x43\xf4\x1f\x33\x3d\x8a\x21\xc6\x47\xd3\x9b\x5a\x4c\x5d\x23\xbe\xd1\x8f\xba\x21\x7d\x63\x3e\x42\x6e\x14\xdf\x8f\xed\xfd\x6c\x88\x1a\x47\xde\x08\x2e\xcf\x8d\xff\xd9\xf3\xa5\x8d\xde\x53\x3b\x22\xae\x6c\x2d\xee\x27\x5e\xa9\x5b\xf4\x51\x89\xe5\x49\xeb\x83\x9f\x8f\xd6\x6b\x3d\xf6\x42\xa7\xce\x66\x0e\x72\xd4\x6a\xf1\x0d\x87\x49\xdb\xfb\x3a\x4e\x5f\x2c\x8c\x37\x94\x76\x34\xcb\x9a\xf4\x44\x6a\x71\x69\xc7\x78\x12\xab\x83\xda\x3e\xb7\xb9\x1b\x5c\xac\xb7\xe3\x50\x62\x17\x7b\x50\x3b\xc5\xcf\x36\x4f\x20\x27\x6a\x3b\x6e\x95\x23\xa8\x41\x79\x52\x66\xc7\x1e\x33\xb7\x1e\xac\x67\xd1\x87\xe5\xf8\xd2\x8e\x17\x6b\xe3\x91\x60\x01\xfc\xd0\xd8\x8c\x4a\xec\x6c\x73\x48\xde\x91\x95\x9e\x21\x73\x82\xc2\xfc\xdc\xeb\x4b\xfe\x04\x60\xd2\xfa\x00\x3f\xa7\xfe\x4d\x36\xb7\x6b\x6c\xfc\x2f\xc7\x2b\x83\xf6\x2c\xf9\x93\x8a\xd4\xb8\x6f\xa2\xbd\x87\x5e\x2a\x5c\xc3\xfe\x14\x60\xb4\xba\x37\x8c\xf7\xc7\xa5\xe8\xcc\xda\xb2\x7e\xad\x7b\x72\xdd\x1b\x87\x20\x66\x58\x5f\xb8\x44\x62\xb5\xae\xd1\xfa\x32\x19\x17\x90\xba\x66\xbd\x0a\xfb\xca\x91\x96\xcd\x13\x7a\x3b\x6a\x4d\x6d\x46\x8a\x0f\x52\xab\x27\xec\x27\x9c\xcc\xfa\xf4\xdc\x1f\xa8\x87\x79\xfd\x81\xe3\x8f\x41\xe3\x9d\x5a\x91\x59\xed\xf9\x64\x0e\x72\x8f\x07\xff\x2c\x12\x72\xbf\xc3\xe3\x59\xc8\xc1\xdf\x3f\x7e\x1a\x0d\xb9\xdf\xf4\xf3\xf1\x90\x5f\x99\xea\xaf\x26\x22\x0f\xac\x72\xc7\x44\xaa\xe4\xef\xc8\x44\xec\xef\x55\xbf\x50\x91\x2f\x54\xe4\x0b\x15\xf9\x42\x45\x3e\x13\x15\xf9\xbf\x00\x00\x00\xff\xff\x66\xb9\x50\xdf\x00\x30\x00\x00")

func bindataPkgV1TkgManifestTelemetryZzgeneratedBindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataPkgV1TkgManifestTelemetryZzgeneratedBindataGo,
		"pkg/v1/tkg/manifest/telemetry/zz_generated.bindata.go",
	)
}

func bindataPkgV1TkgManifestTelemetryZzgeneratedBindataGo() (*asset, error) {
	bytes, err := bindataPkgV1TkgManifestTelemetryZzgeneratedBindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name:        "pkg/v1/tkg/manifest/telemetry/zz_generated.bindata.go",
		size:        28672,
		md5checksum: "",
		mode:        os.FileMode(420),
		modTime:     time.Unix(1, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"pkg/v1/tkg/manifest/telemetry/config-aws.yaml":         bindataPkgV1TkgManifestTelemetryConfigawsYaml,
	"pkg/v1/tkg/manifest/telemetry/config-azure.yaml":       bindataPkgV1TkgManifestTelemetryConfigazureYaml,
	"pkg/v1/tkg/manifest/telemetry/config-docker.yaml":      bindataPkgV1TkgManifestTelemetryConfigdockerYaml,
	"pkg/v1/tkg/manifest/telemetry/config-vsphere.yaml":     bindataPkgV1TkgManifestTelemetryConfigvsphereYaml,
	"pkg/v1/tkg/manifest/telemetry/zz_generated.bindata.go": bindataPkgV1TkgManifestTelemetryZzgeneratedBindataGo,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op:   "open",
					Path: name,
					Err:  os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op:   "open",
			Path: name,
			Err:  os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"pkg": {Func: nil, Children: map[string]*bintree{
		"v1": {Func: nil, Children: map[string]*bintree{
			"tkg": {Func: nil, Children: map[string]*bintree{
				"manifest": {Func: nil, Children: map[string]*bintree{
					"telemetry": {Func: nil, Children: map[string]*bintree{
						"config-aws.yaml":         {Func: bindataPkgV1TkgManifestTelemetryConfigawsYaml, Children: map[string]*bintree{}},
						"config-azure.yaml":       {Func: bindataPkgV1TkgManifestTelemetryConfigazureYaml, Children: map[string]*bintree{}},
						"config-docker.yaml":      {Func: bindataPkgV1TkgManifestTelemetryConfigdockerYaml, Children: map[string]*bintree{}},
						"config-vsphere.yaml":     {Func: bindataPkgV1TkgManifestTelemetryConfigvsphereYaml, Children: map[string]*bintree{}},
						"zz_generated.bindata.go": {Func: bindataPkgV1TkgManifestTelemetryZzgeneratedBindataGo, Children: map[string]*bintree{}},
					}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
