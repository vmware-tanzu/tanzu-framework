import * as models from '../models';
export declare function isFile(arg: any): arg is File;
export declare function isAviCloud(arg: any): arg is models.AviCloud;
export declare function isAviConfig(arg: any): arg is models.AviConfig;
export declare function isAviControllerParams(arg: any): arg is models.AviControllerParams;
export declare function isAviNetworkParams(arg: any): arg is models.AviNetworkParams;
export declare function isAviServiceEngineGroup(arg: any): arg is models.AviServiceEngineGroup;
export declare function isAviSubnet(arg: any): arg is models.AviSubnet;
export declare function isAviVipNetwork(arg: any): arg is models.AviVipNetwork;
export declare function isAWSAccountParams(arg: any): arg is models.AWSAccountParams;
export declare function isAWSAvailabilityZone(arg: any): arg is models.AWSAvailabilityZone;
export declare function isAWSNodeAz(arg: any): arg is models.AWSNodeAz;
export declare function isAWSRegionalClusterParams(arg: any): arg is models.AWSRegionalClusterParams;
export declare function isAWSRoute(arg: any): arg is models.AWSRoute;
export declare function isAWSRouteTable(arg: any): arg is models.AWSRouteTable;
export declare function isAWSSubnet(arg: any): arg is models.AWSSubnet;
export declare function isAWSVirtualMachine(arg: any): arg is models.AWSVirtualMachine;
export declare function isAWSVpc(arg: any): arg is models.AWSVpc;
export declare function isAzureAccountParams(arg: any): arg is models.AzureAccountParams;
export declare function isAzureInstanceType(arg: any): arg is models.AzureInstanceType;
export declare function isAzureLocation(arg: any): arg is models.AzureLocation;
export declare function isAzureRegionalClusterParams(arg: any): arg is models.AzureRegionalClusterParams;
export declare function isAzureResourceGroup(arg: any): arg is models.AzureResourceGroup;
export declare function isAzureSubnet(arg: any): arg is models.AzureSubnet;
export declare function isAzureVirtualMachine(arg: any): arg is models.AzureVirtualMachine;
export declare function isAzureVirtualNetwork(arg: any): arg is models.AzureVirtualNetwork;
export declare function isConfigFile(arg: any): arg is models.ConfigFile;
export declare function isConfigFileInfo(arg: any): arg is models.ConfigFileInfo;
export declare function isDockerDaemonStatus(arg: any): arg is models.DockerDaemonStatus;
export declare function isDockerRegionalClusterParams(arg: any): arg is models.DockerRegionalClusterParams;
export declare function isError(arg: any): arg is models.Error;
export declare function isFeatureMap(arg: any): arg is models.FeatureMap;
export declare function isFeatures(arg: any): arg is models.Features;
export declare function isHTTPProxyConfiguration(arg: any): arg is models.HTTPProxyConfiguration;
export declare function isIdentityManagementConfig(arg: any): arg is models.IdentityManagementConfig;
export declare function isLdapParams(arg: any): arg is models.LdapParams;
export declare function isLdapTestResult(arg: any): arg is models.LdapTestResult;
export declare function isNodeType(arg: any): arg is models.NodeType;
export declare function isOSInfo(arg: any): arg is models.OSInfo;
export declare function isProviderInfo(arg: any): arg is models.ProviderInfo;
export declare function isTKGNetwork(arg: any): arg is models.TKGNetwork;
export declare function isVpc(arg: any): arg is models.Vpc;
export declare function isVSphereAvailabilityZone(arg: any): arg is models.VSphereAvailabilityZone;
export declare function isVSphereCredentials(arg: any): arg is models.VSphereCredentials;
export declare function isVSphereDatacenter(arg: any): arg is models.VSphereDatacenter;
export declare function isVSphereDatastore(arg: any): arg is models.VSphereDatastore;
export declare function isVSphereFolder(arg: any): arg is models.VSphereFolder;
export declare function isVsphereInfo(arg: any): arg is models.VsphereInfo;
export declare function isVSphereManagementObject(arg: any): arg is models.VSphereManagementObject;
export declare function isVSphereNetwork(arg: any): arg is models.VSphereNetwork;
export declare function isVSphereRegion(arg: any): arg is models.VSphereRegion;
export declare function isVsphereRegionalClusterParams(arg: any): arg is models.VsphereRegionalClusterParams;
export declare function isVSphereResourcePool(arg: any): arg is models.VSphereResourcePool;
export declare function isVSphereThumbprint(arg: any): arg is models.VSphereThumbprint;
export declare function isVSphereVirtualMachine(arg: any): arg is models.VSphereVirtualMachine;
