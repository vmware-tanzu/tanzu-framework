{"version":3,"file":"tanzu-management-cluster-ng-api.js","sources":["../../../projects/tanzu-management-cluster-ng-api/src/lib/swagger/api-client.service.ts","../../../projects/tanzu-management-cluster-ng-api/src/lib/swagger/guards/index.ts","../../../projects/tanzu-management-cluster-ng-api/src/lib/swagger/guarded-api-client.service.ts","../../../projects/tanzu-management-cluster-ng-api/src/lib/swagger/index.ts","../../../projects/tanzu-management-cluster-ng-api/src/lib/swagger/models/index.ts","../../../projects/tanzu-management-cluster-ng-api/src/public-api.ts","../../../projects/tanzu-management-cluster-ng-api/src/tanzu-management-cluster-ng-api.ts"],"sourcesContent":["/* tslint:disable */\n\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { DefaultHttpOptions, HttpOptions, APIClientInterface } from './';\n\nimport * as models from './models';\n\nexport const USE_DOMAIN = new InjectionToken<string>('APIClient_USE_DOMAIN');\nexport const USE_HTTP_OPTIONS = new InjectionToken<HttpOptions>('APIClient_USE_HTTP_OPTIONS');\n\ntype APIHttpOptions = HttpOptions & {\n  headers: HttpHeaders;\n  params: HttpParams;\n  responseType?: 'arraybuffer' | 'blob' | 'text' | 'json';\n};\n\n/**\n * Created with https://github.com/flowup/api-client-generator\n */\n@Injectable()\nexport class APIClient implements APIClientInterface {\n\n  readonly options: APIHttpOptions;\n\n  readonly domain: string = `//${window.location.hostname}${window.location.port ? ':'+window.location.port : ''}`;\n\n  constructor(private readonly http: HttpClient,\n              @Optional() @Inject(USE_DOMAIN) domain?: string,\n              @Optional() @Inject(USE_HTTP_OPTIONS) options?: DefaultHttpOptions) {\n\n    if (domain != null) {\n      this.domain = domain;\n    }\n\n    this.options = {\n      headers: new HttpHeaders(options && options.headers ? options.headers : {}),\n      params: new HttpParams(options && options.params ? options.params : {}),\n      ...(options && options.reportProgress ? { reportProgress: options.reportProgress } : {}),\n      ...(options && options.withCredentials ? { withCredentials: options.withCredentials } : {})\n    };\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getUI(\n    requestHttpOptions?: HttpOptions\n  ): Observable<File> {\n    const path = `/`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n      responseType: 'blob',\n    };\n\n    return this.sendRequest<File>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getUIFile(\n    args: {\n      filename: string,  // UI file name\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<File> {\n    const path = `/${args.filename}`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n      responseType: 'blob',\n    };\n\n    return this.sendRequest<File>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getFeatureFlags(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.Features> {\n    const path = `/api/features`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.Features>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getTanzuEdition(\n    requestHttpOptions?: HttpOptions\n  ): Observable<string> {\n    const path = `/api/edition`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<string>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 201 ] HTTP response code.\n   */\n  verifyAccount(\n    args: {\n      credentials?: models.AviControllerParams,  // (optional) Avi controller credentials\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<void> {\n    const path = `/api/avi`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<void>('POST', path, options, JSON.stringify(args.credentials));\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  verifyLdapConnect(\n    args: {\n      credentials?: models.LdapParams,  // (optional) LDAP configuration\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.LdapTestResult> {\n    const path = `/api/ldap/connect`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.LdapTestResult>('POST', path, options, JSON.stringify(args.credentials));\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  verifyLdapBind(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.LdapTestResult> {\n    const path = `/api/ldap/bind`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.LdapTestResult>('POST', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  verifyLdapUserSearch(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.LdapTestResult> {\n    const path = `/api/ldap/users/search`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.LdapTestResult>('POST', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  verifyLdapGroupSearch(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.LdapTestResult> {\n    const path = `/api/ldap/groups/search`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.LdapTestResult>('POST', path, options);\n  }\n\n  /**\n   * Response generated for [ 201 ] HTTP response code.\n   */\n  verifyLdapCloseConnection(\n    requestHttpOptions?: HttpOptions\n  ): Observable<void> {\n    const path = `/api/ldap/disconnect`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<void>('POST', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAviClouds(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AviCloud[]> {\n    const path = `/api/avi/clouds`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.AviCloud[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAviServiceEngineGroups(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AviServiceEngineGroup[]> {\n    const path = `/api/avi/serviceenginegroups`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.AviServiceEngineGroup[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAviVipNetworks(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AviVipNetwork[]> {\n    const path = `/api/avi/vipnetworks`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.AviVipNetwork[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getProvider(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.ProviderInfo> {\n    const path = `/api/providers`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.ProviderInfo>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getVsphereThumbprint(\n    args: {\n      host: string,  // vSphere host\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereThumbprint> {\n    const path = `/api/providers/vsphere/thumbprint`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    if ('host' in args) {\n      options.params = options.params.set('host', String(args.host));\n    }\n    return this.sendRequest<models.VSphereThumbprint>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 201 ] HTTP response code.\n   */\n  setVSphereEndpoint(\n    args: {\n      credentials?: models.VSphereCredentials,  // (optional) vSphere credentials\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VsphereInfo> {\n    const path = `/api/providers/vsphere`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.VsphereInfo>('POST', path, options, JSON.stringify(args.credentials));\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getVSphereDatacenters(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereDatacenter[]> {\n    const path = `/api/providers/vsphere/datacenters`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.VSphereDatacenter[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getVSphereDatastores(\n    args: {\n      dc: string,  // datacenter managed object Id, e.g. datacenter-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereDatastore[]> {\n    const path = `/api/providers/vsphere/datastores`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    if ('dc' in args) {\n      options.params = options.params.set('dc', String(args.dc));\n    }\n    return this.sendRequest<models.VSphereDatastore[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getVSphereFolders(\n    args: {\n      dc: string,  // datacenter managed object Id, e.g. datacenter-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereFolder[]> {\n    const path = `/api/providers/vsphere/folders`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    if ('dc' in args) {\n      options.params = options.params.set('dc', String(args.dc));\n    }\n    return this.sendRequest<models.VSphereFolder[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getVSphereComputeResources(\n    args: {\n      dc: string,  // datacenter managed object Id, e.g. datacenter-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereManagementObject[]> {\n    const path = `/api/providers/vsphere/compute`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    if ('dc' in args) {\n      options.params = options.params.set('dc', String(args.dc));\n    }\n    return this.sendRequest<models.VSphereManagementObject[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getVSphereResourcePools(\n    args: {\n      dc: string,  // datacenter managed object Id, e.g. datacenter-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereResourcePool[]> {\n    const path = `/api/providers/vsphere/resourcepools`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    if ('dc' in args) {\n      options.params = options.params.set('dc', String(args.dc));\n    }\n    return this.sendRequest<models.VSphereResourcePool[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getVSphereNetworks(\n    args: {\n      dc: string,  // datacenter managed object Id, e.g. datacenter-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereNetwork[]> {\n    const path = `/api/providers/vsphere/networks`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    if ('dc' in args) {\n      options.params = options.params.set('dc', String(args.dc));\n    }\n    return this.sendRequest<models.VSphereNetwork[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getVSphereNodeTypes(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.NodeType[]> {\n    const path = `/api/providers/vsphere/nodetypes`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.NodeType[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getVSphereOSImages(\n    args: {\n      dc: string,  // datacenter managed object Id, e.g. datacenter-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereVirtualMachine[]> {\n    const path = `/api/providers/vsphere/osimages`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    if ('dc' in args) {\n      options.params = options.params.set('dc', String(args.dc));\n    }\n    return this.sendRequest<models.VSphereVirtualMachine[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  exportTKGConfigForVsphere(\n    args: {\n      params: models.VsphereRegionalClusterParams,  // params to generate tkg configuration for vsphere\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string> {\n    const path = `/api/providers/vsphere/config/export`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<string>('POST', path, options, JSON.stringify(args.params));\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  applyTKGConfigForVsphere(\n    args: {\n      params: models.VsphereRegionalClusterParams,  // params to apply changes to tkg configuration for vsphere\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.ConfigFileInfo> {\n    const path = `/api/providers/vsphere/tkgconfig`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.ConfigFileInfo>('POST', path, options, JSON.stringify(args.params));\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  importTKGConfigForVsphere(\n    args: {\n      params: models.ConfigFile,  // config file from which to generate tkg configuration for vsphere\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VsphereRegionalClusterParams> {\n    const path = `/api/providers/vsphere/config/import`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.VsphereRegionalClusterParams>('POST', path, options, JSON.stringify(args.params));\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  createVSphereRegionalCluster(\n    args: {\n      params: models.VsphereRegionalClusterParams,  // params to create a regional cluster\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string> {\n    const path = `/api/providers/vsphere/create`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<string>('POST', path, options, JSON.stringify(args.params));\n  }\n\n  /**\n   * Response generated for [ 201 ] HTTP response code.\n   */\n  setAWSEndpoint(\n    args: {\n      accountParams?: models.AWSAccountParams,  // (optional) AWS account parameters\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<void> {\n    const path = `/api/providers/aws`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<void>('POST', path, options, JSON.stringify(args.accountParams));\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getVPCs(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.Vpc[]> {\n    const path = `/api/providers/aws/vpc`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.Vpc[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAWSNodeTypes(\n    args: {\n      az?: string,  // (optional) AWS availability zone, e.g. us-west-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string[]> {\n    const path = `/api/providers/aws/nodetypes`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    if ('az' in args) {\n      options.params = options.params.set('az', String(args.az));\n    }\n    return this.sendRequest<string[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAWSRegions(\n    requestHttpOptions?: HttpOptions\n  ): Observable<string[]> {\n    const path = `/api/providers/aws/regions`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<string[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAWSOSImages(\n    args: {\n      region: string,  // AWS region, e.g. us-west-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AWSVirtualMachine[]> {\n    const path = `/api/providers/aws/osimages`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    if ('region' in args) {\n      options.params = options.params.set('region', String(args.region));\n    }\n    return this.sendRequest<models.AWSVirtualMachine[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAWSCredentialProfiles(\n    requestHttpOptions?: HttpOptions\n  ): Observable<string[]> {\n    const path = `/api/providers/aws/profiles`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<string[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAWSAvailabilityZones(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AWSAvailabilityZone[]> {\n    const path = `/api/providers/aws/AvailabilityZones`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.AWSAvailabilityZone[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAWSSubnets(\n    args: {\n      vpcId: string,  // VPC Id\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AWSSubnet[]> {\n    const path = `/api/providers/aws/subnets`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    if ('vpcId' in args) {\n      options.params = options.params.set('vpcId', String(args.vpcId));\n    }\n    return this.sendRequest<models.AWSSubnet[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  exportTKGConfigForAWS(\n    args: {\n      params: models.AWSRegionalClusterParams,  // parameters to generate TKG configuration file for AWS\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string> {\n    const path = `/api/providers/aws/config/export`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<string>('POST', path, options, JSON.stringify(args.params));\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  applyTKGConfigForAWS(\n    args: {\n      params: models.AWSRegionalClusterParams,  // parameters to apply changes to TKG configuration file for AWS\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.ConfigFileInfo> {\n    const path = `/api/providers/aws/tkgconfig`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.ConfigFileInfo>('POST', path, options, JSON.stringify(args.params));\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  createAWSRegionalCluster(\n    args: {\n      params: models.AWSRegionalClusterParams,  // parameters to create a regional cluster\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string> {\n    const path = `/api/providers/aws/create`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<string>('POST', path, options, JSON.stringify(args.params));\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  importTKGConfigForAWS(\n    args: {\n      params: models.ConfigFile,  // config file from which to generate tkg configuration for aws\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AWSRegionalClusterParams> {\n    const path = `/api/providers/aws/config/import`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.AWSRegionalClusterParams>('POST', path, options, JSON.stringify(args.params));\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAzureEndpoint(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AzureAccountParams> {\n    const path = `/api/providers/azure`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.AzureAccountParams>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 201 ] HTTP response code.\n   */\n  setAzureEndpoint(\n    args: {\n      accountParams?: models.AzureAccountParams,  // (optional) Azure account parameters\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<void> {\n    const path = `/api/providers/azure`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<void>('POST', path, options, JSON.stringify(args.accountParams));\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAzureResourceGroups(\n    args: {\n      location: string,  // Azure region\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AzureResourceGroup[]> {\n    const path = `/api/providers/azure/resourcegroups`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    if ('location' in args) {\n      options.params = options.params.set('location', String(args.location));\n    }\n    return this.sendRequest<models.AzureResourceGroup[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 201 ] HTTP response code.\n   */\n  createAzureResourceGroup(\n    args: {\n      params: models.AzureResourceGroup,  // parameters to create a new Azure resource group\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string> {\n    const path = `/api/providers/azure/resourcegroups`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<string>('POST', path, options, JSON.stringify(args.params));\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAzureVnets(\n    args: {\n      resourceGroupName: string,  // Name of the Azure resource group\n      location: string,  // Azure region\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AzureVirtualNetwork[]> {\n    const path = `/api/providers/azure/resourcegroups/${args.resourceGroupName}/vnets`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    if ('location' in args) {\n      options.params = options.params.set('location', String(args.location));\n    }\n    return this.sendRequest<models.AzureVirtualNetwork[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 201 ] HTTP response code.\n   */\n  createAzureVirtualNetwork(\n    args: {\n      resourceGroupName: string,  // Name of the Azure resource group\n      params: models.AzureVirtualNetwork,  // parameters to create a new Azure Virtual network\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string> {\n    const path = `/api/providers/azure/resourcegroups/${args.resourceGroupName}/vnets`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<string>('POST', path, options, JSON.stringify(args.params));\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAzureOSImages(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AzureVirtualMachine[]> {\n    const path = `/api/providers/azure/osimages`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.AzureVirtualMachine[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAzureRegions(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AzureLocation[]> {\n    const path = `/api/providers/azure/regions`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.AzureLocation[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAzureInstanceTypes(\n    args: {\n      location: string,  // Azure region name\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AzureInstanceType[]> {\n    const path = `/api/providers/azure/regions/${args.location}/instanceTypes`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.AzureInstanceType[]>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  exportTKGConfigForAzure(\n    args: {\n      params: models.AzureRegionalClusterParams,  // parameters to generate TKG configuration file for Azure\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string> {\n    const path = `/api/providers/azure/config/export`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<string>('POST', path, options, JSON.stringify(args.params));\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  applyTKGConfigForAzure(\n    args: {\n      params: models.AzureRegionalClusterParams,  // parameters to apply changes to TKG configuration file for Azure\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.ConfigFileInfo> {\n    const path = `/api/providers/azure/tkgconfig`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.ConfigFileInfo>('POST', path, options, JSON.stringify(args.params));\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  createAzureRegionalCluster(\n    args: {\n      params: models.AzureRegionalClusterParams,  // parameters to create a regional cluster\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string> {\n    const path = `/api/providers/azure/create`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<string>('POST', path, options, JSON.stringify(args.params));\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  importTKGConfigForAzure(\n    args: {\n      params: models.ConfigFile,  // config file from which to generate tkg configuration for azure\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AzureRegionalClusterParams> {\n    const path = `/api/providers/azure/config/import`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.AzureRegionalClusterParams>('POST', path, options, JSON.stringify(args.params));\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  checkIfDockerDaemonAvailable(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.DockerDaemonStatus> {\n    const path = `/api/providers/docker/daemon`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.DockerDaemonStatus>('GET', path, options);\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  exportTKGConfigForDocker(\n    args: {\n      params: models.DockerRegionalClusterParams,  // parameters to generate TKG configuration file for Docker\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string> {\n    const path = `/api/providers/docker/config/export`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<string>('POST', path, options, JSON.stringify(args.params));\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  applyTKGConfigForDocker(\n    args: {\n      params: models.DockerRegionalClusterParams,  // parameters to apply changes to TKG configuration file for Docker\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.ConfigFileInfo> {\n    const path = `/api/providers/docker/tkgconfig`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.ConfigFileInfo>('POST', path, options, JSON.stringify(args.params));\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  createDockerRegionalCluster(\n    args: {\n      params: models.DockerRegionalClusterParams,  // parameters to create a regional cluster\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string> {\n    const path = `/api/providers/docker/create`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<string>('POST', path, options, JSON.stringify(args.params));\n  }\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  importTKGConfigForDocker(\n    args: {\n      params: models.ConfigFile,  // config file from which to generate tkg configuration for docker\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.DockerRegionalClusterParams> {\n    const path = `/api/providers/docker/config/import`;\n    const options: APIHttpOptions = {\n      ...this.options,\n      ...requestHttpOptions,\n    };\n\n    return this.sendRequest<models.DockerRegionalClusterParams>('POST', path, options, JSON.stringify(args.params));\n  }\n\n  private sendRequest<T>(method: string, path: string, options: HttpOptions, body?: any): Observable<T> {\n    switch (method) {\n      case 'DELETE':\n        return this.http.delete<T>(`${this.domain}${path}`, options);\n      case 'GET':\n        return this.http.get<T>(`${this.domain}${path}`, options);\n      case 'HEAD':\n        return this.http.head<T>(`${this.domain}${path}`, options);\n      case 'OPTIONS':\n        return this.http.options<T>(`${this.domain}${path}`, options);\n      case 'PATCH':\n        return this.http.patch<T>(`${this.domain}${path}`, body, options);\n      case 'POST':\n        return this.http.post<T>(`${this.domain}${path}`, body, options);\n      case 'PUT':\n        return this.http.put<T>(`${this.domain}${path}`, body, options);\n      default:\n        console.error(`Unsupported request: ${method}`);\n        return throwError(`Unsupported request: ${method}`);\n    }\n  }\n}\n","/* tslint:disable */\n\nimport * as models from '../models';\n\n/* pre-prepared guards for build in complex types */\n\nfunction _isBlob(arg: any): arg is Blob {\n  return arg != null && typeof arg.size === 'number' && typeof arg.type === 'string' && typeof arg.slice === 'function';\n}\n\nexport function isFile(arg: any): arg is File {\nreturn arg != null && typeof arg.lastModified === 'number' && typeof arg.name === 'string' && _isBlob(arg);\n}\n\n/* generated type guards */\n\nexport function isAviCloud(arg: any): arg is models.AviCloud {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // location?: string\n    ( typeof arg.location === 'undefined' || typeof arg.location === 'string' ) &&\n    // name?: string\n    ( typeof arg.name === 'undefined' || typeof arg.name === 'string' ) &&\n    // uuid?: string\n    ( typeof arg.uuid === 'undefined' || typeof arg.uuid === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isAviConfig(arg: any): arg is models.AviConfig {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // ca_cert?: string\n    ( typeof arg.ca_cert === 'undefined' || typeof arg.ca_cert === 'string' ) &&\n    // cloud?: string\n    ( typeof arg.cloud === 'undefined' || typeof arg.cloud === 'string' ) &&\n    // controller?: string\n    ( typeof arg.controller === 'undefined' || typeof arg.controller === 'string' ) &&\n    // controlPlaneHaProvider?: boolean\n    ( typeof arg.controlPlaneHaProvider === 'undefined' || typeof arg.controlPlaneHaProvider === 'boolean' ) &&\n    // labels?: { [key: string]: string }\n    ( typeof arg.labels === 'undefined' || typeof arg.labels === 'string' ) &&\n    // managementClusterVipNetworkCidr?: string\n    ( typeof arg.managementClusterVipNetworkCidr === 'undefined' || typeof arg.managementClusterVipNetworkCidr === 'string' ) &&\n    // managementClusterVipNetworkName?: string\n    ( typeof arg.managementClusterVipNetworkName === 'undefined' || typeof arg.managementClusterVipNetworkName === 'string' ) &&\n    // network?: AviNetworkParams\n    ( typeof arg.network === 'undefined' || isAviNetworkParams(arg.network) ) &&\n    // password?: string\n    ( typeof arg.password === 'undefined' || typeof arg.password === 'string' ) &&\n    // service_engine?: string\n    ( typeof arg.service_engine === 'undefined' || typeof arg.service_engine === 'string' ) &&\n    // username?: string\n    ( typeof arg.username === 'undefined' || typeof arg.username === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isAviControllerParams(arg: any): arg is models.AviControllerParams {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // CAData?: string\n    ( typeof arg.CAData === 'undefined' || typeof arg.CAData === 'string' ) &&\n    // host?: string\n    ( typeof arg.host === 'undefined' || typeof arg.host === 'string' ) &&\n    // password?: string\n    ( typeof arg.password === 'undefined' || typeof arg.password === 'string' ) &&\n    // tenant?: string\n    ( typeof arg.tenant === 'undefined' || typeof arg.tenant === 'string' ) &&\n    // username?: string\n    ( typeof arg.username === 'undefined' || typeof arg.username === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isAviNetworkParams(arg: any): arg is models.AviNetworkParams {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // cidr?: string\n    ( typeof arg.cidr === 'undefined' || typeof arg.cidr === 'string' ) &&\n    // name?: string\n    ( typeof arg.name === 'undefined' || typeof arg.name === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isAviServiceEngineGroup(arg: any): arg is models.AviServiceEngineGroup {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // location?: string\n    ( typeof arg.location === 'undefined' || typeof arg.location === 'string' ) &&\n    // name?: string\n    ( typeof arg.name === 'undefined' || typeof arg.name === 'string' ) &&\n    // uuid?: string\n    ( typeof arg.uuid === 'undefined' || typeof arg.uuid === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isAviSubnet(arg: any): arg is models.AviSubnet {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // family?: string\n    ( typeof arg.family === 'undefined' || typeof arg.family === 'string' ) &&\n    // subnet?: string\n    ( typeof arg.subnet === 'undefined' || typeof arg.subnet === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isAviVipNetwork(arg: any): arg is models.AviVipNetwork {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // cloud?: string\n    ( typeof arg.cloud === 'undefined' || typeof arg.cloud === 'string' ) &&\n    // configedSubnets?: AviSubnet[]\n    ( typeof arg.configedSubnets === 'undefined' || (Array.isArray(arg.configedSubnets) && arg.configedSubnets.every((item: unknown) => isAviSubnet(item))) ) &&\n    // name?: string\n    ( typeof arg.name === 'undefined' || typeof arg.name === 'string' ) &&\n    // uuid?: string\n    ( typeof arg.uuid === 'undefined' || typeof arg.uuid === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isAWSAccountParams(arg: any): arg is models.AWSAccountParams {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // accessKeyID?: string\n    ( typeof arg.accessKeyID === 'undefined' || typeof arg.accessKeyID === 'string' ) &&\n    // profileName?: string\n    ( typeof arg.profileName === 'undefined' || typeof arg.profileName === 'string' ) &&\n    // region?: string\n    ( typeof arg.region === 'undefined' || typeof arg.region === 'string' ) &&\n    // secretAccessKey?: string\n    ( typeof arg.secretAccessKey === 'undefined' || typeof arg.secretAccessKey === 'string' ) &&\n    // sessionToken?: string\n    ( typeof arg.sessionToken === 'undefined' || typeof arg.sessionToken === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isAWSAvailabilityZone(arg: any): arg is models.AWSAvailabilityZone {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // id?: string\n    ( typeof arg.id === 'undefined' || typeof arg.id === 'string' ) &&\n    // name?: string\n    ( typeof arg.name === 'undefined' || typeof arg.name === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isAWSNodeAz(arg: any): arg is models.AWSNodeAz {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // name?: string\n    ( typeof arg.name === 'undefined' || typeof arg.name === 'string' ) &&\n    // privateSubnetID?: string\n    ( typeof arg.privateSubnetID === 'undefined' || typeof arg.privateSubnetID === 'string' ) &&\n    // publicSubnetID?: string\n    ( typeof arg.publicSubnetID === 'undefined' || typeof arg.publicSubnetID === 'string' ) &&\n    // workerNodeType?: string\n    ( typeof arg.workerNodeType === 'undefined' || typeof arg.workerNodeType === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isAWSRegionalClusterParams(arg: any): arg is models.AWSRegionalClusterParams {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // annotations?: { [key: string]: string }\n    ( typeof arg.annotations === 'undefined' || typeof arg.annotations === 'string' ) &&\n    // awsAccountParams?: AWSAccountParams\n    ( typeof arg.awsAccountParams === 'undefined' || isAWSAccountParams(arg.awsAccountParams) ) &&\n    // bastionHostEnabled?: boolean\n    ( typeof arg.bastionHostEnabled === 'undefined' || typeof arg.bastionHostEnabled === 'boolean' ) &&\n    // ceipOptIn?: boolean\n    ( typeof arg.ceipOptIn === 'undefined' || typeof arg.ceipOptIn === 'boolean' ) &&\n    // clusterName?: string\n    ( typeof arg.clusterName === 'undefined' || typeof arg.clusterName === 'string' ) &&\n    // controlPlaneFlavor?: string\n    ( typeof arg.controlPlaneFlavor === 'undefined' || typeof arg.controlPlaneFlavor === 'string' ) &&\n    // controlPlaneNodeType?: string\n    ( typeof arg.controlPlaneNodeType === 'undefined' || typeof arg.controlPlaneNodeType === 'string' ) &&\n    // createCloudFormationStack?: boolean\n    ( typeof arg.createCloudFormationStack === 'undefined' || typeof arg.createCloudFormationStack === 'boolean' ) &&\n    // enableAuditLogging?: boolean\n    ( typeof arg.enableAuditLogging === 'undefined' || typeof arg.enableAuditLogging === 'boolean' ) &&\n    // identityManagement?: IdentityManagementConfig\n    ( typeof arg.identityManagement === 'undefined' || isIdentityManagementConfig(arg.identityManagement) ) &&\n    // kubernetesVersion?: string\n    ( typeof arg.kubernetesVersion === 'undefined' || typeof arg.kubernetesVersion === 'string' ) &&\n    // labels?: { [key: string]: string }\n    ( typeof arg.labels === 'undefined' || typeof arg.labels === 'string' ) &&\n    // loadbalancerSchemeInternal?: boolean\n    ( typeof arg.loadbalancerSchemeInternal === 'undefined' || typeof arg.loadbalancerSchemeInternal === 'boolean' ) &&\n    // machineHealthCheckEnabled?: boolean\n    ( typeof arg.machineHealthCheckEnabled === 'undefined' || typeof arg.machineHealthCheckEnabled === 'boolean' ) &&\n    // networking?: TKGNetwork\n    ( typeof arg.networking === 'undefined' || isTKGNetwork(arg.networking) ) &&\n    // numOfWorkerNode?: number\n    ( typeof arg.numOfWorkerNode === 'undefined' || typeof arg.numOfWorkerNode === 'number' ) &&\n    // os?: AWSVirtualMachine\n    ( typeof arg.os === 'undefined' || isAWSVirtualMachine(arg.os) ) &&\n    // sshKeyName?: string\n    ( typeof arg.sshKeyName === 'undefined' || typeof arg.sshKeyName === 'string' ) &&\n    // vpc?: AWSVpc\n    ( typeof arg.vpc === 'undefined' || isAWSVpc(arg.vpc) ) &&\n    // workerNodeType?: string\n    ( typeof arg.workerNodeType === 'undefined' || typeof arg.workerNodeType === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isAWSRoute(arg: any): arg is models.AWSRoute {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // DestinationCidrBlock?: string\n    ( typeof arg.DestinationCidrBlock === 'undefined' || typeof arg.DestinationCidrBlock === 'string' ) &&\n    // GatewayId?: string\n    ( typeof arg.GatewayId === 'undefined' || typeof arg.GatewayId === 'string' ) &&\n    // State?: string\n    ( typeof arg.State === 'undefined' || typeof arg.State === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isAWSRouteTable(arg: any): arg is models.AWSRouteTable {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // id?: string\n    ( typeof arg.id === 'undefined' || typeof arg.id === 'string' ) &&\n    // routes?: AWSRoute[]\n    ( typeof arg.routes === 'undefined' || (Array.isArray(arg.routes) && arg.routes.every((item: unknown) => isAWSRoute(item))) ) &&\n    // vpcId?: string\n    ( typeof arg.vpcId === 'undefined' || typeof arg.vpcId === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isAWSSubnet(arg: any): arg is models.AWSSubnet {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // availabilityZoneId?: string\n    ( typeof arg.availabilityZoneId === 'undefined' || typeof arg.availabilityZoneId === 'string' ) &&\n    // availabilityZoneName?: string\n    ( typeof arg.availabilityZoneName === 'undefined' || typeof arg.availabilityZoneName === 'string' ) &&\n    // cidr?: string\n    ( typeof arg.cidr === 'undefined' || typeof arg.cidr === 'string' ) &&\n    // id?: string\n    ( typeof arg.id === 'undefined' || typeof arg.id === 'string' ) &&\n    // isPublic: boolean\n    ( typeof arg.isPublic === 'boolean' ) &&\n    // state?: string\n    ( typeof arg.state === 'undefined' || typeof arg.state === 'string' ) &&\n    // vpcId?: string\n    ( typeof arg.vpcId === 'undefined' || typeof arg.vpcId === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isAWSVirtualMachine(arg: any): arg is models.AWSVirtualMachine {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // name?: string\n    ( typeof arg.name === 'undefined' || typeof arg.name === 'string' ) &&\n    // osInfo?: OSInfo\n    ( typeof arg.osInfo === 'undefined' || isOSInfo(arg.osInfo) ) &&\n\n  true\n  );\n  }\n\nexport function isAWSVpc(arg: any): arg is models.AWSVpc {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // azs?: AWSNodeAz[]\n    ( typeof arg.azs === 'undefined' || (Array.isArray(arg.azs) && arg.azs.every((item: unknown) => isAWSNodeAz(item))) ) &&\n    // cidr?: string\n    ( typeof arg.cidr === 'undefined' || typeof arg.cidr === 'string' ) &&\n    // vpcID?: string\n    ( typeof arg.vpcID === 'undefined' || typeof arg.vpcID === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isAzureAccountParams(arg: any): arg is models.AzureAccountParams {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // azureCloud?: string\n    ( typeof arg.azureCloud === 'undefined' || typeof arg.azureCloud === 'string' ) &&\n    // clientId?: string\n    ( typeof arg.clientId === 'undefined' || typeof arg.clientId === 'string' ) &&\n    // clientSecret?: string\n    ( typeof arg.clientSecret === 'undefined' || typeof arg.clientSecret === 'string' ) &&\n    // subscriptionId?: string\n    ( typeof arg.subscriptionId === 'undefined' || typeof arg.subscriptionId === 'string' ) &&\n    // tenantId?: string\n    ( typeof arg.tenantId === 'undefined' || typeof arg.tenantId === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isAzureInstanceType(arg: any): arg is models.AzureInstanceType {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // family?: string\n    ( typeof arg.family === 'undefined' || typeof arg.family === 'string' ) &&\n    // name?: string\n    ( typeof arg.name === 'undefined' || typeof arg.name === 'string' ) &&\n    // size?: string\n    ( typeof arg.size === 'undefined' || typeof arg.size === 'string' ) &&\n    // tier?: string\n    ( typeof arg.tier === 'undefined' || typeof arg.tier === 'string' ) &&\n    // zones?: string[]\n    ( typeof arg.zones === 'undefined' || (Array.isArray(arg.zones) && arg.zones.every((item: unknown) => typeof item === 'string')) ) &&\n\n  true\n  );\n  }\n\nexport function isAzureLocation(arg: any): arg is models.AzureLocation {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // displayName?: string\n    ( typeof arg.displayName === 'undefined' || typeof arg.displayName === 'string' ) &&\n    // name?: string\n    ( typeof arg.name === 'undefined' || typeof arg.name === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isAzureRegionalClusterParams(arg: any): arg is models.AzureRegionalClusterParams {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // annotations?: { [key: string]: string }\n    ( typeof arg.annotations === 'undefined' || typeof arg.annotations === 'string' ) &&\n    // azureAccountParams?: AzureAccountParams\n    ( typeof arg.azureAccountParams === 'undefined' || isAzureAccountParams(arg.azureAccountParams) ) &&\n    // ceipOptIn?: boolean\n    ( typeof arg.ceipOptIn === 'undefined' || typeof arg.ceipOptIn === 'boolean' ) &&\n    // clusterName?: string\n    ( typeof arg.clusterName === 'undefined' || typeof arg.clusterName === 'string' ) &&\n    // controlPlaneFlavor?: string\n    ( typeof arg.controlPlaneFlavor === 'undefined' || typeof arg.controlPlaneFlavor === 'string' ) &&\n    // controlPlaneMachineType?: string\n    ( typeof arg.controlPlaneMachineType === 'undefined' || typeof arg.controlPlaneMachineType === 'string' ) &&\n    // controlPlaneSubnet?: string\n    ( typeof arg.controlPlaneSubnet === 'undefined' || typeof arg.controlPlaneSubnet === 'string' ) &&\n    // controlPlaneSubnetCidr?: string\n    ( typeof arg.controlPlaneSubnetCidr === 'undefined' || typeof arg.controlPlaneSubnetCidr === 'string' ) &&\n    // enableAuditLogging?: boolean\n    ( typeof arg.enableAuditLogging === 'undefined' || typeof arg.enableAuditLogging === 'boolean' ) &&\n    // frontendPrivateIp?: string\n    ( typeof arg.frontendPrivateIp === 'undefined' || typeof arg.frontendPrivateIp === 'string' ) &&\n    // identityManagement?: IdentityManagementConfig\n    ( typeof arg.identityManagement === 'undefined' || isIdentityManagementConfig(arg.identityManagement) ) &&\n    // isPrivateCluster?: boolean\n    ( typeof arg.isPrivateCluster === 'undefined' || typeof arg.isPrivateCluster === 'boolean' ) &&\n    // kubernetesVersion?: string\n    ( typeof arg.kubernetesVersion === 'undefined' || typeof arg.kubernetesVersion === 'string' ) &&\n    // labels?: { [key: string]: string }\n    ( typeof arg.labels === 'undefined' || typeof arg.labels === 'string' ) &&\n    // location?: string\n    ( typeof arg.location === 'undefined' || typeof arg.location === 'string' ) &&\n    // machineHealthCheckEnabled?: boolean\n    ( typeof arg.machineHealthCheckEnabled === 'undefined' || typeof arg.machineHealthCheckEnabled === 'boolean' ) &&\n    // networking?: TKGNetwork\n    ( typeof arg.networking === 'undefined' || isTKGNetwork(arg.networking) ) &&\n    // numOfWorkerNodes?: string\n    ( typeof arg.numOfWorkerNodes === 'undefined' || typeof arg.numOfWorkerNodes === 'string' ) &&\n    // os?: AzureVirtualMachine\n    ( typeof arg.os === 'undefined' || isAzureVirtualMachine(arg.os) ) &&\n    // resourceGroup?: string\n    ( typeof arg.resourceGroup === 'undefined' || typeof arg.resourceGroup === 'string' ) &&\n    // sshPublicKey?: string\n    ( typeof arg.sshPublicKey === 'undefined' || typeof arg.sshPublicKey === 'string' ) &&\n    // vnetCidr?: string\n    ( typeof arg.vnetCidr === 'undefined' || typeof arg.vnetCidr === 'string' ) &&\n    // vnetName?: string\n    ( typeof arg.vnetName === 'undefined' || typeof arg.vnetName === 'string' ) &&\n    // vnetResourceGroup?: string\n    ( typeof arg.vnetResourceGroup === 'undefined' || typeof arg.vnetResourceGroup === 'string' ) &&\n    // workerMachineType?: string\n    ( typeof arg.workerMachineType === 'undefined' || typeof arg.workerMachineType === 'string' ) &&\n    // workerNodeSubnet?: string\n    ( typeof arg.workerNodeSubnet === 'undefined' || typeof arg.workerNodeSubnet === 'string' ) &&\n    // workerNodeSubnetCidr?: string\n    ( typeof arg.workerNodeSubnetCidr === 'undefined' || typeof arg.workerNodeSubnetCidr === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isAzureResourceGroup(arg: any): arg is models.AzureResourceGroup {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // id?: string\n    ( typeof arg.id === 'undefined' || typeof arg.id === 'string' ) &&\n    // location: string\n    ( typeof arg.location === 'string' ) &&\n    // name: string\n    ( typeof arg.name === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isAzureSubnet(arg: any): arg is models.AzureSubnet {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // cidr?: string\n    ( typeof arg.cidr === 'undefined' || typeof arg.cidr === 'string' ) &&\n    // name?: string\n    ( typeof arg.name === 'undefined' || typeof arg.name === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isAzureVirtualMachine(arg: any): arg is models.AzureVirtualMachine {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // name?: string\n    ( typeof arg.name === 'undefined' || typeof arg.name === 'string' ) &&\n    // osInfo?: OSInfo\n    ( typeof arg.osInfo === 'undefined' || isOSInfo(arg.osInfo) ) &&\n\n  true\n  );\n  }\n\nexport function isAzureVirtualNetwork(arg: any): arg is models.AzureVirtualNetwork {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // cidrBlock: string\n    ( typeof arg.cidrBlock === 'string' ) &&\n    // id?: string\n    ( typeof arg.id === 'undefined' || typeof arg.id === 'string' ) &&\n    // location: string\n    ( typeof arg.location === 'string' ) &&\n    // name: string\n    ( typeof arg.name === 'string' ) &&\n    // subnets?: AzureSubnet[]\n    ( typeof arg.subnets === 'undefined' || (Array.isArray(arg.subnets) && arg.subnets.every((item: unknown) => isAzureSubnet(item))) ) &&\n\n  true\n  );\n  }\n\nexport function isConfigFile(arg: any): arg is models.ConfigFile {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // filecontents?: string\n    ( typeof arg.filecontents === 'undefined' || typeof arg.filecontents === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isConfigFileInfo(arg: any): arg is models.ConfigFileInfo {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // path?: string\n    ( typeof arg.path === 'undefined' || typeof arg.path === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isDockerDaemonStatus(arg: any): arg is models.DockerDaemonStatus {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // status?: boolean\n    ( typeof arg.status === 'undefined' || typeof arg.status === 'boolean' ) &&\n\n  true\n  );\n  }\n\nexport function isDockerRegionalClusterParams(arg: any): arg is models.DockerRegionalClusterParams {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // annotations?: { [key: string]: string }\n    ( typeof arg.annotations === 'undefined' || typeof arg.annotations === 'string' ) &&\n    // ceipOptIn?: boolean\n    ( typeof arg.ceipOptIn === 'undefined' || typeof arg.ceipOptIn === 'boolean' ) &&\n    // clusterName?: string\n    ( typeof arg.clusterName === 'undefined' || typeof arg.clusterName === 'string' ) &&\n    // controlPlaneFlavor?: string\n    ( typeof arg.controlPlaneFlavor === 'undefined' || typeof arg.controlPlaneFlavor === 'string' ) &&\n    // identityManagement?: IdentityManagementConfig\n    ( typeof arg.identityManagement === 'undefined' || isIdentityManagementConfig(arg.identityManagement) ) &&\n    // kubernetesVersion?: string\n    ( typeof arg.kubernetesVersion === 'undefined' || typeof arg.kubernetesVersion === 'string' ) &&\n    // labels?: { [key: string]: string }\n    ( typeof arg.labels === 'undefined' || typeof arg.labels === 'string' ) &&\n    // machineHealthCheckEnabled?: boolean\n    ( typeof arg.machineHealthCheckEnabled === 'undefined' || typeof arg.machineHealthCheckEnabled === 'boolean' ) &&\n    // networking?: TKGNetwork\n    ( typeof arg.networking === 'undefined' || isTKGNetwork(arg.networking) ) &&\n    // numOfWorkerNodes?: string\n    ( typeof arg.numOfWorkerNodes === 'undefined' || typeof arg.numOfWorkerNodes === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isError(arg: any): arg is models.Error {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // message?: string\n    ( typeof arg.message === 'undefined' || typeof arg.message === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isFeatureMap(arg: any): arg is models.FeatureMap {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // [key: string]: string\n    ( Object.values(arg).every((value: unknown) => typeof value === 'string') ) &&\n\n  true\n  );\n  }\n\nexport function isFeatures(arg: any): arg is models.Features {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // [key: string]: FeatureMap\n    ( Object.values(arg).every((value: unknown) => isFeatureMap(value)) ) &&\n\n  true\n  );\n  }\n\nexport function isHTTPProxyConfiguration(arg: any): arg is models.HTTPProxyConfiguration {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // enabled?: boolean\n    ( typeof arg.enabled === 'undefined' || typeof arg.enabled === 'boolean' ) &&\n    // HTTPProxyPassword?: string\n    ( typeof arg.HTTPProxyPassword === 'undefined' || typeof arg.HTTPProxyPassword === 'string' ) &&\n    // HTTPProxyURL?: string\n    ( typeof arg.HTTPProxyURL === 'undefined' || typeof arg.HTTPProxyURL === 'string' ) &&\n    // HTTPProxyUsername?: string\n    ( typeof arg.HTTPProxyUsername === 'undefined' || typeof arg.HTTPProxyUsername === 'string' ) &&\n    // HTTPSProxyPassword?: string\n    ( typeof arg.HTTPSProxyPassword === 'undefined' || typeof arg.HTTPSProxyPassword === 'string' ) &&\n    // HTTPSProxyURL?: string\n    ( typeof arg.HTTPSProxyURL === 'undefined' || typeof arg.HTTPSProxyURL === 'string' ) &&\n    // HTTPSProxyUsername?: string\n    ( typeof arg.HTTPSProxyUsername === 'undefined' || typeof arg.HTTPSProxyUsername === 'string' ) &&\n    // noProxy?: string\n    ( typeof arg.noProxy === 'undefined' || typeof arg.noProxy === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isIdentityManagementConfig(arg: any): arg is models.IdentityManagementConfig {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // idm_type: 'oidc' | 'ldap' | 'none'\n    ( ['oidc', 'ldap', 'none'].includes(arg.idm_type) ) &&\n    // ldap_bind_dn?: string\n    ( typeof arg.ldap_bind_dn === 'undefined' || typeof arg.ldap_bind_dn === 'string' ) &&\n    // ldap_bind_password?: string\n    ( typeof arg.ldap_bind_password === 'undefined' || typeof arg.ldap_bind_password === 'string' ) &&\n    // ldap_group_search_base_dn?: string\n    ( typeof arg.ldap_group_search_base_dn === 'undefined' || typeof arg.ldap_group_search_base_dn === 'string' ) &&\n    // ldap_group_search_filter?: string\n    ( typeof arg.ldap_group_search_filter === 'undefined' || typeof arg.ldap_group_search_filter === 'string' ) &&\n    // ldap_group_search_group_attr?: string\n    ( typeof arg.ldap_group_search_group_attr === 'undefined' || typeof arg.ldap_group_search_group_attr === 'string' ) &&\n    // ldap_group_search_name_attr?: string\n    ( typeof arg.ldap_group_search_name_attr === 'undefined' || typeof arg.ldap_group_search_name_attr === 'string' ) &&\n    // ldap_group_search_user_attr?: string\n    ( typeof arg.ldap_group_search_user_attr === 'undefined' || typeof arg.ldap_group_search_user_attr === 'string' ) &&\n    // ldap_root_ca?: string\n    ( typeof arg.ldap_root_ca === 'undefined' || typeof arg.ldap_root_ca === 'string' ) &&\n    // ldap_url?: string\n    ( typeof arg.ldap_url === 'undefined' || typeof arg.ldap_url === 'string' ) &&\n    // ldap_user_search_base_dn?: string\n    ( typeof arg.ldap_user_search_base_dn === 'undefined' || typeof arg.ldap_user_search_base_dn === 'string' ) &&\n    // ldap_user_search_email_attr?: string\n    ( typeof arg.ldap_user_search_email_attr === 'undefined' || typeof arg.ldap_user_search_email_attr === 'string' ) &&\n    // ldap_user_search_filter?: string\n    ( typeof arg.ldap_user_search_filter === 'undefined' || typeof arg.ldap_user_search_filter === 'string' ) &&\n    // ldap_user_search_id_attr?: string\n    ( typeof arg.ldap_user_search_id_attr === 'undefined' || typeof arg.ldap_user_search_id_attr === 'string' ) &&\n    // ldap_user_search_name_attr?: string\n    ( typeof arg.ldap_user_search_name_attr === 'undefined' || typeof arg.ldap_user_search_name_attr === 'string' ) &&\n    // ldap_user_search_username?: string\n    ( typeof arg.ldap_user_search_username === 'undefined' || typeof arg.ldap_user_search_username === 'string' ) &&\n    // oidc_claim_mappings?: { [key: string]: string }\n    ( typeof arg.oidc_claim_mappings === 'undefined' || typeof arg.oidc_claim_mappings === 'string' ) &&\n    // oidc_client_id?: string\n    ( typeof arg.oidc_client_id === 'undefined' || typeof arg.oidc_client_id === 'string' ) &&\n    // oidc_client_secret?: string\n    ( typeof arg.oidc_client_secret === 'undefined' || typeof arg.oidc_client_secret === 'string' ) &&\n    // oidc_provider_name?: string\n    ( typeof arg.oidc_provider_name === 'undefined' || typeof arg.oidc_provider_name === 'string' ) &&\n    // oidc_provider_url?: string\n    ( typeof arg.oidc_provider_url === 'undefined' || typeof arg.oidc_provider_url === 'string' ) &&\n    // oidc_scope?: string\n    ( typeof arg.oidc_scope === 'undefined' || typeof arg.oidc_scope === 'string' ) &&\n    // oidc_skip_verify_cert?: boolean\n    ( typeof arg.oidc_skip_verify_cert === 'undefined' || typeof arg.oidc_skip_verify_cert === 'boolean' ) &&\n\n  true\n  );\n  }\n\nexport function isLdapParams(arg: any): arg is models.LdapParams {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // ldap_bind_dn?: string\n    ( typeof arg.ldap_bind_dn === 'undefined' || typeof arg.ldap_bind_dn === 'string' ) &&\n    // ldap_bind_password?: string\n    ( typeof arg.ldap_bind_password === 'undefined' || typeof arg.ldap_bind_password === 'string' ) &&\n    // ldap_group_search_base_dn?: string\n    ( typeof arg.ldap_group_search_base_dn === 'undefined' || typeof arg.ldap_group_search_base_dn === 'string' ) &&\n    // ldap_group_search_filter?: string\n    ( typeof arg.ldap_group_search_filter === 'undefined' || typeof arg.ldap_group_search_filter === 'string' ) &&\n    // ldap_group_search_group_attr?: string\n    ( typeof arg.ldap_group_search_group_attr === 'undefined' || typeof arg.ldap_group_search_group_attr === 'string' ) &&\n    // ldap_group_search_name_attr?: string\n    ( typeof arg.ldap_group_search_name_attr === 'undefined' || typeof arg.ldap_group_search_name_attr === 'string' ) &&\n    // ldap_group_search_user_attr?: string\n    ( typeof arg.ldap_group_search_user_attr === 'undefined' || typeof arg.ldap_group_search_user_attr === 'string' ) &&\n    // ldap_root_ca?: string\n    ( typeof arg.ldap_root_ca === 'undefined' || typeof arg.ldap_root_ca === 'string' ) &&\n    // ldap_test_group?: string\n    ( typeof arg.ldap_test_group === 'undefined' || typeof arg.ldap_test_group === 'string' ) &&\n    // ldap_test_user?: string\n    ( typeof arg.ldap_test_user === 'undefined' || typeof arg.ldap_test_user === 'string' ) &&\n    // ldap_url?: string\n    ( typeof arg.ldap_url === 'undefined' || typeof arg.ldap_url === 'string' ) &&\n    // ldap_user_search_base_dn?: string\n    ( typeof arg.ldap_user_search_base_dn === 'undefined' || typeof arg.ldap_user_search_base_dn === 'string' ) &&\n    // ldap_user_search_email_attr?: string\n    ( typeof arg.ldap_user_search_email_attr === 'undefined' || typeof arg.ldap_user_search_email_attr === 'string' ) &&\n    // ldap_user_search_filter?: string\n    ( typeof arg.ldap_user_search_filter === 'undefined' || typeof arg.ldap_user_search_filter === 'string' ) &&\n    // ldap_user_search_id_attr?: string\n    ( typeof arg.ldap_user_search_id_attr === 'undefined' || typeof arg.ldap_user_search_id_attr === 'string' ) &&\n    // ldap_user_search_name_attr?: string\n    ( typeof arg.ldap_user_search_name_attr === 'undefined' || typeof arg.ldap_user_search_name_attr === 'string' ) &&\n    // ldap_user_search_username?: string\n    ( typeof arg.ldap_user_search_username === 'undefined' || typeof arg.ldap_user_search_username === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isLdapTestResult(arg: any): arg is models.LdapTestResult {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // code?: number\n    ( typeof arg.code === 'undefined' || typeof arg.code === 'number' ) &&\n    // desc?: string\n    ( typeof arg.desc === 'undefined' || typeof arg.desc === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isNodeType(arg: any): arg is models.NodeType {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // cpu?: number\n    ( typeof arg.cpu === 'undefined' || typeof arg.cpu === 'number' ) &&\n    // disk?: number\n    ( typeof arg.disk === 'undefined' || typeof arg.disk === 'number' ) &&\n    // name?: string\n    ( typeof arg.name === 'undefined' || typeof arg.name === 'string' ) &&\n    // ram?: number\n    ( typeof arg.ram === 'undefined' || typeof arg.ram === 'number' ) &&\n\n  true\n  );\n  }\n\nexport function isOSInfo(arg: any): arg is models.OSInfo {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // arch?: string\n    ( typeof arg.arch === 'undefined' || typeof arg.arch === 'string' ) &&\n    // name?: string\n    ( typeof arg.name === 'undefined' || typeof arg.name === 'string' ) &&\n    // version?: string\n    ( typeof arg.version === 'undefined' || typeof arg.version === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isProviderInfo(arg: any): arg is models.ProviderInfo {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // provider?: string\n    ( typeof arg.provider === 'undefined' || typeof arg.provider === 'string' ) &&\n    // tkrVersion?: string\n    ( typeof arg.tkrVersion === 'undefined' || typeof arg.tkrVersion === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isTKGNetwork(arg: any): arg is models.TKGNetwork {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // clusterDNSName?: string\n    ( typeof arg.clusterDNSName === 'undefined' || typeof arg.clusterDNSName === 'string' ) &&\n    // clusterNodeCIDR?: string\n    ( typeof arg.clusterNodeCIDR === 'undefined' || typeof arg.clusterNodeCIDR === 'string' ) &&\n    // clusterPodCIDR?: string\n    ( typeof arg.clusterPodCIDR === 'undefined' || typeof arg.clusterPodCIDR === 'string' ) &&\n    // clusterServiceCIDR?: string\n    ( typeof arg.clusterServiceCIDR === 'undefined' || typeof arg.clusterServiceCIDR === 'string' ) &&\n    // cniType?: string\n    ( typeof arg.cniType === 'undefined' || typeof arg.cniType === 'string' ) &&\n    // httpProxyConfiguration?: HTTPProxyConfiguration\n    ( typeof arg.httpProxyConfiguration === 'undefined' || isHTTPProxyConfiguration(arg.httpProxyConfiguration) ) &&\n    // networkName?: string\n    ( typeof arg.networkName === 'undefined' || typeof arg.networkName === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isVpc(arg: any): arg is models.Vpc {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // cidr?: string\n    ( typeof arg.cidr === 'undefined' || typeof arg.cidr === 'string' ) &&\n    // id?: string\n    ( typeof arg.id === 'undefined' || typeof arg.id === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isVSphereAvailabilityZone(arg: any): arg is models.VSphereAvailabilityZone {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // moid?: string\n    ( typeof arg.moid === 'undefined' || typeof arg.moid === 'string' ) &&\n    // name?: string\n    ( typeof arg.name === 'undefined' || typeof arg.name === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isVSphereCredentials(arg: any): arg is models.VSphereCredentials {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // host?: string\n    ( typeof arg.host === 'undefined' || typeof arg.host === 'string' ) &&\n    // insecure?: boolean\n    ( typeof arg.insecure === 'undefined' || typeof arg.insecure === 'boolean' ) &&\n    // password?: string\n    ( typeof arg.password === 'undefined' || typeof arg.password === 'string' ) &&\n    // thumbprint?: string\n    ( typeof arg.thumbprint === 'undefined' || typeof arg.thumbprint === 'string' ) &&\n    // username?: string\n    ( typeof arg.username === 'undefined' || typeof arg.username === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isVSphereDatacenter(arg: any): arg is models.VSphereDatacenter {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // moid?: string\n    ( typeof arg.moid === 'undefined' || typeof arg.moid === 'string' ) &&\n    // name?: string\n    ( typeof arg.name === 'undefined' || typeof arg.name === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isVSphereDatastore(arg: any): arg is models.VSphereDatastore {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // moid?: string\n    ( typeof arg.moid === 'undefined' || typeof arg.moid === 'string' ) &&\n    // name?: string\n    ( typeof arg.name === 'undefined' || typeof arg.name === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isVSphereFolder(arg: any): arg is models.VSphereFolder {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // moid?: string\n    ( typeof arg.moid === 'undefined' || typeof arg.moid === 'string' ) &&\n    // name?: string\n    ( typeof arg.name === 'undefined' || typeof arg.name === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isVsphereInfo(arg: any): arg is models.VsphereInfo {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // hasPacific?: string\n    ( typeof arg.hasPacific === 'undefined' || typeof arg.hasPacific === 'string' ) &&\n    // version?: string\n    ( typeof arg.version === 'undefined' || typeof arg.version === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isVSphereManagementObject(arg: any): arg is models.VSphereManagementObject {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // moid?: string\n    ( typeof arg.moid === 'undefined' || typeof arg.moid === 'string' ) &&\n    // name?: string\n    ( typeof arg.name === 'undefined' || typeof arg.name === 'string' ) &&\n    // parentMoid?: string\n    ( typeof arg.parentMoid === 'undefined' || typeof arg.parentMoid === 'string' ) &&\n    // path?: string\n    ( typeof arg.path === 'undefined' || typeof arg.path === 'string' ) &&\n    // resourceType?: 'datacenter' | 'cluster' | 'hostgroup' | 'folder' | 'respool' | 'vm' | 'datastore' | 'host' | 'network'\n    ( typeof arg.resourceType === 'undefined' || ['datacenter', 'cluster', 'hostgroup', 'folder', 'respool', 'vm', 'datastore', 'host', 'network'].includes(arg.resourceType) ) &&\n\n  true\n  );\n  }\n\nexport function isVSphereNetwork(arg: any): arg is models.VSphereNetwork {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // displayName?: string\n    ( typeof arg.displayName === 'undefined' || typeof arg.displayName === 'string' ) &&\n    // moid?: string\n    ( typeof arg.moid === 'undefined' || typeof arg.moid === 'string' ) &&\n    // name?: string\n    ( typeof arg.name === 'undefined' || typeof arg.name === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isVSphereRegion(arg: any): arg is models.VSphereRegion {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // moid?: string\n    ( typeof arg.moid === 'undefined' || typeof arg.moid === 'string' ) &&\n    // name?: string\n    ( typeof arg.name === 'undefined' || typeof arg.name === 'string' ) &&\n    // zones?: VSphereAvailabilityZone[]\n    ( typeof arg.zones === 'undefined' || (Array.isArray(arg.zones) && arg.zones.every((item: unknown) => isVSphereAvailabilityZone(item))) ) &&\n\n  true\n  );\n  }\n\nexport function isVsphereRegionalClusterParams(arg: any): arg is models.VsphereRegionalClusterParams {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // annotations?: { [key: string]: string }\n    ( typeof arg.annotations === 'undefined' || typeof arg.annotations === 'string' ) &&\n    // aviConfig?: AviConfig\n    ( typeof arg.aviConfig === 'undefined' || isAviConfig(arg.aviConfig) ) &&\n    // ceipOptIn?: boolean\n    ( typeof arg.ceipOptIn === 'undefined' || typeof arg.ceipOptIn === 'boolean' ) &&\n    // clusterName?: string\n    ( typeof arg.clusterName === 'undefined' || typeof arg.clusterName === 'string' ) &&\n    // controlPlaneEndpoint?: string\n    ( typeof arg.controlPlaneEndpoint === 'undefined' || typeof arg.controlPlaneEndpoint === 'string' ) &&\n    // controlPlaneFlavor?: string\n    ( typeof arg.controlPlaneFlavor === 'undefined' || typeof arg.controlPlaneFlavor === 'string' ) &&\n    // controlPlaneNodeType?: string\n    ( typeof arg.controlPlaneNodeType === 'undefined' || typeof arg.controlPlaneNodeType === 'string' ) &&\n    // datacenter?: string\n    ( typeof arg.datacenter === 'undefined' || typeof arg.datacenter === 'string' ) &&\n    // datastore?: string\n    ( typeof arg.datastore === 'undefined' || typeof arg.datastore === 'string' ) &&\n    // enableAuditLogging?: boolean\n    ( typeof arg.enableAuditLogging === 'undefined' || typeof arg.enableAuditLogging === 'boolean' ) &&\n    // folder?: string\n    ( typeof arg.folder === 'undefined' || typeof arg.folder === 'string' ) &&\n    // identityManagement?: IdentityManagementConfig\n    ( typeof arg.identityManagement === 'undefined' || isIdentityManagementConfig(arg.identityManagement) ) &&\n    // ipFamily?: string\n    ( typeof arg.ipFamily === 'undefined' || typeof arg.ipFamily === 'string' ) &&\n    // kubernetesVersion?: string\n    ( typeof arg.kubernetesVersion === 'undefined' || typeof arg.kubernetesVersion === 'string' ) &&\n    // labels?: { [key: string]: string }\n    ( typeof arg.labels === 'undefined' || typeof arg.labels === 'string' ) &&\n    // machineHealthCheckEnabled?: boolean\n    ( typeof arg.machineHealthCheckEnabled === 'undefined' || typeof arg.machineHealthCheckEnabled === 'boolean' ) &&\n    // networking?: TKGNetwork\n    ( typeof arg.networking === 'undefined' || isTKGNetwork(arg.networking) ) &&\n    // numOfWorkerNode?: number\n    ( typeof arg.numOfWorkerNode === 'undefined' || typeof arg.numOfWorkerNode === 'number' ) &&\n    // os?: VSphereVirtualMachine\n    ( typeof arg.os === 'undefined' || isVSphereVirtualMachine(arg.os) ) &&\n    // resourcePool?: string\n    ( typeof arg.resourcePool === 'undefined' || typeof arg.resourcePool === 'string' ) &&\n    // ssh_key?: string\n    ( typeof arg.ssh_key === 'undefined' || typeof arg.ssh_key === 'string' ) &&\n    // vsphereCredentials?: VSphereCredentials\n    ( typeof arg.vsphereCredentials === 'undefined' || isVSphereCredentials(arg.vsphereCredentials) ) &&\n    // workerNodeType?: string\n    ( typeof arg.workerNodeType === 'undefined' || typeof arg.workerNodeType === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isVSphereResourcePool(arg: any): arg is models.VSphereResourcePool {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // moid?: string\n    ( typeof arg.moid === 'undefined' || typeof arg.moid === 'string' ) &&\n    // name?: string\n    ( typeof arg.name === 'undefined' || typeof arg.name === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isVSphereThumbprint(arg: any): arg is models.VSphereThumbprint {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // insecure?: boolean\n    ( typeof arg.insecure === 'undefined' || typeof arg.insecure === 'boolean' ) &&\n    // thumbprint?: string\n    ( typeof arg.thumbprint === 'undefined' || typeof arg.thumbprint === 'string' ) &&\n\n  true\n  );\n  }\n\nexport function isVSphereVirtualMachine(arg: any): arg is models.VSphereVirtualMachine {\n  return (\n  arg != null &&\n  typeof arg === 'object' &&\n    // isTemplate: boolean\n    ( typeof arg.isTemplate === 'boolean' ) &&\n    // k8sVersion?: string\n    ( typeof arg.k8sVersion === 'undefined' || typeof arg.k8sVersion === 'string' ) &&\n    // moid?: string\n    ( typeof arg.moid === 'undefined' || typeof arg.moid === 'string' ) &&\n    // name?: string\n    ( typeof arg.name === 'undefined' || typeof arg.name === 'string' ) &&\n    // osInfo?: OSInfo\n    ( typeof arg.osInfo === 'undefined' || isOSInfo(arg.osInfo) ) &&\n\n  true\n  );\n  }\n\n\n","/* tslint:disable */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { DefaultHttpOptions, HttpOptions } from './';\nimport { USE_DOMAIN, USE_HTTP_OPTIONS, APIClient } from './api-client.service';\n\nimport * as models from './models';\nimport * as guards from './guards';\n\n/**\n * Created with https://github.com/flowup/api-client-generator\n */\n@Injectable()\nexport class GuardedAPIClient extends APIClient {\n\n  constructor(readonly httpClient: HttpClient,\n              @Optional() @Inject(USE_DOMAIN) domain?: string,\n              @Optional() @Inject(USE_HTTP_OPTIONS) options?: DefaultHttpOptions) {\n    super(httpClient, domain, options);\n  }\n\n  getUI(\n    requestHttpOptions?: HttpOptions\n  ): Observable<File> {\n    return super.getUI(requestHttpOptions)\n      .pipe(tap((res: any) => guards.isFile(res) || console.error(`TypeGuard for response 'File' caught inconsistency.`, res)));\n  }\n\n  getUIFile(\n    args: {\n      filename: string,  // UI file name\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<File> {\n    return super.getUIFile(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isFile(res) || console.error(`TypeGuard for response 'File' caught inconsistency.`, res)));\n  }\n\n  getFeatureFlags(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.Features> {\n    return super.getFeatureFlags(requestHttpOptions)\n      .pipe(tap((res: any) => guards.isFeatures(res) || console.error(`TypeGuard for response 'Features' caught inconsistency.`, res)));\n  }\n\n  getTanzuEdition(\n    requestHttpOptions?: HttpOptions\n  ): Observable<string> {\n    return super.getTanzuEdition(requestHttpOptions)\n      .pipe(tap((res: any) => typeof res === 'string' || console.error(`TypeGuard for response 'string' caught inconsistency.`, res)));\n  }\n\n  verifyLdapConnect(\n    args: {\n      credentials?: models.LdapParams,  // (optional) LDAP configuration\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.LdapTestResult> {\n    return super.verifyLdapConnect(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isLdapTestResult(res) || console.error(`TypeGuard for response 'LdapTestResult' caught inconsistency.`, res)));\n  }\n\n  verifyLdapBind(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.LdapTestResult> {\n    return super.verifyLdapBind(requestHttpOptions)\n      .pipe(tap((res: any) => guards.isLdapTestResult(res) || console.error(`TypeGuard for response 'LdapTestResult' caught inconsistency.`, res)));\n  }\n\n  verifyLdapUserSearch(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.LdapTestResult> {\n    return super.verifyLdapUserSearch(requestHttpOptions)\n      .pipe(tap((res: any) => guards.isLdapTestResult(res) || console.error(`TypeGuard for response 'LdapTestResult' caught inconsistency.`, res)));\n  }\n\n  verifyLdapGroupSearch(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.LdapTestResult> {\n    return super.verifyLdapGroupSearch(requestHttpOptions)\n      .pipe(tap((res: any) => guards.isLdapTestResult(res) || console.error(`TypeGuard for response 'LdapTestResult' caught inconsistency.`, res)));\n  }\n\n  getAviClouds(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AviCloud[]> {\n    return super.getAviClouds(requestHttpOptions)\n      .pipe(tap((res: any) => guards.isAviCloud(res) || console.error(`TypeGuard for response 'AviCloud' caught inconsistency.`, res)));\n  }\n\n  getAviServiceEngineGroups(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AviServiceEngineGroup[]> {\n    return super.getAviServiceEngineGroups(requestHttpOptions)\n      .pipe(tap((res: any) => guards.isAviServiceEngineGroup(res) || console.error(`TypeGuard for response 'AviServiceEngineGroup' caught inconsistency.`, res)));\n  }\n\n  getAviVipNetworks(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AviVipNetwork[]> {\n    return super.getAviVipNetworks(requestHttpOptions)\n      .pipe(tap((res: any) => guards.isAviVipNetwork(res) || console.error(`TypeGuard for response 'AviVipNetwork' caught inconsistency.`, res)));\n  }\n\n  getProvider(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.ProviderInfo> {\n    return super.getProvider(requestHttpOptions)\n      .pipe(tap((res: any) => guards.isProviderInfo(res) || console.error(`TypeGuard for response 'ProviderInfo' caught inconsistency.`, res)));\n  }\n\n  getVsphereThumbprint(\n    args: {\n      host: string,  // vSphere host\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereThumbprint> {\n    return super.getVsphereThumbprint(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isVSphereThumbprint(res) || console.error(`TypeGuard for response 'VSphereThumbprint' caught inconsistency.`, res)));\n  }\n\n  setVSphereEndpoint(\n    args: {\n      credentials?: models.VSphereCredentials,  // (optional) vSphere credentials\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VsphereInfo> {\n    return super.setVSphereEndpoint(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isVsphereInfo(res) || console.error(`TypeGuard for response 'VsphereInfo' caught inconsistency.`, res)));\n  }\n\n  getVSphereDatacenters(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereDatacenter[]> {\n    return super.getVSphereDatacenters(requestHttpOptions)\n      .pipe(tap((res: any) => guards.isVSphereDatacenter(res) || console.error(`TypeGuard for response 'VSphereDatacenter' caught inconsistency.`, res)));\n  }\n\n  getVSphereDatastores(\n    args: {\n      dc: string,  // datacenter managed object Id, e.g. datacenter-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereDatastore[]> {\n    return super.getVSphereDatastores(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isVSphereDatastore(res) || console.error(`TypeGuard for response 'VSphereDatastore' caught inconsistency.`, res)));\n  }\n\n  getVSphereFolders(\n    args: {\n      dc: string,  // datacenter managed object Id, e.g. datacenter-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereFolder[]> {\n    return super.getVSphereFolders(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isVSphereFolder(res) || console.error(`TypeGuard for response 'VSphereFolder' caught inconsistency.`, res)));\n  }\n\n  getVSphereComputeResources(\n    args: {\n      dc: string,  // datacenter managed object Id, e.g. datacenter-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereManagementObject[]> {\n    return super.getVSphereComputeResources(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isVSphereManagementObject(res) || console.error(`TypeGuard for response 'VSphereManagementObject' caught inconsistency.`, res)));\n  }\n\n  getVSphereResourcePools(\n    args: {\n      dc: string,  // datacenter managed object Id, e.g. datacenter-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereResourcePool[]> {\n    return super.getVSphereResourcePools(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isVSphereResourcePool(res) || console.error(`TypeGuard for response 'VSphereResourcePool' caught inconsistency.`, res)));\n  }\n\n  getVSphereNetworks(\n    args: {\n      dc: string,  // datacenter managed object Id, e.g. datacenter-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereNetwork[]> {\n    return super.getVSphereNetworks(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isVSphereNetwork(res) || console.error(`TypeGuard for response 'VSphereNetwork' caught inconsistency.`, res)));\n  }\n\n  getVSphereNodeTypes(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.NodeType[]> {\n    return super.getVSphereNodeTypes(requestHttpOptions)\n      .pipe(tap((res: any) => guards.isNodeType(res) || console.error(`TypeGuard for response 'NodeType' caught inconsistency.`, res)));\n  }\n\n  getVSphereOSImages(\n    args: {\n      dc: string,  // datacenter managed object Id, e.g. datacenter-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereVirtualMachine[]> {\n    return super.getVSphereOSImages(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isVSphereVirtualMachine(res) || console.error(`TypeGuard for response 'VSphereVirtualMachine' caught inconsistency.`, res)));\n  }\n\n  exportTKGConfigForVsphere(\n    args: {\n      params: models.VsphereRegionalClusterParams,  // params to generate tkg configuration for vsphere\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string> {\n    return super.exportTKGConfigForVsphere(args, requestHttpOptions)\n      .pipe(tap((res: any) => typeof res === 'string' || console.error(`TypeGuard for response 'string' caught inconsistency.`, res)));\n  }\n\n  applyTKGConfigForVsphere(\n    args: {\n      params: models.VsphereRegionalClusterParams,  // params to apply changes to tkg configuration for vsphere\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.ConfigFileInfo> {\n    return super.applyTKGConfigForVsphere(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isConfigFileInfo(res) || console.error(`TypeGuard for response 'ConfigFileInfo' caught inconsistency.`, res)));\n  }\n\n  importTKGConfigForVsphere(\n    args: {\n      params: models.ConfigFile,  // config file from which to generate tkg configuration for vsphere\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VsphereRegionalClusterParams> {\n    return super.importTKGConfigForVsphere(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isVsphereRegionalClusterParams(res) || console.error(`TypeGuard for response 'VsphereRegionalClusterParams' caught inconsistency.`, res)));\n  }\n\n  createVSphereRegionalCluster(\n    args: {\n      params: models.VsphereRegionalClusterParams,  // params to create a regional cluster\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string> {\n    return super.createVSphereRegionalCluster(args, requestHttpOptions)\n      .pipe(tap((res: any) => typeof res === 'string' || console.error(`TypeGuard for response 'string' caught inconsistency.`, res)));\n  }\n\n  getVPCs(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.Vpc[]> {\n    return super.getVPCs(requestHttpOptions)\n      .pipe(tap((res: any) => guards.isVpc(res) || console.error(`TypeGuard for response 'Vpc' caught inconsistency.`, res)));\n  }\n\n  getAWSNodeTypes(\n    args: {\n      az?: string,  // (optional) AWS availability zone, e.g. us-west-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string[]> {\n    return super.getAWSNodeTypes(args, requestHttpOptions)\n      .pipe(tap((res: any) => typeof res === 'string' || console.error(`TypeGuard for response 'string' caught inconsistency.`, res)));\n  }\n\n  getAWSRegions(\n    requestHttpOptions?: HttpOptions\n  ): Observable<string[]> {\n    return super.getAWSRegions(requestHttpOptions)\n      .pipe(tap((res: any) => typeof res === 'string' || console.error(`TypeGuard for response 'string' caught inconsistency.`, res)));\n  }\n\n  getAWSOSImages(\n    args: {\n      region: string,  // AWS region, e.g. us-west-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AWSVirtualMachine[]> {\n    return super.getAWSOSImages(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isAWSVirtualMachine(res) || console.error(`TypeGuard for response 'AWSVirtualMachine' caught inconsistency.`, res)));\n  }\n\n  getAWSCredentialProfiles(\n    requestHttpOptions?: HttpOptions\n  ): Observable<string[]> {\n    return super.getAWSCredentialProfiles(requestHttpOptions)\n      .pipe(tap((res: any) => typeof res === 'string' || console.error(`TypeGuard for response 'string' caught inconsistency.`, res)));\n  }\n\n  getAWSAvailabilityZones(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AWSAvailabilityZone[]> {\n    return super.getAWSAvailabilityZones(requestHttpOptions)\n      .pipe(tap((res: any) => guards.isAWSAvailabilityZone(res) || console.error(`TypeGuard for response 'AWSAvailabilityZone' caught inconsistency.`, res)));\n  }\n\n  getAWSSubnets(\n    args: {\n      vpcId: string,  // VPC Id\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AWSSubnet[]> {\n    return super.getAWSSubnets(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isAWSSubnet(res) || console.error(`TypeGuard for response 'AWSSubnet' caught inconsistency.`, res)));\n  }\n\n  exportTKGConfigForAWS(\n    args: {\n      params: models.AWSRegionalClusterParams,  // parameters to generate TKG configuration file for AWS\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string> {\n    return super.exportTKGConfigForAWS(args, requestHttpOptions)\n      .pipe(tap((res: any) => typeof res === 'string' || console.error(`TypeGuard for response 'string' caught inconsistency.`, res)));\n  }\n\n  applyTKGConfigForAWS(\n    args: {\n      params: models.AWSRegionalClusterParams,  // parameters to apply changes to TKG configuration file for AWS\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.ConfigFileInfo> {\n    return super.applyTKGConfigForAWS(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isConfigFileInfo(res) || console.error(`TypeGuard for response 'ConfigFileInfo' caught inconsistency.`, res)));\n  }\n\n  createAWSRegionalCluster(\n    args: {\n      params: models.AWSRegionalClusterParams,  // parameters to create a regional cluster\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string> {\n    return super.createAWSRegionalCluster(args, requestHttpOptions)\n      .pipe(tap((res: any) => typeof res === 'string' || console.error(`TypeGuard for response 'string' caught inconsistency.`, res)));\n  }\n\n  importTKGConfigForAWS(\n    args: {\n      params: models.ConfigFile,  // config file from which to generate tkg configuration for aws\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AWSRegionalClusterParams> {\n    return super.importTKGConfigForAWS(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isAWSRegionalClusterParams(res) || console.error(`TypeGuard for response 'AWSRegionalClusterParams' caught inconsistency.`, res)));\n  }\n\n  getAzureEndpoint(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AzureAccountParams> {\n    return super.getAzureEndpoint(requestHttpOptions)\n      .pipe(tap((res: any) => guards.isAzureAccountParams(res) || console.error(`TypeGuard for response 'AzureAccountParams' caught inconsistency.`, res)));\n  }\n\n  getAzureResourceGroups(\n    args: {\n      location: string,  // Azure region\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AzureResourceGroup[]> {\n    return super.getAzureResourceGroups(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isAzureResourceGroup(res) || console.error(`TypeGuard for response 'AzureResourceGroup' caught inconsistency.`, res)));\n  }\n\n  createAzureResourceGroup(\n    args: {\n      params: models.AzureResourceGroup,  // parameters to create a new Azure resource group\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string> {\n    return super.createAzureResourceGroup(args, requestHttpOptions)\n      .pipe(tap((res: any) => typeof res === 'string' || console.error(`TypeGuard for response 'string' caught inconsistency.`, res)));\n  }\n\n  getAzureVnets(\n    args: {\n      resourceGroupName: string,  // Name of the Azure resource group\n      location: string,  // Azure region\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AzureVirtualNetwork[]> {\n    return super.getAzureVnets(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isAzureVirtualNetwork(res) || console.error(`TypeGuard for response 'AzureVirtualNetwork' caught inconsistency.`, res)));\n  }\n\n  createAzureVirtualNetwork(\n    args: {\n      resourceGroupName: string,  // Name of the Azure resource group\n      params: models.AzureVirtualNetwork,  // parameters to create a new Azure Virtual network\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string> {\n    return super.createAzureVirtualNetwork(args, requestHttpOptions)\n      .pipe(tap((res: any) => typeof res === 'string' || console.error(`TypeGuard for response 'string' caught inconsistency.`, res)));\n  }\n\n  getAzureOSImages(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AzureVirtualMachine[]> {\n    return super.getAzureOSImages(requestHttpOptions)\n      .pipe(tap((res: any) => guards.isAzureVirtualMachine(res) || console.error(`TypeGuard for response 'AzureVirtualMachine' caught inconsistency.`, res)));\n  }\n\n  getAzureRegions(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AzureLocation[]> {\n    return super.getAzureRegions(requestHttpOptions)\n      .pipe(tap((res: any) => guards.isAzureLocation(res) || console.error(`TypeGuard for response 'AzureLocation' caught inconsistency.`, res)));\n  }\n\n  getAzureInstanceTypes(\n    args: {\n      location: string,  // Azure region name\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AzureInstanceType[]> {\n    return super.getAzureInstanceTypes(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isAzureInstanceType(res) || console.error(`TypeGuard for response 'AzureInstanceType' caught inconsistency.`, res)));\n  }\n\n  exportTKGConfigForAzure(\n    args: {\n      params: models.AzureRegionalClusterParams,  // parameters to generate TKG configuration file for Azure\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string> {\n    return super.exportTKGConfigForAzure(args, requestHttpOptions)\n      .pipe(tap((res: any) => typeof res === 'string' || console.error(`TypeGuard for response 'string' caught inconsistency.`, res)));\n  }\n\n  applyTKGConfigForAzure(\n    args: {\n      params: models.AzureRegionalClusterParams,  // parameters to apply changes to TKG configuration file for Azure\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.ConfigFileInfo> {\n    return super.applyTKGConfigForAzure(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isConfigFileInfo(res) || console.error(`TypeGuard for response 'ConfigFileInfo' caught inconsistency.`, res)));\n  }\n\n  createAzureRegionalCluster(\n    args: {\n      params: models.AzureRegionalClusterParams,  // parameters to create a regional cluster\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string> {\n    return super.createAzureRegionalCluster(args, requestHttpOptions)\n      .pipe(tap((res: any) => typeof res === 'string' || console.error(`TypeGuard for response 'string' caught inconsistency.`, res)));\n  }\n\n  importTKGConfigForAzure(\n    args: {\n      params: models.ConfigFile,  // config file from which to generate tkg configuration for azure\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AzureRegionalClusterParams> {\n    return super.importTKGConfigForAzure(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isAzureRegionalClusterParams(res) || console.error(`TypeGuard for response 'AzureRegionalClusterParams' caught inconsistency.`, res)));\n  }\n\n  checkIfDockerDaemonAvailable(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.DockerDaemonStatus> {\n    return super.checkIfDockerDaemonAvailable(requestHttpOptions)\n      .pipe(tap((res: any) => guards.isDockerDaemonStatus(res) || console.error(`TypeGuard for response 'DockerDaemonStatus' caught inconsistency.`, res)));\n  }\n\n  exportTKGConfigForDocker(\n    args: {\n      params: models.DockerRegionalClusterParams,  // parameters to generate TKG configuration file for Docker\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string> {\n    return super.exportTKGConfigForDocker(args, requestHttpOptions)\n      .pipe(tap((res: any) => typeof res === 'string' || console.error(`TypeGuard for response 'string' caught inconsistency.`, res)));\n  }\n\n  applyTKGConfigForDocker(\n    args: {\n      params: models.DockerRegionalClusterParams,  // parameters to apply changes to TKG configuration file for Docker\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.ConfigFileInfo> {\n    return super.applyTKGConfigForDocker(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isConfigFileInfo(res) || console.error(`TypeGuard for response 'ConfigFileInfo' caught inconsistency.`, res)));\n  }\n\n  createDockerRegionalCluster(\n    args: {\n      params: models.DockerRegionalClusterParams,  // parameters to create a regional cluster\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string> {\n    return super.createDockerRegionalCluster(args, requestHttpOptions)\n      .pipe(tap((res: any) => typeof res === 'string' || console.error(`TypeGuard for response 'string' caught inconsistency.`, res)));\n  }\n\n  importTKGConfigForDocker(\n    args: {\n      params: models.ConfigFile,  // config file from which to generate tkg configuration for docker\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.DockerRegionalClusterParams> {\n    return super.importTKGConfigForDocker(args, requestHttpOptions)\n      .pipe(tap((res: any) => guards.isDockerRegionalClusterParams(res) || console.error(`TypeGuard for response 'DockerRegionalClusterParams' caught inconsistency.`, res)));\n  }\n\n}\n","/* tslint:disable */\n\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { APIClient, USE_DOMAIN, USE_HTTP_OPTIONS } from './api-client.service';\nimport { GuardedAPIClient } from './guarded-api-client.service';\n\nexport { APIClient } from './api-client.service';\nexport { APIClientInterface } from './api-client.interface';\nexport { GuardedAPIClient } from './guarded-api-client.service';\n\n/**\n * provided options, headers and params will be used as default for each request\n */\nexport interface DefaultHttpOptions {\n  headers?: {[key: string]: string};\n  params?: {[key: string]: string};\n  reportProgress?: boolean;\n  withCredentials?: boolean;\n}\n\nexport interface HttpOptions {\n  headers?: HttpHeaders;\n  params?: HttpParams;\n  reportProgress?: boolean;\n  withCredentials?: boolean;\n}\n\nexport interface APIClientModuleConfig {\n  domain?: string;\n  guardResponses?: boolean; // validate responses with type guards\n  httpOptions?: DefaultHttpOptions;\n}\n\n@NgModule({})\nexport class APIClientModule {\n  /**\n   * Use this method in your root module to provide the APIClientModule\n   *\n   * If you are not providing\n   * @param { APIClientModuleConfig } config\n   * @returns { ModuleWithProviders }\n   */\n  static forRoot(config: APIClientModuleConfig = {}): ModuleWithProviders<APIClientModule> {\n    return {\n      ngModule: APIClientModule,\n      providers: [\n        ...(config.domain != null ? [{provide: USE_DOMAIN, useValue: config.domain}] : []),\n        ...(config.httpOptions ? [{provide: USE_HTTP_OPTIONS, useValue: config.httpOptions}] : []),\n        ...(config.guardResponses ? [{provide: APIClient, useClass: GuardedAPIClient }] : [APIClient]),\n      ]\n    };\n  }\n}\n","/* tslint:disable */\n\nexport { AviCloud } from './avi-cloud.model';\nexport { AviConfig } from './avi-config.model';\nexport { AviControllerParams } from './avi-controller-params.model';\nexport { AviNetworkParams } from './avi-network-params.model';\nexport { AviServiceEngineGroup } from './avi-service-engine-group.model';\nexport { AviSubnet } from './avi-subnet.model';\nexport { AviVipNetwork } from './avi-vip-network.model';\nexport { AWSAccountParams } from './aws-account-params.model';\nexport { AWSAvailabilityZone } from './aws-availability-zone.model';\nexport { AWSNodeAz } from './aws-node-az.model';\nexport { AWSRegionalClusterParams } from './aws-regional-cluster-params.model';\nexport { AWSRoute } from './aws-route.model';\nexport { AWSRouteTable } from './aws-route-table.model';\nexport { AWSSubnet } from './aws-subnet.model';\nexport { AWSVirtualMachine } from './aws-virtual-machine.model';\nexport { AWSVpc } from './aws-vpc.model';\nexport { AzureAccountParams } from './azure-account-params.model';\nexport { AzureInstanceType } from './azure-instance-type.model';\nexport { AzureLocation } from './azure-location.model';\nexport { AzureRegionalClusterParams } from './azure-regional-cluster-params.model';\nexport { AzureResourceGroup } from './azure-resource-group.model';\nexport { AzureSubnet } from './azure-subnet.model';\nexport { AzureVirtualMachine } from './azure-virtual-machine.model';\nexport { AzureVirtualNetwork } from './azure-virtual-network.model';\nexport { ConfigFile } from './config-file.model';\nexport { ConfigFileInfo } from './config-file-info.model';\nexport { DockerDaemonStatus } from './docker-daemon-status.model';\nexport { DockerRegionalClusterParams } from './docker-regional-cluster-params.model';\nexport { Error } from './error.model';\nexport { FeatureMap } from './feature-map.model';\nexport { Features } from './features.model';\nexport { HTTPProxyConfiguration } from './http-proxy-configuration.model';\nexport { IdentityManagementConfig } from './identity-management-config.model';\nexport { LdapParams } from './ldap-params.model';\nexport { LdapTestResult } from './ldap-test-result.model';\nexport { NodeType } from './node-type.model';\nexport { OSInfo } from './os-info.model';\nexport { ProviderInfo } from './provider-info.model';\nexport { TKGNetwork } from './tkg-network.model';\nexport { Vpc } from './vpc.model';\nexport { VSphereAvailabilityZone } from './v-sphere-availability-zone.model';\nexport { VSphereCredentials } from './v-sphere-credentials.model';\nexport { VSphereDatacenter } from './v-sphere-datacenter.model';\nexport { VSphereDatastore } from './v-sphere-datastore.model';\nexport { VSphereFolder } from './v-sphere-folder.model';\nexport { VsphereInfo } from './vsphere-info.model';\nexport { VSphereManagementObject } from './v-sphere-management-object.model';\nexport { VSphereNetwork } from './v-sphere-network.model';\nexport { VSphereRegion } from './v-sphere-region.model';\nexport { VsphereRegionalClusterParams } from './vsphere-regional-cluster-params.model';\nexport { VSphereResourcePool } from './v-sphere-resource-pool.model';\nexport { VSphereThumbprint } from './v-sphere-thumbprint.model';\nexport { VSphereVirtualMachine } from './v-sphere-virtual-machine.model';\n","/*\n * Public API Surface of tanzu-management-cluster-ng-api\n * Exports swagger generated APIClient and modules, and swagger generated models\n */\nexport * from './lib/swagger/index';\nexport * from './lib/swagger/models/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["guards.isFile","guards.isFeatures","guards.isLdapTestResult","guards.isAviCloud","guards.isAviServiceEngineGroup","guards.isAviVipNetwork","guards.isProviderInfo","guards.isVSphereThumbprint","guards.isVsphereInfo","guards.isVSphereDatacenter","guards.isVSphereDatastore","guards.isVSphereFolder","guards.isVSphereManagementObject","guards.isVSphereResourcePool","guards.isVSphereNetwork","guards.isNodeType","guards.isVSphereVirtualMachine","guards.isConfigFileInfo","guards.isVsphereRegionalClusterParams","guards.isVpc","guards.isAWSVirtualMachine","guards.isAWSAvailabilityZone","guards.isAWSSubnet","guards.isAWSRegionalClusterParams","guards.isAzureAccountParams","guards.isAzureResourceGroup","guards.isAzureVirtualNetwork","guards.isAzureVirtualMachine","guards.isAzureLocation","guards.isAzureInstanceType","guards.isAzureRegionalClusterParams","guards.isDockerDaemonStatus","guards.isDockerRegionalClusterParams"],"mappings":"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"}