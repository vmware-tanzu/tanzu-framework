#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:data", "data")
#@ load("lib/helpers.star", "get_bom_data_for_tkr_name", "get_default_tkg_bom_data", "kubeadm_image_repo", "get_image_repo_for_component", "get_vsphere_thumbprint")
#@ load("lib/validate.star", "validate_configuration")
#@ load("@ytt:yaml", "yaml")
#@ validate_configuration("vsphere")

#@ bomDataForK8sVersion = get_bom_data_for_tkr_name()
#@ bomData = get_default_tkg_bom_data()


#@ def kube_vip_pod():
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  name: kube-vip
  namespace: kube-system
spec:
  containers:
  - args:
    - start
    env:
    - name: vip_arp
      value: "true"
    - name: vip_leaderelection
      value: "true"
    - name: address
      value: #@ data.values.BYOH_CONTROL_PLANE_ENDPOINT
    - name: vip_interface
      value:  #@ data.values.VIP_NETWORK_INTERFACE
    - name: vip_leaseduration
      value: "15"
    - name: vip_renewdeadline
      value: "10"
    - name: vip_retryperiod
      value: "2"
    image: #@ "{}/{}:{}".format(get_image_repo_for_component(bomData.components["kube-vip"][0].images.kubeVipImage), bomData.components["kube-vip"][0].images.kubeVipImage.imagePath, bomData.components["kube-vip"][0].images.kubeVipImage.tag)
    imagePullPolicy: IfNotPresent
    name: kube-vip
    resources: {}
    securityContext:
      capabilities:
        add:
        - NET_ADMIN
        - SYS_TIME
    volumeMounts:
    - mountPath: /etc/kubernetes/admin.conf
      name: kubeconfig
  hostNetwork: true
  volumes:
  - hostPath:
      path: /etc/kubernetes/admin.conf
      type: FileOrCreate
    name: kubeconfig
status: {}
#@ end




#@overlay/match by=overlay.subset({"kind":"Cluster"})
---
apiVersion: cluster.x-k8s.io/v1alpha4
kind: Cluster
metadata:
  name: #@ data.values.CLUSTER_NAME
  #@ if data.values.BYOH_CONTROL_PLANE_ENDPOINT:
  #@overlay/match missing_ok=True
  annotations:
    tkg.tanzu.vmware.com/cluster-controlplane-endpoint: #@ data.values.BYOH_CONTROL_PLANE_ENDPOINT
  #@ end
  labels:
    #@overlay/match missing_ok=True
    #@yaml/text-templated-strings
    #@ if data.values.TKG_CLUSTER_ROLE != "workload":
    cluster-role.tkg.tanzu.vmware.com/(@= data.values.TKG_CLUSTER_ROLE @): ""
    #@ end
    tkg.tanzu.vmware.com/cluster-name: #@ data.values.CLUSTER_NAME
    #@overlay/match missing_ok=True
    tanzuKubernetesRelease: #@ data.values.KUBERNETES_RELEASE
spec:
  infrastructureRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha4
    kind: ByoCluster
    name: #@ data.values.CLUSTER_NAME
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha4
    kind: KubeadmControlPlane
    name: #@ "{}-control-plane".format(data.values.CLUSTER_NAME)
  clusterNetwork:
    pods:
      cidrBlocks:
      #@overlay/match by=overlay.index(0)
      - #@ data.values.CLUSTER_CIDR
    services:
      cidrBlocks:
      #@overlay/match by=overlay.index(0)
      - #@ data.values.SERVICE_CIDR

#@overlay/match by=overlay.subset({"kind":"ByoCluster"})
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha4
kind: ByoCluster
metadata:
  name: #@ data.values.CLUSTER_NAME
spec:
  #@ if not data.values.AVI_CONTROL_PLANE_HA_PROVIDER:
  controlPlaneEndpoint:
    host: #@ data.values.BYOH_CONTROL_PLANE_ENDPOINT
    port: 6443
  #@ else:
  #@overlay/remove
  controlPlaneEndpoint:
  #@ end  


#@overlay/match by=overlay.subset({"kind": "ByoMachineTemplate", "metadata":{"name": "${ CLUSTER_NAME }-control-plane"}})
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha4
kind: ByoMachineTemplate
metadata:
  name: #@ "{}-control-plane".format(data.values.CLUSTER_NAME)
spec:
  template:
    spec: {}

#@overlay/match by=overlay.subset({"kind":"KubeadmControlPlane"})
---
apiVersion: controlplane.cluster.x-k8s.io/v1alpha4
kind: KubeadmControlPlane
metadata:
  name: #@ "{}-control-plane".format(data.values.CLUSTER_NAME)
spec:
  kubeadmConfigSpec:      
    files:
    #@ if not data.values.AVI_CONTROL_PLANE_HA_PROVIDER:
    #@overlay/match by=overlay.index(0)
    - content: #@ yaml.encode(kube_vip_pod())
    #@ else:
    #@overlay/match by=overlay.index(0)  
    #@overlay/remove
    - content:
    #@ end
    users:
    #@overlay/match by=overlay.index(0)
    #@overlay/replace
    - name: capv
      sshAuthorizedKeys:
      - #@ data.values.VSPHERE_SSH_AUTHORIZED_KEY
      sudo: ALL=(ALL) NOPASSWD:ALL
    #! TODO: we can remove this block once we are consuming a version of containerd with this change: https://github.com/containerd/containerd/pull/5145
    #@ if data.values.TKG_IP_FAMILY == "ipv6":
    #@overlay/match missing_ok=True
    postKubeadmCommands:
    #@overlay/append
    - sed -i '/listen-client-urls/ s/$/,https:\/\/127.0.0.1:2379/' /etc/kubernetes/manifests/etcd.yaml
    #@ end
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1alpha4
      kind: ByoMachineTemplate
      name: byohcluster
  replicas: #@ data.values.CONTROL_PLANE_MACHINE_COUNT
  version: #@ data.values.KUBERNETES_VERSION

#@overlay/match by=overlay.subset({"kind":"KubeadmConfigTemplate", "metadata":{"name": "${ CLUSTER_NAME }-md-0"}})
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha4
kind: KubeadmConfigTemplate
metadata:
  name: #@ "{}-md-0".format(data.values.CLUSTER_NAME)
spec:
  template:
    spec:
      users:
      #@overlay/match by=overlay.index(0)
      #@overlay/replace
      - name: capv
        sshAuthorizedKeys:
        - #@ data.values.VSPHERE_SSH_AUTHORIZED_KEY
        sudo: ALL=(ALL) NOPASSWD:ALL

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cpi-manifests
  namespace: default
---