#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:data", "data")

#@overlay/match by=overlay.subset({"kind":"ClusterClass"})
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: ClusterClass
spec:
  controlPlane:
    #@overlay/match missing_ok=True
    machineHealthCheck:
      #@ if data.values.ENABLE_MHC or data.values.ENABLE_MHC_CONTROL_PLANE:
      nodeStartupTimeout: #@ data.values.NODE_STARTUP_TIMEOUT
      unhealthyConditions:
      - type: Ready
        status: Unknown
        timeout: #@ data.values.MHC_UNKNOWN_STATUS_TIMEOUT
      - type: Ready
        status: "False"
        timeout: #@ data.values.MHC_FALSE_STATUS_TIMEOUT
      #@ end
  workers:
    machineDeployments:
    #@overlay/match by=overlay.index(0)
    - class: tkg-worker
      #@overlay/match missing_ok=True
      machineHealthCheck:
        #@ if data.values.ENABLE_MHC or data.values.ENABLE_MHC_WORKER_NODE:
        nodeStartupTimeout: #@ data.values.NODE_STARTUP_TIMEOUT
        unhealthyConditions:
        - type: Ready
          status: Unknown
          timeout: #@ data.values.MHC_UNKNOWN_STATUS_TIMEOUT
        - type: Ready
          status: "False"
          timeout: #@ data.values.MHC_FALSE_STATUS_TIMEOUT
        #@ end

#@overlay/match by=overlay.subset({"kind":"KubeadmConfigTemplate"}),expects="1+"
---
spec:
  #@overlay/match missing_ok=True
  template:
    #@overlay/match missing_ok=True
    spec:
      #@overlay/match missing_ok=True
      preKubeadmCommands:
      #@overlay/append
      - "if [ -f /etc/kubernetes/azure.json ]; then sed -i 's/\"vmType\": \"vmss\"/\"vmType\": \"standard\"/' /etc/kubernetes/azure.json; fi"

#@overlay/match by=overlay.subset({"kind":"KubeadmControlPlaneTemplate"})
---
spec:
  template:
    spec:
      #@overlay/match missing_ok=True
      kubeadmConfigSpec:
        #@overlay/match missing_ok=True
        preKubeadmCommands:
        #@overlay/append
        - "if [ -f /etc/kubernetes/azure.json ]; then sed -i 's/\"vmType\": \"vmss\"/\"vmType\": \"standard\"/' /etc/kubernetes/azure.json; fi"
