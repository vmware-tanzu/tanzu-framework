#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")
#@ load("@ytt:struct", "struct")
#@ load("/lib/config_variable_association.star", "config_variable_association")

#@ list_skip_variable_from_storing = [
#@  "VSPHERE_PASSWORD",
#@  "AWS_ACCESS_KEY_ID",
#@  "AWS_SECRET_ACCESS_KEY",
#@  "AZURE_CLIENT_ID",
#@  "AZURE_CLIENT_SECRET",
#@  "NSXT_PASSWORD",
#@  "OIDC_IDENTITY_PROVIDER_CLIENT_SECRET",
#@  "LDAP_BIND_PASSWORD",
#@  "AVI_PASSWORD",
#@ ]

#@ def getConfigKeyValues():
#@ kvs = config_variable_association()

#@ for configVariable in kvs:


#@ if configVariable not in list_skip_variable_from_storing and data.values.PROVIDER_TYPE in kvs[configVariable]:
#@ value = data.values[configVariable]
#@ if configVariable == "TKG_NO_PROXY":
#@   no_proxy_list = data.values.TKG_NO_PROXY.split(",")
#@   value = ",".join(sorted(list(set(no_proxy_list))))
#@ end

#@yaml/text-templated-strings
(@= configVariable @): #@ value
#@ end

#@ end
#@ end

---
apiVersion: v1
kind: Secret
metadata:
  name: #@ "{}-config-values".format(data.values.CLUSTER_NAME)
  labels:
    tkg.tanzu.vmware.com/cluster-name: #@ data.values.CLUSTER_NAME
    clusterctl.cluster.x-k8s.io/move: ""
type: addons.cluster.x-k8s.io/resource-set
stringData:
  value: #@ yaml.encode(getConfigKeyValues())
