#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:regexp", "regexp")
#@ load("@ytt:data", "data")
#@ load("/lib/helpers.star", "get_bom_data_for_tkr_name", "get_image_repo_for_component")

#@ if data.values.PROVIDER_TYPE != "tkg-service-vsphere":
#@   antreaImage = get_bom_data_for_tkr_name().components["antrea"][0].images.antreaImage
#@   antreaImageRepo = get_image_repo_for_component(antreaImage)
#@ end

#@ def antrea_config_regex_match(x, l, r):
#@ if not ("metadata" in l and "name" in l["metadata"]):
#@   return False
#@ end
#@  return regexp.match("antrea-config-*", l["metadata"]["name"])
#@ end

#@ def updateantreaimage():

#@overlay/match by=overlay.subset({"kind":"Deployment","metadata":{"name": "antrea-controller"}})
---
spec:
  template:
    spec:
      containers:
        #@overlay/match by=overlay.subset({"name":"antrea-controller"})
        - image: #@ "{}/{}:{}".format(antreaImageRepo, antreaImage.imagePath, antreaImage.tag)


#@overlay/match by=overlay.subset({"kind":"DaemonSet","metadata":{"name": "antrea-agent"}})
---
spec:
  template:
    spec:
      containers:
        #@overlay/match by=overlay.subset({"name":"antrea-agent"})
        - image: #@ "{}/{}:{}".format(antreaImageRepo, antreaImage.imagePath, antreaImage.tag)
        #@overlay/match by=overlay.subset({"name":"antrea-ovs"})
        - image: #@ "{}/{}:{}".format(antreaImageRepo, antreaImage.imagePath, antreaImage.tag)

      initContainers:
        #@overlay/match by=overlay.subset({"name":"install-cni"})
        - image: #@ "{}/{}:{}".format(antreaImageRepo, antreaImage.imagePath, antreaImage.tag)

#@ end
