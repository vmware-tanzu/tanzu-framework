#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")
#@ load("/lib/helpers.star", "get_bom_data_for_tkr_name", "tkg_image_repo",  "get_image_repo_for_component")

#@ if data.values.PROVIDER_TYPE != "tkg-service-vsphere":
#@   antreaImage = get_bom_data_for_tkr_name().components["antrea"][0].images.antreaImage
#@ end

#@ def is_dualstack():
#@   return data.values.TKG_IP_FAMILY in ["ipv4,ipv6", "ipv6,ipv4"]
#@ end

#@ def get_ipv4_service_cidr():
#@   if not is_dualstack():
#@     return data.values.SERVICE_CIDR
#@   end
#@   if data.values.TKG_IP_FAMILY.startswith("ipv4"):
#@     return data.values.SERVICE_CIDR.split(",")[0]
#@   end
#@   if data.values.TKG_IP_FAMILY.startswith("ipv6"):
#@     return data.values.SERVICE_CIDR.split(",")[1]
#@   end
#@ end

#@ def get_ipv6_service_cidr():
#@   if not is_dualstack():
#@     return data.values.SERVICE_CIDR
#@   end
#@   if data.values.TKG_IP_FAMILY.startswith("ipv6"):
#@     return data.values.SERVICE_CIDR.split(",")[0]
#@   end
#@   if data.values.TKG_IP_FAMILY.startswith("ipv4"):
#@     return data.values.SERVICE_CIDR.split(",")[1]
#@   end
#@ end

#@ def antreadatavalues():
infraProvider: #@ data.values.PROVIDER_TYPE
antrea:
  config:
    #@ if is_dualstack():
    serviceCIDR: #@ get_ipv4_service_cidr()
    #@overlay/match missing_ok=True
    serviceCIDRv6: #@ get_ipv6_service_cidr()
    #@ else:
    serviceCIDR: #@ data.values.SERVICE_CIDR
    #@ end
    #@ if data.values.NSXT_POD_ROUTING_ENABLED:
    trafficEncapMode: "noEncap"
    noSNAT: true
    #@ else:
    trafficEncapMode: #@ data.values.ANTREA_TRAFFIC_ENCAP_MODE
    noSNAT: #@ data.values.ANTREA_NO_SNAT
    #@ end
    tlsCipherSuites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384
    disableUdpTunnelOffload: #@ data.values.ANTREA_DISABLE_UDP_TUNNEL_OFFLOAD
    featureGates:
      #@ if data.values.NSXT_POD_ROUTING_ENABLED:
      AntreaProxy: true
      #@ else:
      AntreaProxy: #@ data.values.ANTREA_PROXY
      #@ end
      EndpointSlice: #@ data.values.ANTREA_ENDPOINTSLICE
      AntreaPolicy: #@ data.values.ANTREA_POLICY
      NodePortLocal: #@ data.values.ANTREA_NODEPORTLOCAL
      AntreaTraceflow: #@ data.values.ANTREA_TRACEFLOW
      Egress: #@ data.values.ANTREA_EGRESS
      FlowExporter: #@ data.values.ANTREA_FLOWEXPORTER
#@ if data.values.TKG_CLUSTER_ROLE == "workload": #! For backwards compatibility. i.e. C.1 mgmt cluster creates a C.0 wlc with older addon templates.
  image:
    repository: #@ get_image_repo_for_component(antreaImage)
    path: #@ antreaImage.imagePath
    tag: #@ antreaImage.tag
    pullPolicy: IfNotPresent
#@ end

#@ end
