#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:template", "template")
#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")
#@ load("tkr.lib.yaml", "tkryaml")
#@ load("tkr_overlay.lib.yaml", "tkroverlay")

#@ if data.values.PROVIDER_TYPE != "tkg-service-vsphere" and data.values.TKG_CLUSTER_ROLE != "workload" and not data.values.FEATURE_FLAG_PACKAGE_BASED_LCM:

#@ if data.values.DISABLE_CRS_FOR_ADDON_TYPE and "tkr/tkr-controller" in data.values.DISABLE_CRS_FOR_ADDON_TYPE:
--- #@ template.replace(overlay.apply(tkryaml(), tkroverlay()))

#@ else:

---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  name: #@ "{}-tkr".format(data.values.CLUSTER_NAME)
  labels:
    cluster.x-k8s.io/cluster-name: #@ data.values.CLUSTER_NAME
  annotations:
    tkg.tanzu.vmware.com/addon-type: "tkr/tkr-controller"
spec:
  strategy: "ApplyOnce"
  clusterSelector:
    matchLabels:
      tkg.tanzu.vmware.com/cluster-name: #@ data.values.CLUSTER_NAME
  resources:
  - name: #@ "{}-tkr".format(data.values.CLUSTER_NAME)
    kind: Secret
---
apiVersion: v1
kind: Secret
metadata:
  name: #@ "{}-tkr".format(data.values.CLUSTER_NAME)
  annotations:
    tkg.tanzu.vmware.com/addon-type: "tkr/tkr-controller"
type: addons.cluster.x-k8s.io/resource-set
stringData:
  value: #@ yaml.encode(overlay.apply(tkryaml(), tkroverlay()))

#@ end

#@ end
