#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:data", "data")
#@ load("/lib/helpers.star", "tkg_image_repo_customized", "tkg_image_repo_hostname", "tkg_image_repo_ca_cert", "tkg_image_repo_skip_tls_verify")

#@ if tkg_image_repo_ca_cert() and not tkg_image_repo_skip_tls_verify():
#@overlay/match by=overlay.subset({"kind":"KubeadmControlPlane"})
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
spec:
  kubeadmConfigSpec:
    #@overlay/match missing_ok=True
    preKubeadmCommands:
      #@overlay/append
      - #@ "echo '[plugins.\"io.containerd.grpc.v1.cri\".registry.configs.\"" + tkg_image_repo_hostname() + "\".tls]' >> /etc/containerd/config.toml"
      #@overlay/append
      - #@ "echo '  ca_file = \"/etc/containerd/" + tkg_image_repo_hostname() + ".crt\"' >> /etc/containerd/config.toml"
      #@overlay/append
      - systemctl restart containerd
    #@overlay/match missing_ok=True
    files:
      #@overlay/append
      - path: #@ "/etc/containerd/" + tkg_image_repo_hostname() + ".crt"
        content: #@ tkg_image_repo_ca_cert()
        encoding: "base64"
        permissions: "0444"

#@overlay/match by=overlay.subset({"kind":"KubeadmConfigTemplate"}),expects="1+"
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
spec:
  template:
    spec:
      #@overlay/match missing_ok=True
      preKubeadmCommands:
        #@overlay/append
        - #@ "echo '[plugins.\"io.containerd.grpc.v1.cri\".registry.configs.\"" + tkg_image_repo_hostname() + "\".tls]' >> /etc/containerd/config.toml"
        #@overlay/append
        - #@ "echo '  ca_file = \"/etc/containerd/" + tkg_image_repo_hostname() + ".crt\"' >> /etc/containerd/config.toml"
        #@overlay/append
        - systemctl restart containerd
      #@overlay/match missing_ok=True
      files:
        #@overlay/append
        - path: #@ "/etc/containerd/" + tkg_image_repo_hostname() + ".crt"
          content: #@ tkg_image_repo_ca_cert()
          encoding: "base64"
          permissions: "0444"
#@ end
