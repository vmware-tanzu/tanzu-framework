#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:data", "data")

#@ if data.values.PROVIDER_TYPE != "tkg-service-vsphere":
#@ if (data.values.ENABLE_MHC != False and data.values.ENABLE_MHC_WORKER_NODE) or data.values.ENABLE_MHC:
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineHealthCheck
metadata:
  name: #@ data.values.CLUSTER_NAME
spec:
  clusterName: #@ data.values.CLUSTER_NAME
  nodeStartupTimeout: #@ data.values.NODE_STARTUP_TIMEOUT
  selector:
    matchLabels:
      node-pool: #@ "{}-worker-pool".format(data.values.CLUSTER_NAME)
  unhealthyConditions:
  #@overlay/match by=overlay.map_key("status")
  - type: Ready
    status: Unknown
    timeout: #@ data.values.MHC_UNKNOWN_STATUS_TIMEOUT
  #@overlay/match by=overlay.map_key("status")
  - type: Ready
    status: "False"
    timeout: #@ data.values.MHC_FALSE_STATUS_TIMEOUT
#@ end
---
#@ if (data.values.ENABLE_MHC != False and data.values.ENABLE_MHC_CONTROL_PLANE) or data.values.ENABLE_MHC:
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineHealthCheck
metadata:
  name: #@ "{}-control-plane".format(data.values.CLUSTER_NAME)
spec:
  clusterName: #@ data.values.CLUSTER_NAME
  nodeStartupTimeout: #@ data.values.NODE_STARTUP_TIMEOUT
  selector:
    matchLabels:
      cluster.x-k8s.io/control-plane: ""
  unhealthyConditions:
  #@overlay/match by=overlay.map_key("status")
  - type: Ready
    status: Unknown
    timeout: #@ data.values.MHC_UNKNOWN_STATUS_TIMEOUT
  #@overlay/match by=overlay.map_key("status")
  - type: Ready
    status: "False"
    timeout: #@ data.values.MHC_FALSE_STATUS_TIMEOUT
#@ end
#@ end