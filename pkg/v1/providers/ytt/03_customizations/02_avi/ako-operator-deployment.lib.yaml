#@ load("@ytt:data", "data")
#@ load("@ytt:base64", "base64")
#@ load("/lib/helpers.star", "get_default_tkr_bom_data", "get_default_tkg_bom_data", "tkg_image_repo")

#@ akooRepo = get_default_tkr_bom_data().components["ako-operator"][0]
#@ akoRepo = get_default_tkr_bom_data().components["load-balancer-and-ingress-service"][0]
#@ rbacRepo = get_default_tkg_bom_data().components["kube_rbac_proxy"][0]

#@ def labels():
app: tanzu-ako-operator
#@ end

#@ def ako_operator_image():
#@   return "{}/{}:{}".format(tkg_image_repo(), akooRepo.images.akoOperatorImage.imagePath, akooRepo.images.akoOperatorImage.tag)
#@ end

#@ def ako_image():
#@  return "{}/{}".format(tkg_image_repo(), akoRepo.images.loadBalancerAndIngressServiceImage.imagePath)
#@ end

#@ def rbac_image():
#@  return "{}/{}:{}".format(tkg_image_repo(), rbacRepo.images.kubeRbacProxyControllerImageCapi.imagePath, rbacRepo.images.kubeRbacProxyControllerImageCapi.tag)
#@ end

#@ def avi_credentials():
apiVersion: v1
kind: Secret
metadata:
  name: #@ data.values.AVI_ADMIN_CREDENTIAL_NAME
  namespace: tkg-system
type: Opaque
data:
  username: #@ base64.encode(data.values.AVI_USERNAME)
  password: #@ base64.encode(data.values.AVI_PASSWORD)
#@ end

#@ def avi_certificate():
apiVersion: v1
kind: Secret
metadata:
  name: #@ data.values.AVI_CA_NAME
  namespace: tkg-system
type: Opaque
data:
  certificateAuthorityData: #@ data.values.AVI_CA_DATA_B64
#@ end

#@ def akoo_deployment():
apiVersion: apps/v1
kind: Deployment
metadata:
  labels: #@ labels()
  name: ako-operator-controller-manager
  namespace: #@ data.values.AVI_NAMESPACE
spec:
  replicas: 1
  selector:
    matchLabels: #@ labels()
  template:
    metadata:
      labels: #@ labels()
    spec:
      containers:
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=10
          image: #@ rbac_image()
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
        - args:
            - --metrics-addr=127.0.0.1:8080
          command:
            - /manager
          image: #@ ako_operator_image()
          name: manager
          env:
            - name: bootstrap_cluster
              value: "True"
            - name: avi_control_plane_ha_provider
              value: #@ "{}".format(data.values.AVI_CONTROL_PLANE_HA_PROVIDER)
            - name: tkg_management_cluster_name
              value: #@ data.values.CLUSTER_NAME
            - name: control_plane_endpoint_port
              value: #@ "{}".format(data.values.VSPHERE_CONTROL_PLANE_ENDPOINT_PORT)
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 50m
              memory: 20Mi
      terminationGracePeriodSeconds: 10
#@ end
