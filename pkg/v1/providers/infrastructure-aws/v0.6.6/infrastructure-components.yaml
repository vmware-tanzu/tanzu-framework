apiVersion: v1
kind: Namespace
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
  name: capa-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
    controller-gen.kubebuilder.io/version: v0.2.9
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: awsclustercontrolleridentities.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capa-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
        - v1
        - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AWSClusterControllerIdentity
    listKind: AWSClusterControllerIdentityList
    plural: awsclustercontrolleridentities
    singular: awsclustercontrolleridentity
  scope: Cluster
  versions:
    - name: v1alpha3
      schema:
        openAPIV3Schema:
          description: AWSClusterControllerIdentity is the Schema for the awsclustercontrolleridentities
            API It is used to grant access to use Cluster API Provider AWS Controller
            credentials.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec for this AWSClusterControllerIdentity.
              properties:
                allowedNamespaces:
                  description: AllowedNamespaces is used to identify which namespaces
                    are allowed to use the identity from. Namespaces can be selected
                    either using an array of namespaces or with label selector. An empty
                    allowedNamespaces object indicates that AWSClusters can use this
                    identity from any namespace. If this object is nil, no namespaces
                    will be allowed (default behaviour, if this field is not provided)
                    A namespace should be either in the NamespaceList or match with
                    Selector to use the identity.
                  nullable: true
                  properties:
                    list:
                      description: An nil or empty list indicates that AWSClusters cannot
                        use the identity from any namespace.
                      items:
                        type: string
                      nullable: true
                      type: array
                    selector:
                      description: "AllowedNamespaces is a selector of namespaces that
                      AWSClusters can use this ClusterPrincipal from. This is a standard
                      Kubernetes LabelSelector, a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. \n
                      An empty selector indicates that AWSClusters cannot use this
                      AWSClusterIdentity from any namespace."
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If
                                  the operator is In or NotIn, the values array must
                                  be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced
                                  during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs. A
                            single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is "key",
                            the operator is "In", and the values array contains only
                            "value". The requirements are ANDed.
                          type: object
                      type: object
                  type: object
              type: object
          type: object
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
    controller-gen.kubebuilder.io/version: v0.2.9
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: awsclusterroleidentities.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capa-webhook-service
          namespace: system
          path: /convert
      conversionReviewVersions:
        - v1
        - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AWSClusterRoleIdentity
    listKind: AWSClusterRoleIdentityList
    plural: awsclusterroleidentities
    singular: awsclusterroleidentity
  scope: Cluster
  versions:
    - name: v1alpha3
      schema:
        openAPIV3Schema:
          description: AWSClusterRoleIdentity is the Schema for the awsclusterroleidentities
            API It is used to assume a role using the provided sourceRef.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec for this AWSClusterRoleIdentity.
              properties:
                allowedNamespaces:
                  description: AllowedNamespaces is used to identify which namespaces
                    are allowed to use the identity from. Namespaces can be selected
                    either using an array of namespaces or with label selector. An empty
                    allowedNamespaces object indicates that AWSClusters can use this
                    identity from any namespace. If this object is nil, no namespaces
                    will be allowed (default behaviour, if this field is not provided)
                    A namespace should be either in the NamespaceList or match with
                    Selector to use the identity.
                  nullable: true
                  properties:
                    list:
                      description: An nil or empty list indicates that AWSClusters cannot
                        use the identity from any namespace.
                      items:
                        type: string
                      nullable: true
                      type: array
                    selector:
                      description: "AllowedNamespaces is a selector of namespaces that
                      AWSClusters can use this ClusterPrincipal from. This is a standard
                      Kubernetes LabelSelector, a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. \n
                      An empty selector indicates that AWSClusters cannot use this
                      AWSClusterIdentity from any namespace."
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If
                                  the operator is In or NotIn, the values array must
                                  be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced
                                  during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs. A
                            single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is "key",
                            the operator is "In", and the values array contains only
                            "value". The requirements are ANDed.
                          type: object
                      type: object
                  type: object
                durationSeconds:
                  description: The duration, in seconds, of the role session before
                    it is renewed.
                  format: int32
                  maximum: 43200
                  minimum: 900
                  type: integer
                externalID:
                  description: A unique identifier that might be required when you assume
                    a role in another account. If the administrator of the account to
                    which the role belongs provided you with an external ID, then provide
                    that value in the ExternalId parameter. This value can be any string,
                    such as a passphrase or account number. A cross-account role is
                    usually set up to trust everyone in an account. Therefore, the administrator
                    of the trusting account might send an external ID to the administrator
                    of the trusted account. That way, only someone with the ID can assume
                    the role, rather than everyone in the account. For more information
                    about the external ID, see How to Use an External ID When Granting
                    Access to Your AWS Resources to a Third Party in the IAM User Guide.
                  type: string
                inlinePolicy:
                  description: An IAM policy as a JSON-encoded string that you want
                    to use as an inline session policy.
                  type: string
                policyARNs:
                  description: The Amazon Resource Names (ARNs) of the IAM managed policies
                    that you want to use as managed session policies. The policies must
                    exist in the same account as the role.
                  items:
                    type: string
                  type: array
                roleARN:
                  description: The Amazon Resource Name (ARN) of the role to assume.
                  type: string
                sessionName:
                  description: An identifier for the assumed role session
                  type: string
                sourceIdentityRef:
                  description: SourceIdentityRef is a reference to another identity
                    which will be chained to do role assumption. All identity types
                    are accepted.
                  properties:
                    kind:
                      description: Kind of the identity.
                      enum:
                        - AWSClusterControllerIdentity
                        - AWSClusterRoleIdentity
                        - AWSClusterStaticIdentity
                      type: string
                    name:
                      description: Name of the identity.
                      minLength: 1
                      type: string
                  required:
                    - kind
                    - name
                  type: object
              required:
                - roleARN
              type: object
          type: object
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
    controller-gen.kubebuilder.io/version: v0.2.9
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: awsclusters.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capa-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
        - v1
        - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AWSCluster
    listKind: AWSClusterList
    plural: awsclusters
    singular: awscluster
  scope: Namespaced
  versions:
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          description: AWSCluster is the Schema for the awsclusters API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSClusterSpec defines the desired state of AWSCluster
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to AWS
                    resources managed by the AWS provider, in addition to the ones added
                    by default.
                  type: object
                controlPlaneLoadBalancer:
                  description: ControlPlaneLoadBalancer is optional configuration for
                    customizing control plane behavior
                  properties:
                    scheme:
                      description: Scheme sets the scheme of the load balancer (defaults
                        to Internet-facing)
                      type: string
                  type: object
                disableBastionHost:
                  description: DisableBastionHost is an optional configuration field
                    to prevent the creation of a bastion host instance.
                  type: boolean
                networkSpec:
                  description: NetworkSpec encapsulates all things related to AWS network.
                  properties:
                    subnets:
                      description: Subnets configuration.
                      items:
                        description: SubnetSpec configures an AWS Subnet.
                        properties:
                          availabilityZone:
                            description: AvailabilityZone defines the availability zone
                              to use for this subnet in the cluster's region.
                            type: string
                          cidrBlock:
                            description: CidrBlock is the CIDR block to be used when
                              the provider creates a managed VPC.
                            type: string
                          id:
                            description: ID defines a unique identifier to reference
                              this resource.
                            type: string
                          isPublic:
                            description: IsPublic defines the subnet as a public subnet.
                              A subnet is public when it is associated with a route
                              table that has a route to an internet gateway.
                            type: boolean
                          natGatewayId:
                            description: NatGatewayID is the NAT gateway id associated
                              with the subnet. Ignored unless the subnet is managed
                              by the provider, in which case this is set on the public
                              subnet where the NAT gateway resides. It is then used
                              to determine routes for private subnets in the same AZ
                              as the public subnet.
                            type: string
                          routeTableId:
                            description: RouteTableID is the routing table id associated
                              with the subnet.
                            type: string
                          tags:
                            additionalProperties:
                              type: string
                            description: Tags is a collection of tags describing the
                              resource.
                            type: object
                        type: object
                      type: array
                    vpc:
                      description: VPC configuration.
                      properties:
                        cidrBlock:
                          description: CidrBlock is the CIDR block to be used when the
                            provider creates a managed VPC. Defaults to 10.0.0.0/16.
                          type: string
                        id:
                          description: ID is the vpc-id of the VPC this provider should
                            use to create resources.
                          type: string
                        internetGatewayId:
                          description: InternetGatewayID is the id of the internet gateway
                            associated with the VPC.
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a collection of tags describing the resource.
                          type: object
                      type: object
                  type: object
                region:
                  description: The AWS Region the cluster lives in.
                  type: string
                sshKeyName:
                  description: SSHKeyName is the name of the ssh key to attach to the
                    bastion host.
                  type: string
              type: object
            status:
              description: AWSClusterStatus defines the observed state of AWSCluster
              properties:
                apiEndpoints:
                  description: APIEndpoints represents the endpoints to communicate
                    with the control plane.
                  items:
                    description: APIEndpoint represents a reachable Kubernetes API endpoint.
                    properties:
                      host:
                        description: The hostname on which the API server is serving.
                        type: string
                      port:
                        description: The port on which the API server is serving.
                        type: integer
                    required:
                      - host
                      - port
                    type: object
                  type: array
                bastion:
                  description: Instance describes an AWS instance.
                  properties:
                    addresses:
                      description: Addresses contains the AWS instance associated addresses.
                      items:
                        description: MachineAddress contains information for the node's
                          address.
                        properties:
                          address:
                            description: The machine address.
                            type: string
                          type:
                            description: Machine address type, one of Hostname, ExternalIP
                              or InternalIP.
                            type: string
                        required:
                          - address
                          - type
                        type: object
                      type: array
                    ebsOptimized:
                      description: Indicates whether the instance is optimized for Amazon
                        EBS I/O.
                      type: boolean
                    enaSupport:
                      description: Specifies whether enhanced networking with ENA is
                        enabled.
                      type: boolean
                    iamProfile:
                      description: The name of the IAM instance profile associated with
                        the instance, if applicable.
                      type: string
                    id:
                      type: string
                    imageId:
                      description: The ID of the AMI used to launch the instance.
                      type: string
                    instanceState:
                      description: The current state of the instance.
                      type: string
                    networkInterfaces:
                      description: Specifies ENIs attached to instance
                      items:
                        type: string
                      type: array
                    privateIp:
                      description: The private IPv4 address assigned to the instance.
                      type: string
                    publicIp:
                      description: The public IPv4 address assigned to the instance,
                        if applicable.
                      type: string
                    rootDeviceSize:
                      description: Specifies size (in Gi) of the root storage device
                      format: int64
                      type: integer
                    securityGroupIds:
                      description: SecurityGroupIDs are one or more security group IDs
                        this instance belongs to.
                      items:
                        type: string
                      type: array
                    sshKeyName:
                      description: The name of the SSH key pair.
                      type: string
                    subnetId:
                      description: The ID of the subnet of the instance.
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: The tags associated with the instance.
                      type: object
                    type:
                      description: The instance type.
                      type: string
                    userData:
                      description: UserData is the raw data script passed to the instance
                        which is run upon bootstrap. This field must not be base64 encoded
                        and should only be used when running a new instance.
                      type: string
                  required:
                    - id
                  type: object
                network:
                  description: Network encapsulates AWS networking resources.
                  properties:
                    apiServerElb:
                      description: APIServerELB is the Kubernetes api server classic
                        load balancer.
                      properties:
                        attributes:
                          description: Attributes defines extra attributes associated
                            with the load balancer.
                          properties:
                            idleTimeout:
                              description: IdleTimeout is time that the connection is
                                allowed to be idle (no data has been sent over the connection)
                                before it is closed by the load balancer.
                              format: int64
                              type: integer
                          type: object
                        dnsName:
                          description: DNSName is the dns name of the load balancer.
                          type: string
                        healthChecks:
                          description: HealthCheck is the classic elb health check associated
                            with the load balancer.
                          properties:
                            healthyThreshold:
                              format: int64
                              type: integer
                            interval:
                              description: A Duration represents the elapsed time between
                                two instants as an int64 nanosecond count. The representation
                                limits the largest representable duration to approximately
                                290 years.
                              format: int64
                              type: integer
                            target:
                              type: string
                            timeout:
                              description: A Duration represents the elapsed time between
                                two instants as an int64 nanosecond count. The representation
                                limits the largest representable duration to approximately
                                290 years.
                              format: int64
                              type: integer
                            unhealthyThreshold:
                              format: int64
                              type: integer
                          required:
                            - healthyThreshold
                            - interval
                            - target
                            - timeout
                            - unhealthyThreshold
                          type: object
                        listeners:
                          description: Listeners is an array of classic elb listeners
                            associated with the load balancer. There must be at least
                            one.
                          items:
                            description: ClassicELBListener defines an AWS classic load
                              balancer listener.
                            properties:
                              instancePort:
                                format: int64
                                type: integer
                              instanceProtocol:
                                description: ClassicELBProtocol defines listener protocols
                                  for a classic load balancer.
                                type: string
                              port:
                                format: int64
                                type: integer
                              protocol:
                                description: ClassicELBProtocol defines listener protocols
                                  for a classic load balancer.
                                type: string
                            required:
                              - instancePort
                              - instanceProtocol
                              - port
                              - protocol
                            type: object
                          type: array
                        name:
                          description: The name of the load balancer. It must be unique
                            within the set of load balancers defined in the region.
                            It also serves as identifier.
                          type: string
                        scheme:
                          description: Scheme is the load balancer scheme, either internet-facing
                            or private.
                          type: string
                        securityGroupIds:
                          description: SecurityGroupIDs is an array of security groups
                            assigned to the load balancer.
                          items:
                            type: string
                          type: array
                        subnetIds:
                          description: SubnetIDs is an array of subnets in the VPC attached
                            to the load balancer.
                          items:
                            type: string
                          type: array
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a map of tags associated with the load
                            balancer.
                          type: object
                      type: object
                    securityGroups:
                      additionalProperties:
                        description: SecurityGroup defines an AWS security group.
                        properties:
                          id:
                            description: ID is a unique identifier.
                            type: string
                          ingressRule:
                            description: IngressRules is the inbound rules associated
                              with the security group.
                            items:
                              description: IngressRule defines an AWS ingress rule for
                                security groups.
                              properties:
                                cidrBlocks:
                                  description: List of CIDR blocks to allow access from.
                                    Cannot be specified with SourceSecurityGroupID.
                                  items:
                                    type: string
                                  type: array
                                description:
                                  type: string
                                fromPort:
                                  format: int64
                                  type: integer
                                protocol:
                                  description: SecurityGroupProtocol defines the protocol
                                    type for a security group rule.
                                  type: string
                                sourceSecurityGroupIds:
                                  description: The security group id to allow access
                                    from. Cannot be specified with CidrBlocks.
                                  items:
                                    type: string
                                  type: array
                                toPort:
                                  format: int64
                                  type: integer
                              required:
                                - description
                                - fromPort
                                - protocol
                                - toPort
                              type: object
                            type: array
                          name:
                            description: Name is the security group name.
                            type: string
                          tags:
                            additionalProperties:
                              type: string
                            description: Tags is a map of tags associated with the security
                              group.
                            type: object
                        required:
                          - id
                          - name
                        type: object
                      description: SecurityGroups is a map from the role/kind of the
                        security group to its unique name, if any.
                      type: object
                  type: object
                ready:
                  type: boolean
              required:
                - ready
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: Cluster to which this AWSCluster belongs
          jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
          name: Cluster
          type: string
        - description: Cluster infrastructure is ready for EC2 instances
          jsonPath: .status.ready
          name: Ready
          type: string
        - description: AWS VPC the cluster is using
          jsonPath: .spec.networkSpec.vpc.id
          name: VPC
          type: string
        - description: API Endpoint
          jsonPath: .status.apiEndpoints[0]
          name: Endpoint
          priority: 1
          type: string
        - description: Bastion IP address for breakglass access
          jsonPath: .status.bastion.publicIp
          name: Bastion IP
          type: string
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: AWSCluster is the Schema for the awsclusters API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSClusterSpec defines the desired state of AWSCluster
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to AWS
                    resources managed by the AWS provider, in addition to the ones added
                    by default.
                  type: object
                bastion:
                  description: Bastion contains options to configure the bastion host.
                  properties:
                    allowedCIDRBlocks:
                      description: AllowedCIDRBlocks is a list of CIDR blocks allowed
                        to access the bastion host. They are set as ingress rules for
                        the Bastion host's Security Group (defaults to 0.0.0.0/0).
                      items:
                        type: string
                      type: array
                    ami:
                      description: AMI will use the specified AMI to boot the bastion.
                        If not specified, the AMI will default to one picked out in
                        public space.
                      type: string
                    disableIngressRules:
                      description: DisableIngressRules will ensure there are no Ingress
                        rules in the bastion host's security group. Requires AllowedCIDRBlocks
                        to be empty.
                      type: boolean
                    enabled:
                      description: Enabled allows this provider to create a bastion
                        host instance with a public ip to access the VPC private network.
                      type: boolean
                    instanceType:
                      description: InstanceType will use the specified instance type
                        for the bastion. If not specified, Cluster API Provider AWS
                        will use t3.micro for all regions except us-east-1, where t2.micro
                        will be the default.
                      type: string
                  type: object
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to
                    communicate with the control plane.
                  properties:
                    host:
                      description: The hostname on which the API server is serving.
                      type: string
                    port:
                      description: The port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                    - host
                    - port
                  type: object
                controlPlaneLoadBalancer:
                  description: ControlPlaneLoadBalancer is optional configuration for
                    customizing control plane behavior.
                  properties:
                    additionalSecurityGroups:
                      description: AdditionalSecurityGroups sets the security groups
                        used by the load balancer. Expected to be security group IDs.
                        This is optional - if not provided new security groups will
                        be created for the load balancer
                      items:
                        type: string
                      type: array
                    crossZoneLoadBalancing:
                      description: "CrossZoneLoadBalancing enables the classic ELB cross
                      availability zone balancing. \n With cross-zone load balancing,
                      each load balancer node for your Classic Load Balancer distributes
                      requests evenly across the registered instances in all enabled
                      Availability Zones. If cross-zone load balancing is disabled,
                      each load balancer node distributes requests evenly across the
                      registered instances in its Availability Zone only. \n Defaults
                      to false."
                      type: boolean
                    scheme:
                      default: Internet-facing
                      description: Scheme sets the scheme of the load balancer (defaults
                        to Internet-facing)
                      enum:
                        - Internet-facing
                        - internal
                      type: string
                    subnets:
                      description: Subnets sets the subnets that should be applied to
                        the control plane load balancer (defaults to discovered subnets
                        for managed VPCs or an empty set for unmanaged VPCs)
                      items:
                        type: string
                      type: array
                  type: object
                identityRef:
                  description: IdentityRef is a reference to a identity to be used when
                    reconciling this cluster
                  properties:
                    kind:
                      description: Kind of the identity.
                      enum:
                        - AWSClusterControllerIdentity
                        - AWSClusterRoleIdentity
                        - AWSClusterStaticIdentity
                      type: string
                    name:
                      description: Name of the identity.
                      minLength: 1
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                imageLookupBaseOS:
                  description: ImageLookupBaseOS is the name of the base operating system
                    used to look up machine images when a machine does not specify an
                    AMI. When set, this will be used for all cluster machines unless
                    a machine specifies a different ImageLookupBaseOS.
                  type: string
                imageLookupFormat:
                  description: 'ImageLookupFormat is the AMI naming format to look up
                  machine images when a machine does not specify an AMI. When set,
                  this will be used for all cluster machines unless a machine specifies
                  a different ImageLookupOrg. Supports substitutions for {{.BaseOS}}
                  and {{.K8sVersion}} with the base OS and kubernetes version, respectively.
                  The BaseOS will be the value in ImageLookupBaseOS or ubuntu (the
                  default), and the kubernetes version as defined by the packages
                  produced by kubernetes/release without v as a prefix: 1.13.0, 1.12.5-mybuild.1,
                  or 1.17.3. For example, the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                  will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                  for a Machine that is targeting kubernetes v1.18.0 and the ubuntu
                  base OS. See also: https://golang.org/pkg/text/template/'
                  type: string
                imageLookupOrg:
                  description: ImageLookupOrg is the AWS Organization ID to look up
                    machine images when a machine does not specify an AMI. When set,
                    this will be used for all cluster machines unless a machine specifies
                    a different ImageLookupOrg.
                  type: string
                networkSpec:
                  description: NetworkSpec encapsulates all things related to AWS network.
                  properties:
                    cni:
                      description: CNI configuration
                      properties:
                        cniIngressRules:
                          description: CNIIngressRules specify rules to apply to control
                            plane and worker node security groups. The source for the
                            rule will be set to control plane and worker security group
                            IDs.
                          items:
                            description: CNIIngressRule defines an AWS ingress rule
                              for CNI requirements.
                            properties:
                              description:
                                type: string
                              fromPort:
                                format: int64
                                type: integer
                              protocol:
                                description: SecurityGroupProtocol defines the protocol
                                  type for a security group rule.
                                type: string
                              toPort:
                                format: int64
                                type: integer
                            required:
                              - description
                              - fromPort
                              - protocol
                              - toPort
                            type: object
                          type: array
                      type: object
                    securityGroupOverrides:
                      additionalProperties:
                        type: string
                      description: SecurityGroupOverrides is an optional set of security
                        groups to use for cluster instances This is optional - if not
                        provided new security groups will be created for the cluster
                      type: object
                    subnets:
                      description: Subnets configuration.
                      items:
                        description: SubnetSpec configures an AWS Subnet.
                        properties:
                          availabilityZone:
                            description: AvailabilityZone defines the availability zone
                              to use for this subnet in the cluster's region.
                            type: string
                          cidrBlock:
                            description: CidrBlock is the CIDR block to be used when
                              the provider creates a managed VPC.
                            type: string
                          id:
                            description: ID defines a unique identifier to reference
                              this resource.
                            type: string
                          isPublic:
                            description: IsPublic defines the subnet as a public subnet.
                              A subnet is public when it is associated with a route
                              table that has a route to an internet gateway.
                            type: boolean
                          natGatewayId:
                            description: NatGatewayID is the NAT gateway id associated
                              with the subnet. Ignored unless the subnet is managed
                              by the provider, in which case this is set on the public
                              subnet where the NAT gateway resides. It is then used
                              to determine routes for private subnets in the same AZ
                              as the public subnet.
                            type: string
                          routeTableId:
                            description: RouteTableID is the routing table id associated
                              with the subnet.
                            type: string
                          tags:
                            additionalProperties:
                              type: string
                            description: Tags is a collection of tags describing the
                              resource.
                            type: object
                        type: object
                      type: array
                    vpc:
                      description: VPC configuration.
                      properties:
                        availabilityZoneSelection:
                          default: Ordered
                          description: 'AvailabilityZoneSelection specifies how AZs
                          should be selected if there are more AZs in a region than
                          specified by AvailabilityZoneUsageLimit. There are 2 selection
                          schemes: Ordered - selects based on alphabetical order Random
                          - selects AZs randomly in a region Defaults to Ordered'
                          enum:
                            - Ordered
                            - Random
                          type: string
                        availabilityZoneUsageLimit:
                          default: 3
                          description: AvailabilityZoneUsageLimit specifies the maximum
                            number of availability zones (AZ) that should be used in
                            a region when automatically creating subnets. If a region
                            has more than this number of AZs then this number of AZs
                            will be picked randomly when creating default subnets. Defaults
                            to 3
                          minimum: 1
                          type: integer
                        cidrBlock:
                          description: CidrBlock is the CIDR block to be used when the
                            provider creates a managed VPC. Defaults to 10.0.0.0/16.
                          type: string
                        id:
                          description: ID is the vpc-id of the VPC this provider should
                            use to create resources.
                          type: string
                        internetGatewayId:
                          description: InternetGatewayID is the id of the internet gateway
                            associated with the VPC.
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a collection of tags describing the resource.
                          type: object
                      type: object
                  type: object
                region:
                  description: The AWS Region the cluster lives in.
                  type: string
                sshKeyName:
                  description: SSHKeyName is the name of the ssh key to attach to the
                    bastion host. Valid values are empty string (do not use SSH keys),
                    a valid SSH key name, or omitted (use the default SSH key name)
                  type: string
              type: object
            status:
              description: AWSClusterStatus defines the observed state of AWSCluster
              properties:
                bastion:
                  description: Instance describes an AWS instance.
                  properties:
                    addresses:
                      description: Addresses contains the AWS instance associated addresses.
                      items:
                        description: MachineAddress contains information for the node's
                          address.
                        properties:
                          address:
                            description: The machine address.
                            type: string
                          type:
                            description: Machine address type, one of Hostname, ExternalIP
                              or InternalIP.
                            type: string
                        required:
                          - address
                          - type
                        type: object
                      type: array
                    availabilityZone:
                      description: Availability zone of instance
                      type: string
                    ebsOptimized:
                      description: Indicates whether the instance is optimized for Amazon
                        EBS I/O.
                      type: boolean
                    enaSupport:
                      description: Specifies whether enhanced networking with ENA is
                        enabled.
                      type: boolean
                    iamProfile:
                      description: The name of the IAM instance profile associated with
                        the instance, if applicable.
                      type: string
                    id:
                      type: string
                    imageId:
                      description: The ID of the AMI used to launch the instance.
                      type: string
                    instanceState:
                      description: The current state of the instance.
                      type: string
                    networkInterfaces:
                      description: Specifies ENIs attached to instance
                      items:
                        type: string
                      type: array
                    nonRootVolumes:
                      description: Configuration options for the non root storage volumes.
                      items:
                        description: Volume encapsulates the configuration options for
                          the storage device
                        properties:
                          deviceName:
                            description: Device name
                            type: string
                          encrypted:
                            description: Encrypted is whether the volume should be encrypted
                              or not.
                            type: boolean
                          encryptionKey:
                            description: EncryptionKey is the KMS key to use to encrypt
                              the volume. Can be either a KMS key ID or ARN. If Encrypted
                              is set and this is omitted, the default AWS key will be
                              used. The key must already exist and be accessible by
                              the controller.
                            type: string
                          iops:
                            description: IOPS is the number of IOPS requested for the
                              disk. Not applicable to all types.
                            format: int64
                            type: integer
                          size:
                            description: Size specifies size (in Gi) of the storage
                              device. Must be greater than the image snapshot size or
                              8 (whichever is greater).
                            format: int64
                            minimum: 8
                            type: integer
                          type:
                            description: Type is the type of the volume (e.g. gp2, io1,
                              etc...).
                            type: string
                        required:
                          - size
                        type: object
                      type: array
                    privateIp:
                      description: The private IPv4 address assigned to the instance.
                      type: string
                    publicIp:
                      description: The public IPv4 address assigned to the instance,
                        if applicable.
                      type: string
                    rootVolume:
                      description: Configuration options for the root storage volume.
                      properties:
                        deviceName:
                          description: Device name
                          type: string
                        encrypted:
                          description: Encrypted is whether the volume should be encrypted
                            or not.
                          type: boolean
                        encryptionKey:
                          description: EncryptionKey is the KMS key to use to encrypt
                            the volume. Can be either a KMS key ID or ARN. If Encrypted
                            is set and this is omitted, the default AWS key will be
                            used. The key must already exist and be accessible by the
                            controller.
                          type: string
                        iops:
                          description: IOPS is the number of IOPS requested for the
                            disk. Not applicable to all types.
                          format: int64
                          type: integer
                        size:
                          description: Size specifies size (in Gi) of the storage device.
                            Must be greater than the image snapshot size or 8 (whichever
                            is greater).
                          format: int64
                          minimum: 8
                          type: integer
                        type:
                          description: Type is the type of the volume (e.g. gp2, io1,
                            etc...).
                          type: string
                      required:
                        - size
                      type: object
                    securityGroupIds:
                      description: SecurityGroupIDs are one or more security group IDs
                        this instance belongs to.
                      items:
                        type: string
                      type: array
                    spotMarketOptions:
                      description: SpotMarketOptions option for configuring instances
                        to be run using AWS Spot instances.
                      properties:
                        maxPrice:
                          description: MaxPrice defines the maximum price the user is
                            willing to pay for Spot VM instances
                          type: string
                      type: object
                    sshKeyName:
                      description: The name of the SSH key pair.
                      type: string
                    subnetId:
                      description: The ID of the subnet of the instance.
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: The tags associated with the instance.
                      type: object
                    tenancy:
                      description: Tenancy indicates if instance should run on shared
                        or single-tenant hardware.
                      type: string
                    type:
                      description: The instance type.
                      type: string
                    userData:
                      description: UserData is the raw data script passed to the instance
                        which is run upon bootstrap. This field must not be base64 encoded
                        and should only be used when running a new instance.
                      type: string
                  required:
                    - id
                  type: object
                conditions:
                  description: Conditions provide observations of the operational state
                    of a Cluster API resource.
                  items:
                    description: Condition defines an observation of a Cluster API resource
                      operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status
                          to another. This should be when the underlying condition changed.
                          If that is not known, then using the time when the API field
                          changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not this
                          field is considered a guaranteed API. This field may not be
                          empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification of
                          Reason code, so the users or machines can immediately understand
                          the current situation and act accordingly. The Severity field
                          MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important.
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                failureDomains:
                  additionalProperties:
                    description: FailureDomainSpec is the Schema for Cluster API failure
                      domains. It allows controllers to understand how many failure
                      domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: Attributes is a free form map of attributes an
                          infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: ControlPlane determines if this failure domain
                          is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: FailureDomains is a slice of FailureDomains.
                  type: object
                network:
                  description: Network encapsulates AWS networking resources.
                  properties:
                    apiServerElb:
                      description: APIServerELB is the Kubernetes api server classic
                        load balancer.
                      properties:
                        attributes:
                          description: Attributes defines extra attributes associated
                            with the load balancer.
                          properties:
                            crossZoneLoadBalancing:
                              description: CrossZoneLoadBalancing enables the classic
                                load balancer load balancing.
                              type: boolean
                            idleTimeout:
                              description: IdleTimeout is time that the connection is
                                allowed to be idle (no data has been sent over the connection)
                                before it is closed by the load balancer.
                              format: int64
                              type: integer
                          type: object
                        availabilityZones:
                          description: AvailabilityZones is an array of availability
                            zones in the VPC attached to the load balancer.
                          items:
                            type: string
                          type: array
                        dnsName:
                          description: DNSName is the dns name of the load balancer.
                          type: string
                        healthChecks:
                          description: HealthCheck is the classic elb health check associated
                            with the load balancer.
                          properties:
                            healthyThreshold:
                              format: int64
                              type: integer
                            interval:
                              description: A Duration represents the elapsed time between
                                two instants as an int64 nanosecond count. The representation
                                limits the largest representable duration to approximately
                                290 years.
                              format: int64
                              type: integer
                            target:
                              type: string
                            timeout:
                              description: A Duration represents the elapsed time between
                                two instants as an int64 nanosecond count. The representation
                                limits the largest representable duration to approximately
                                290 years.
                              format: int64
                              type: integer
                            unhealthyThreshold:
                              format: int64
                              type: integer
                          required:
                            - healthyThreshold
                            - interval
                            - target
                            - timeout
                            - unhealthyThreshold
                          type: object
                        listeners:
                          description: Listeners is an array of classic elb listeners
                            associated with the load balancer. There must be at least
                            one.
                          items:
                            description: ClassicELBListener defines an AWS classic load
                              balancer listener.
                            properties:
                              instancePort:
                                format: int64
                                type: integer
                              instanceProtocol:
                                description: ClassicELBProtocol defines listener protocols
                                  for a classic load balancer.
                                type: string
                              port:
                                format: int64
                                type: integer
                              protocol:
                                description: ClassicELBProtocol defines listener protocols
                                  for a classic load balancer.
                                type: string
                            required:
                              - instancePort
                              - instanceProtocol
                              - port
                              - protocol
                            type: object
                          type: array
                        name:
                          description: The name of the load balancer. It must be unique
                            within the set of load balancers defined in the region.
                            It also serves as identifier.
                          type: string
                        scheme:
                          description: Scheme is the load balancer scheme, either internet-facing
                            or private.
                          type: string
                        securityGroupIds:
                          description: SecurityGroupIDs is an array of security groups
                            assigned to the load balancer.
                          items:
                            type: string
                          type: array
                        subnetIds:
                          description: SubnetIDs is an array of subnets in the VPC attached
                            to the load balancer.
                          items:
                            type: string
                          type: array
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a map of tags associated with the load
                            balancer.
                          type: object
                      type: object
                    securityGroups:
                      additionalProperties:
                        description: SecurityGroup defines an AWS security group.
                        properties:
                          id:
                            description: ID is a unique identifier.
                            type: string
                          ingressRule:
                            description: IngressRules is the inbound rules associated
                              with the security group.
                            items:
                              description: IngressRule defines an AWS ingress rule for
                                security groups.
                              properties:
                                cidrBlocks:
                                  description: List of CIDR blocks to allow access from.
                                    Cannot be specified with SourceSecurityGroupID.
                                  items:
                                    type: string
                                  type: array
                                description:
                                  type: string
                                fromPort:
                                  format: int64
                                  type: integer
                                protocol:
                                  description: SecurityGroupProtocol defines the protocol
                                    type for a security group rule.
                                  type: string
                                sourceSecurityGroupIds:
                                  description: The security group id to allow access
                                    from. Cannot be specified with CidrBlocks.
                                  items:
                                    type: string
                                  type: array
                                toPort:
                                  format: int64
                                  type: integer
                              required:
                                - description
                                - fromPort
                                - protocol
                                - toPort
                              type: object
                            type: array
                          name:
                            description: Name is the security group name.
                            type: string
                          tags:
                            additionalProperties:
                              type: string
                            description: Tags is a map of tags associated with the security
                              group.
                            type: object
                        required:
                          - id
                          - name
                        type: object
                      description: SecurityGroups is a map from the role/kind of the
                        security group to its unique name, if any.
                      type: object
                  type: object
                ready:
                  default: false
                  type: boolean
              required:
                - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.9
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: awsclusterstaticidentities.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AWSClusterStaticIdentity
    listKind: AWSClusterStaticIdentityList
    plural: awsclusterstaticidentities
    singular: awsclusterstaticidentity
  scope: Cluster
  versions:
    - name: v1alpha3
      schema:
        openAPIV3Schema:
          description: AWSClusterStaticIdentity is the Schema for the awsclusterstaticidentities
            API It represents a reference to an AWS access key ID and secret access
            key, stored in a secret.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec for this AWSClusterStaticIdentity
              properties:
                allowedNamespaces:
                  description: AllowedNamespaces is used to identify which namespaces
                    are allowed to use the identity from. Namespaces can be selected
                    either using an array of namespaces or with label selector. An empty
                    allowedNamespaces object indicates that AWSClusters can use this
                    identity from any namespace. If this object is nil, no namespaces
                    will be allowed (default behaviour, if this field is not provided)
                    A namespace should be either in the NamespaceList or match with
                    Selector to use the identity.
                  nullable: true
                  properties:
                    list:
                      description: An nil or empty list indicates that AWSClusters cannot
                        use the identity from any namespace.
                      items:
                        type: string
                      nullable: true
                      type: array
                    selector:
                      description: "AllowedNamespaces is a selector of namespaces that
                      AWSClusters can use this ClusterPrincipal from. This is a standard
                      Kubernetes LabelSelector, a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. \n
                      An empty selector indicates that AWSClusters cannot use this
                      AWSClusterIdentity from any namespace."
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If
                                  the operator is In or NotIn, the values array must
                                  be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced
                                  during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs. A
                            single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is "key",
                            the operator is "In", and the values array contains only
                            "value". The requirements are ANDed.
                          type: object
                      type: object
                  type: object
                secretRef:
                  description: 'Reference to a secret containing the credentials. The
                  secret should contain the following data keys:  AccessKeyID: AKIAIOSFODNN7EXAMPLE  SecretAccessKey:
                  wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY  SessionToken: Optional'
                  properties:
                    name:
                      description: Name is unique within a namespace to reference a
                        secret resource.
                      type: string
                    namespace:
                      description: Namespace defines the space within which the secret
                        name must be unique.
                      type: string
                  type: object
              required:
                - secretRef
              type: object
          type: object
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.9
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: awsfargateprofiles.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AWSFargateProfile
    listKind: AWSFargateProfileList
    plural: awsfargateprofiles
    singular: awsfargateprofile
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: AWSFargateProfile ready status
          jsonPath: .status.ready
          name: Ready
          type: string
        - description: EKS Fargate profile name
          jsonPath: .spec.profileName
          name: ProfileName
          type: string
        - description: Failure reason
          jsonPath: .status.failureReason
          name: FailureReason
          type: string
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: AWSFargateProfile is the Schema for the awsfargateprofiles API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: FargateProfileSpec defines the desired state of FargateProfile
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to AWS
                    resources managed by the AWS provider, in addition to the ones added
                    by default.
                  type: object
                clusterName:
                  description: ClusterName is the name of the Cluster this object belongs
                    to.
                  minLength: 1
                  type: string
                profileName:
                  description: ProfileName specifies the profile name.
                  type: string
                roleName:
                  description: RoleName specifies the name of IAM role for this fargate
                    pool If the role is pre-existing we will treat it as unmanaged and
                    not delete it on deletion. If the EKSEnableIAM feature flag is true
                    and no name is supplied then a role is created.
                  type: string
                selectors:
                  description: Selectors specify fargate pod selectors.
                  items:
                    description: FargateSelector specifies a selector for pods that
                      should run on this fargate pool
                    properties:
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels specifies which pod labels this selector
                          should match.
                        type: object
                      namespace:
                        description: Namespace specifies which namespace this selector
                          should match.
                        type: string
                    type: object
                  type: array
                subnetIDs:
                  description: SubnetIDs specifies which subnets are used for the auto
                    scaling group of this nodegroup.
                  items:
                    type: string
                  type: array
              required:
                - clusterName
              type: object
            status:
              description: FargateProfileStatus defines the observed state of FargateProfile
              properties:
                conditions:
                  description: Conditions defines current state of the Fargate profile.
                  items:
                    description: Condition defines an observation of a Cluster API resource
                      operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status
                          to another. This should be when the underlying condition changed.
                          If that is not known, then using the time when the API field
                          changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not this
                          field is considered a guaranteed API. This field may not be
                          empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification of
                          Reason code, so the users or machines can immediately understand
                          the current situation and act accordingly. The Severity field
                          MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important.
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                failureMessage:
                  description: "FailureMessage will be set in the event that there is
                  a terminal problem reconciling the FargateProfile and will contain
                  a more verbose string suitable for logging and human consumption.
                  \n This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the FargateProfile's spec or the configuration of the
                  controller, and that manual intervention is required. Examples of
                  terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the responsible
                  controller itself being critically misconfigured. \n Any transient
                  errors that occur during the reconciliation of FargateProfiles can
                  be added as events to the FargateProfile object and/or logged in
                  the controller's output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there is
                  a terminal problem reconciling the FargateProfile and will contain
                  a succinct value suitable for machine interpretation. \n This field
                  should not be set for transitive errors that a controller faces
                  that are expected to be fixed automatically over time (like service
                  outages), but instead indicate that something is fundamentally wrong
                  with the FargateProfile's spec or the configuration of the controller,
                  and that manual intervention is required. Examples of terminal errors
                  would be invalid combinations of settings in the spec, values that
                  are unsupported by the controller, or the responsible controller
                  itself being critically misconfigured. \n Any transient errors that
                  occur during the reconciliation of FargateProfiles can be added
                  as events to the FargateProfile object and/or logged in the controller's
                  output."
                  type: string
                ready:
                  default: false
                  description: Ready denotes that the FargateProfile is available.
                  type: boolean
              required:
                - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.9
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: awsmachinepools.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AWSMachinePool
    listKind: AWSMachinePoolList
    plural: awsmachinepools
    singular: awsmachinepool
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Machine ready status
          jsonPath: .status.ready
          name: Ready
          type: string
        - description: Machine ready status
          jsonPath: .status.replicas
          name: Replicas
          type: integer
        - description: Minimum instanes in ASG
          jsonPath: .spec.minSize
          name: MinSize
          type: integer
        - description: Maximum instanes in ASG
          jsonPath: .spec.maxSize
          name: MaxSize
          type: integer
        - description: Launch Template ID
          jsonPath: .status.launchTemplateID
          name: LaunchTemplate ID
          type: string
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: AWSMachinePool is the Schema for the awsmachinepools API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachinePoolSpec defines the desired state of AWSMachinePool
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to an
                    instance, in addition to the ones added by default by the AWS provider.
                  type: object
                availabilityZones:
                  description: AvailabilityZones is an array of availability zones instances
                    can run in
                  items:
                    type: string
                  type: array
                awsLaunchTemplate:
                  description: AWSLaunchTemplate specifies the launch template and version
                    to use when an instance is launched.
                  properties:
                    additionalSecurityGroups:
                      description: AdditionalSecurityGroups is an array of references
                        to security groups that should be applied to the instances.
                        These security groups would be set in addition to any security
                        groups defined at the cluster level or in the actuator.
                      items:
                        description: AWSResourceReference is a reference to a specific
                          AWS resource by ID, ARN, or filters. Only one of ID, ARN or
                          Filters may be specified. Specifying more than one will result
                          in a validation error.
                        properties:
                          arn:
                            description: ARN of resource
                            type: string
                          filters:
                            description: 'Filters is a set of key/value pairs used to
                            identify a resource They are applied according to the
                            rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                            items:
                              description: Filter is a filter used to identify an AWS
                                resource
                              properties:
                                name:
                                  description: Name of the filter. Filter names are
                                    case-sensitive.
                                  type: string
                                values:
                                  description: Values includes one or more filter values.
                                    Filter values are case-sensitive.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - name
                                - values
                              type: object
                            type: array
                          id:
                            description: ID of resource
                            type: string
                        type: object
                      type: array
                    ami:
                      description: AMI is the reference to the AMI from which to create
                        the machine instance.
                      properties:
                        arn:
                          description: ARN of resource
                          type: string
                        filters:
                          description: 'Filters is a set of key/value pairs used to
                          identify a resource They are applied according to the rules
                          defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                          items:
                            description: Filter is a filter used to identify an AWS
                              resource
                            properties:
                              name:
                                description: Name of the filter. Filter names are case-sensitive.
                                type: string
                              values:
                                description: Values includes one or more filter values.
                                  Filter values are case-sensitive.
                                items:
                                  type: string
                                type: array
                            required:
                              - name
                              - values
                            type: object
                          type: array
                        id:
                          description: ID of resource
                          type: string
                      type: object
                    iamInstanceProfile:
                      description: The name or the Amazon Resource Name (ARN) of the
                        instance profile associated with the IAM role for the instance.
                        The instance profile contains the IAM role.
                      type: string
                    imageLookupBaseOS:
                      description: ImageLookupBaseOS is the name of the base operating
                        system to use for image lookup the AMI is not set.
                      type: string
                    imageLookupFormat:
                      description: 'ImageLookupFormat is the AMI naming format to look
                      up the image for this machine It will be ignored if an explicit
                      AMI is set. Supports substitutions for {{.BaseOS}} and {{.K8sVersion}}
                      with the base OS and kubernetes version, respectively. The BaseOS
                      will be the value in ImageLookupBaseOS or ubuntu (the default),
                      and the kubernetes version as defined by the packages produced
                      by kubernetes/release without v as a prefix: 1.13.0, 1.12.5-mybuild.1,
                      or 1.17.3. For example, the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                      will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                      for a Machine that is targeting kubernetes v1.18.0 and the ubuntu
                      base OS. See also: https://golang.org/pkg/text/template/'
                      type: string
                    imageLookupOrg:
                      description: ImageLookupOrg is the AWS Organization ID to use
                        for image lookup if AMI is not set.
                      type: string
                    instanceType:
                      description: 'InstanceType is the type of instance to create.
                      Example: m4.xlarge'
                      type: string
                    name:
                      description: The name of the launch template.
                      type: string
                    rootVolume:
                      description: RootVolume encapsulates the configuration options
                        for the root volume
                      properties:
                        deviceName:
                          description: Device name
                          type: string
                        encrypted:
                          description: Encrypted is whether the volume should be encrypted
                            or not.
                          type: boolean
                        encryptionKey:
                          description: EncryptionKey is the KMS key to use to encrypt
                            the volume. Can be either a KMS key ID or ARN. If Encrypted
                            is set and this is omitted, the default AWS key will be
                            used. The key must already exist and be accessible by the
                            controller.
                          type: string
                        iops:
                          description: IOPS is the number of IOPS requested for the
                            disk. Not applicable to all types.
                          format: int64
                          type: integer
                        size:
                          description: Size specifies size (in Gi) of the storage device.
                            Must be greater than the image snapshot size or 8 (whichever
                            is greater).
                          format: int64
                          minimum: 8
                          type: integer
                        type:
                          description: Type is the type of the volume (e.g. gp2, io1,
                            etc...).
                          type: string
                      required:
                        - size
                      type: object
                    sshKeyName:
                      description: SSHKeyName is the name of the ssh key to attach to
                        the instance. Valid values are empty string (do not use SSH
                        keys), a valid SSH key name, or omitted (use the default SSH
                        key name)
                      type: string
                    versionNumber:
                      description: 'VersionNumber is the version of the launch template
                      that is applied. Typically a new version is created when at
                      least one of the following happens: 1) A new launch template
                      spec is applied. 2) One or more parameters in an existing template
                      is changed. 3) A new AMI is discovered.'
                      format: int64
                      type: integer
                  type: object
                capacityRebalance:
                  description: Enable or disable the capacity rebalance autoscaling
                    group feature
                  type: boolean
                defaultCoolDown:
                  description: The amount of time, in seconds, after a scaling activity
                    completes before another scaling activity can start. If no value
                    is supplied by user a default value of 300 seconds is set
                  type: string
                maxSize:
                  default: 1
                  description: The maximum size of the group.
                  format: int32
                  minimum: 1
                  type: integer
                minSize:
                  default: 1
                  description: The minimum size of the group.
                  format: int32
                  minimum: 1
                  type: integer
                mixedInstancesPolicy:
                  description: MixedInstancesPolicy describes how multiple instance
                    types will be used by the ASG.
                  properties:
                    instancesDistribution:
                      description: InstancesDistribution to configure distribution of
                        On-Demand Instances and Spot Instances.
                      properties:
                        onDemandAllocationStrategy:
                          default: prioritized
                          description: OnDemandAllocationStrategy indicates how to allocate
                            instance types to fulfill On-Demand capacity.
                          enum:
                            - prioritized
                          type: string
                        onDemandBaseCapacity:
                          default: 0
                          format: int64
                          type: integer
                        onDemandPercentageAboveBaseCapacity:
                          default: 100
                          format: int64
                          type: integer
                        spotAllocationStrategy:
                          default: lowest-price
                          description: SpotAllocationStrategy indicates how to allocate
                            instances across Spot Instance pools.
                          enum:
                            - lowest-price
                            - capacity-optimized
                          type: string
                      type: object
                    overrides:
                      items:
                        description: Overrides are used to override the instance type
                          specified by the launch template with multiple instance types
                          that can be used to launch On-Demand Instances and Spot Instances.
                        properties:
                          instanceType:
                            type: string
                        required:
                          - instanceType
                        type: object
                      type: array
                  type: object
                providerID:
                  description: ProviderID is the ARN of the associated ASG
                  type: string
                providerIDList:
                  description: ProviderIDList are the identification IDs of machine
                    instances provided by the provider. This field must match the provider
                    IDs as seen on the node objects corresponding to a machine pool's
                    machine instances.
                  items:
                    type: string
                  type: array
                refreshPreferences:
                  description: RefreshPreferences describes set of preferences associated
                    with the instance refresh request.
                  properties:
                    instanceWarmup:
                      description: The number of seconds until a newly launched instance
                        is configured and ready to use. During this time, the next replacement
                        will not be initiated. The default is to use the value for the
                        health check grace period defined for the group.
                      format: int64
                      type: integer
                    minHealthyPercentage:
                      description: The amount of capacity as a percentage in ASG that
                        must remain healthy during an instance refresh. The default
                        is 90.
                      format: int64
                      type: integer
                    strategy:
                      description: The strategy to use for the instance refresh. The
                        only valid value is Rolling. A rolling update is an update that
                        is applied to all instances in an Auto Scaling group until all
                        instances have been updated.
                      type: string
                  type: object
                subnets:
                  description: Subnets is an array of subnet configurations
                  items:
                    description: AWSResourceReference is a reference to a specific AWS
                      resource by ID, ARN, or filters. Only one of ID, ARN or Filters
                      may be specified. Specifying more than one will result in a validation
                      error.
                    properties:
                      arn:
                        description: ARN of resource
                        type: string
                      filters:
                        description: 'Filters is a set of key/value pairs used to identify
                        a resource They are applied according to the rules defined
                        by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                        items:
                          description: Filter is a filter used to identify an AWS resource
                          properties:
                            name:
                              description: Name of the filter. Filter names are case-sensitive.
                              type: string
                            values:
                              description: Values includes one or more filter values.
                                Filter values are case-sensitive.
                              items:
                                type: string
                              type: array
                          required:
                            - name
                            - values
                          type: object
                        type: array
                      id:
                        description: ID of resource
                        type: string
                    type: object
                  type: array
              required:
                - awsLaunchTemplate
                - maxSize
                - minSize
              type: object
            status:
              description: AWSMachinePoolStatus defines the observed state of AWSMachinePool
              properties:
                asgStatus:
                  description: ASGStatus is a status string returned by the autoscaling
                    API
                  type: string
                conditions:
                  description: Conditions defines current service state of the AWSMachinePool.
                  items:
                    description: Condition defines an observation of a Cluster API resource
                      operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status
                          to another. This should be when the underlying condition changed.
                          If that is not known, then using the time when the API field
                          changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not this
                          field is considered a guaranteed API. This field may not be
                          empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification of
                          Reason code, so the users or machines can immediately understand
                          the current situation and act accordingly. The Severity field
                          MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important.
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                failureMessage:
                  description: "FailureMessage will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a more
                  verbose string suitable for logging and human consumption. \n This
                  field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the Machine's spec or the configuration of the controller,
                  and that manual intervention is required. Examples of terminal errors
                  would be invalid combinations of settings in the spec, values that
                  are unsupported by the controller, or the responsible controller
                  itself being critically misconfigured. \n Any transient errors that
                  occur during the reconciliation of Machines can be added as events
                  to the Machine object and/or logged in the controller's output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a succinct
                  value suitable for machine interpretation. \n This field should
                  not be set for transitive errors that a controller faces that are
                  expected to be fixed automatically over time (like service outages),
                  but instead indicate that something is fundamentally wrong with
                  the Machine's spec or the configuration of the controller, and that
                  manual intervention is required. Examples of terminal errors would
                  be invalid combinations of settings in the spec, values that are
                  unsupported by the controller, or the responsible controller itself
                  being critically misconfigured. \n Any transient errors that occur
                  during the reconciliation of Machines can be added as events to
                  the Machine object and/or logged in the controller's output."
                  type: string
                instances:
                  description: Instances contains the status for each instance in the
                    pool
                  items:
                    properties:
                      instanceID:
                        description: InstanceID is the identification of the Machine
                          Instance within ASG
                        type: string
                      version:
                        description: Version defines the Kubernetes version for the
                          Machine Instance
                        type: string
                    type: object
                  type: array
                launchTemplateID:
                  description: The ID of the launch template
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
                replicas:
                  description: Replicas is the most recently observed number of replicas
                  format: int32
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
    controller-gen.kubebuilder.io/version: v0.2.9
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: awsmachines.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capa-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
        - v1
        - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AWSMachine
    listKind: AWSMachineList
    plural: awsmachines
    singular: awsmachine
  scope: Namespaced
  versions:
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          description: AWSMachine is the Schema for the awsmachines API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachineSpec defines the desired state of AWSMachine
              properties:
                additionalSecurityGroups:
                  description: AdditionalSecurityGroups is an array of references to
                    security groups that should be applied to the instance. These security
                    groups would be set in addition to any security groups defined at
                    the cluster level or in the actuator.
                  items:
                    description: AWSResourceReference is a reference to a specific AWS
                      resource by ID, ARN, or filters. Only one of ID, ARN or Filters
                      may be specified. Specifying more than one will result in a validation
                      error.
                    properties:
                      arn:
                        description: ARN of resource
                        type: string
                      filters:
                        description: 'Filters is a set of key/value pairs used to identify
                        a resource They are applied according to the rules defined
                        by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                        items:
                          description: Filter is a filter used to identify an AWS resource
                          properties:
                            name:
                              description: Name of the filter. Filter names are case-sensitive.
                              type: string
                            values:
                              description: Values includes one or more filter values.
                                Filter values are case-sensitive.
                              items:
                                type: string
                              type: array
                          required:
                            - name
                            - values
                          type: object
                        type: array
                      id:
                        description: ID of resource
                        type: string
                    type: object
                  type: array
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to an
                    instance, in addition to the ones added by default by the AWS provider.
                    If both the AWSCluster and the AWSMachine specify the same tag name
                    with different values, the AWSMachine's value takes precedence.
                  type: object
                ami:
                  description: AMI is the reference to the AMI from which to create
                    the machine instance.
                  properties:
                    arn:
                      description: ARN of resource
                      type: string
                    filters:
                      description: 'Filters is a set of key/value pairs used to identify
                      a resource They are applied according to the rules defined by
                      the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                      items:
                        description: Filter is a filter used to identify an AWS resource
                        properties:
                          name:
                            description: Name of the filter. Filter names are case-sensitive.
                            type: string
                          values:
                            description: Values includes one or more filter values.
                              Filter values are case-sensitive.
                            items:
                              type: string
                            type: array
                        required:
                          - name
                          - values
                        type: object
                      type: array
                    id:
                      description: ID of resource
                      type: string
                  type: object
                availabilityZone:
                  description: AvailabilityZone is references the AWS availability zone
                    to use for this instance. If multiple subnets are matched for the
                    availability zone, the first one return is picked.
                  type: string
                cloudInit:
                  description: CloudInit defines options related to the bootstrapping
                    systems where CloudInit is used.
                  properties:
                    enableSecureSecretsManager:
                      description: enableSecureSecretsManager, when set to true will
                        use AWS Secrets Manager to ensure userdata privacy. A cloud-init
                        boothook shell script is prepended to download the userdata
                        from Secrets Manager and additionally delete the secret.
                      type: boolean
                    secretCount:
                      description: SecretCount is the number of secrets used to form
                        the complete secret
                      format: int32
                      type: integer
                    secretPrefix:
                      description: SecretPrefix is the prefix for the secret name. This
                        is stored temporarily, and deleted when the machine registers
                        as a node against the workload cluster.
                      type: string
                  type: object
                iamInstanceProfile:
                  description: IAMInstanceProfile is a name of an IAM instance profile
                    to assign to the instance
                  type: string
                imageLookupOrg:
                  description: ImageLookupOrg is the AWS Organization ID to use for
                    image lookup if AMI is not set.
                  type: string
                instanceType:
                  description: 'InstanceType is the type of instance to create. Example:
                  m4.xlarge'
                  type: string
                networkInterfaces:
                  description: NetworkInterfaces is a list of ENIs to associate with
                    the instance. A maximum of 2 may be specified.
                  items:
                    type: string
                  maxItems: 2
                  type: array
                providerID:
                  description: ProviderID is the unique identifier as specified by the
                    cloud provider.
                  type: string
                publicIP:
                  description: 'PublicIP specifies whether the instance should get a
                  public IP. Precedence for this setting is as follows: 1. This field
                  if set 2. Cluster/flavor setting 3. Subnet default'
                  type: boolean
                rootDeviceSize:
                  description: RootDeviceSize is the size of the root volume in gigabytes(GB).
                  format: int64
                  type: integer
                sshKeyName:
                  description: SSHKeyName is the name of the ssh key to attach to the
                    instance.
                  type: string
                subnet:
                  description: Subnet is a reference to the subnet to use for this instance.
                    If not specified, the cluster subnet will be used.
                  properties:
                    arn:
                      description: ARN of resource
                      type: string
                    filters:
                      description: 'Filters is a set of key/value pairs used to identify
                      a resource They are applied according to the rules defined by
                      the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                      items:
                        description: Filter is a filter used to identify an AWS resource
                        properties:
                          name:
                            description: Name of the filter. Filter names are case-sensitive.
                            type: string
                          values:
                            description: Values includes one or more filter values.
                              Filter values are case-sensitive.
                            items:
                              type: string
                            type: array
                        required:
                          - name
                          - values
                        type: object
                      type: array
                    id:
                      description: ID of resource
                      type: string
                  type: object
              type: object
            status:
              description: AWSMachineStatus defines the observed state of AWSMachine
              properties:
                addresses:
                  description: Addresses contains the AWS instance associated addresses.
                  items:
                    description: MachineAddress contains information for the node's
                      address.
                    properties:
                      address:
                        description: The machine address.
                        type: string
                      type:
                        description: Machine address type, one of Hostname, ExternalIP
                          or InternalIP.
                        type: string
                    required:
                      - address
                      - type
                    type: object
                  type: array
                errorMessage:
                  description: "ErrorMessage will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a more
                  verbose string suitable for logging and human consumption. \n This
                  field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the Machine's spec or the configuration of the controller,
                  and that manual intervention is required. Examples of terminal errors
                  would be invalid combinations of settings in the spec, values that
                  are unsupported by the controller, or the responsible controller
                  itself being critically misconfigured. \n Any transient errors that
                  occur during the reconciliation of Machines can be added as events
                  to the Machine object and/or logged in the controller's output."
                  type: string
                errorReason:
                  description: "ErrorReason will be set in the event that there is a
                  terminal problem reconciling the Machine and will contain a succinct
                  value suitable for machine interpretation. \n This field should
                  not be set for transitive errors that a controller faces that are
                  expected to be fixed automatically over time (like service outages),
                  but instead indicate that something is fundamentally wrong with
                  the Machine's spec or the configuration of the controller, and that
                  manual intervention is required. Examples of terminal errors would
                  be invalid combinations of settings in the spec, values that are
                  unsupported by the controller, or the responsible controller itself
                  being critically misconfigured. \n Any transient errors that occur
                  during the reconciliation of Machines can be added as events to
                  the Machine object and/or logged in the controller's output."
                  type: string
                instanceState:
                  description: InstanceState is the state of the AWS instance for this
                    machine.
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: Cluster to which this AWSMachine belongs
          jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
          name: Cluster
          type: string
        - description: EC2 instance state
          jsonPath: .status.instanceState
          name: State
          type: string
        - description: Machine ready status
          jsonPath: .status.ready
          name: Ready
          type: string
        - description: EC2 instance ID
          jsonPath: .spec.providerID
          name: InstanceID
          type: string
        - description: Machine object which owns with this AWSMachine
          jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
          name: Machine
          type: string
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: AWSMachine is the Schema for the awsmachines API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachineSpec defines the desired state of AWSMachine
              properties:
                additionalSecurityGroups:
                  description: AdditionalSecurityGroups is an array of references to
                    security groups that should be applied to the instance. These security
                    groups would be set in addition to any security groups defined at
                    the cluster level or in the actuator. It is possible to specify
                    either IDs of Filters. Using Filters will cause additional requests
                    to AWS API and if tags change the attached security groups might
                    change too.
                  items:
                    description: AWSResourceReference is a reference to a specific AWS
                      resource by ID, ARN, or filters. Only one of ID, ARN or Filters
                      may be specified. Specifying more than one will result in a validation
                      error.
                    properties:
                      arn:
                        description: ARN of resource
                        type: string
                      filters:
                        description: 'Filters is a set of key/value pairs used to identify
                        a resource They are applied according to the rules defined
                        by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                        items:
                          description: Filter is a filter used to identify an AWS resource
                          properties:
                            name:
                              description: Name of the filter. Filter names are case-sensitive.
                              type: string
                            values:
                              description: Values includes one or more filter values.
                                Filter values are case-sensitive.
                              items:
                                type: string
                              type: array
                          required:
                            - name
                            - values
                          type: object
                        type: array
                      id:
                        description: ID of resource
                        type: string
                    type: object
                  type: array
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to an
                    instance, in addition to the ones added by default by the AWS provider.
                    If both the AWSCluster and the AWSMachine specify the same tag name
                    with different values, the AWSMachine's value takes precedence.
                  type: object
                ami:
                  description: AMI is the reference to the AMI from which to create
                    the machine instance.
                  properties:
                    arn:
                      description: ARN of resource
                      type: string
                    filters:
                      description: 'Filters is a set of key/value pairs used to identify
                      a resource They are applied according to the rules defined by
                      the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                      items:
                        description: Filter is a filter used to identify an AWS resource
                        properties:
                          name:
                            description: Name of the filter. Filter names are case-sensitive.
                            type: string
                          values:
                            description: Values includes one or more filter values.
                              Filter values are case-sensitive.
                            items:
                              type: string
                            type: array
                        required:
                          - name
                          - values
                        type: object
                      type: array
                    id:
                      description: ID of resource
                      type: string
                  type: object
                cloudInit:
                  description: CloudInit defines options related to the bootstrapping
                    systems where CloudInit is used.
                  properties:
                    insecureSkipSecretsManager:
                      description: InsecureSkipSecretsManager, when set to true will
                        not use AWS Secrets Manager or AWS Systems Manager Parameter
                        Store to ensure privacy of userdata. By default, a cloud-init
                        boothook shell script is prepended to download the userdata
                        from Secrets Manager and additionally delete the secret.
                      type: boolean
                    secretCount:
                      description: SecretCount is the number of secrets used to form
                        the complete secret
                      format: int32
                      type: integer
                    secretPrefix:
                      description: SecretPrefix is the prefix for the secret name. This
                        is stored temporarily, and deleted when the machine registers
                        as a node against the workload cluster.
                      type: string
                    secureSecretsBackend:
                      description: SecureSecretsBackend, when set to parameter-store
                        will utilize the AWS Systems Manager Parameter Storage to distribute
                        secrets. By default or with the value of secrets-manager, will
                        use AWS Secrets Manager instead.
                      enum:
                        - secrets-manager
                        - ssm-parameter-store
                      type: string
                  type: object
                failureDomain:
                  description: FailureDomain is the failure domain unique identifier
                    this Machine should be attached to, as defined in Cluster API. For
                    this infrastructure provider, the ID is equivalent to an AWS Availability
                    Zone. If multiple subnets are matched for the availability zone,
                    the first one returned is picked.
                  type: string
                iamInstanceProfile:
                  description: IAMInstanceProfile is a name of an IAM instance profile
                    to assign to the instance
                  type: string
                imageLookupBaseOS:
                  description: ImageLookupBaseOS is the name of the base operating system
                    to use for image lookup the AMI is not set.
                  type: string
                imageLookupFormat:
                  description: 'ImageLookupFormat is the AMI naming format to look up
                  the image for this machine It will be ignored if an explicit AMI
                  is set. Supports substitutions for {{.BaseOS}} and {{.K8sVersion}}
                  with the base OS and kubernetes version, respectively. The BaseOS
                  will be the value in ImageLookupBaseOS or ubuntu (the default),
                  and the kubernetes version as defined by the packages produced by
                  kubernetes/release without v as a prefix: 1.13.0, 1.12.5-mybuild.1,
                  or 1.17.3. For example, the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                  will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                  for a Machine that is targeting kubernetes v1.18.0 and the ubuntu
                  base OS. See also: https://golang.org/pkg/text/template/'
                  type: string
                imageLookupOrg:
                  description: ImageLookupOrg is the AWS Organization ID to use for
                    image lookup if AMI is not set.
                  type: string
                instanceID:
                  description: InstanceID is the EC2 instance ID for this machine.
                  type: string
                instanceType:
                  description: 'InstanceType is the type of instance to create. Example:
                  m4.xlarge'
                  type: string
                networkInterfaces:
                  description: NetworkInterfaces is a list of ENIs to associate with
                    the instance. A maximum of 2 may be specified.
                  items:
                    type: string
                  maxItems: 2
                  type: array
                nonRootVolumes:
                  description: Configuration options for the non root storage volumes.
                  items:
                    description: Volume encapsulates the configuration options for the
                      storage device
                    properties:
                      deviceName:
                        description: Device name
                        type: string
                      encrypted:
                        description: Encrypted is whether the volume should be encrypted
                          or not.
                        type: boolean
                      encryptionKey:
                        description: EncryptionKey is the KMS key to use to encrypt
                          the volume. Can be either a KMS key ID or ARN. If Encrypted
                          is set and this is omitted, the default AWS key will be used.
                          The key must already exist and be accessible by the controller.
                        type: string
                      iops:
                        description: IOPS is the number of IOPS requested for the disk.
                          Not applicable to all types.
                        format: int64
                        type: integer
                      size:
                        description: Size specifies size (in Gi) of the storage device.
                          Must be greater than the image snapshot size or 8 (whichever
                          is greater).
                        format: int64
                        minimum: 8
                        type: integer
                      type:
                        description: Type is the type of the volume (e.g. gp2, io1,
                          etc...).
                        type: string
                    required:
                      - size
                    type: object
                  type: array
                providerID:
                  description: ProviderID is the unique identifier as specified by the
                    cloud provider.
                  type: string
                publicIP:
                  description: 'PublicIP specifies whether the instance should get a
                  public IP. Precedence for this setting is as follows: 1. This field
                  if set 2. Cluster/flavor setting 3. Subnet default'
                  type: boolean
                rootVolume:
                  description: RootVolume encapsulates the configuration options for
                    the root volume
                  properties:
                    deviceName:
                      description: Device name
                      type: string
                    encrypted:
                      description: Encrypted is whether the volume should be encrypted
                        or not.
                      type: boolean
                    encryptionKey:
                      description: EncryptionKey is the KMS key to use to encrypt the
                        volume. Can be either a KMS key ID or ARN. If Encrypted is set
                        and this is omitted, the default AWS key will be used. The key
                        must already exist and be accessible by the controller.
                      type: string
                    iops:
                      description: IOPS is the number of IOPS requested for the disk.
                        Not applicable to all types.
                      format: int64
                      type: integer
                    size:
                      description: Size specifies size (in Gi) of the storage device.
                        Must be greater than the image snapshot size or 8 (whichever
                        is greater).
                      format: int64
                      minimum: 8
                      type: integer
                    type:
                      description: Type is the type of the volume (e.g. gp2, io1, etc...).
                      type: string
                  required:
                    - size
                  type: object
                spotMarketOptions:
                  description: SpotMarketOptions allows users to configure instances
                    to be run using AWS Spot instances.
                  properties:
                    maxPrice:
                      description: MaxPrice defines the maximum price the user is willing
                        to pay for Spot VM instances
                      type: string
                  type: object
                sshKeyName:
                  description: SSHKeyName is the name of the ssh key to attach to the
                    instance. Valid values are empty string (do not use SSH keys), a
                    valid SSH key name, or omitted (use the default SSH key name)
                  type: string
                subnet:
                  description: Subnet is a reference to the subnet to use for this instance.
                    If not specified, the cluster subnet will be used.
                  properties:
                    arn:
                      description: ARN of resource
                      type: string
                    filters:
                      description: 'Filters is a set of key/value pairs used to identify
                      a resource They are applied according to the rules defined by
                      the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                      items:
                        description: Filter is a filter used to identify an AWS resource
                        properties:
                          name:
                            description: Name of the filter. Filter names are case-sensitive.
                            type: string
                          values:
                            description: Values includes one or more filter values.
                              Filter values are case-sensitive.
                            items:
                              type: string
                            type: array
                        required:
                          - name
                          - values
                        type: object
                      type: array
                    id:
                      description: ID of resource
                      type: string
                  type: object
                tenancy:
                  description: Tenancy indicates if instance should run on shared or
                    single-tenant hardware.
                  enum:
                    - default
                    - dedicated
                    - host
                  type: string
                uncompressedUserData:
                  description: UncompressedUserData specify whether the user data is
                    gzip-compressed before it is sent to ec2 instance. cloud-init has
                    built-in support for gzip-compressed user data user data stored
                    in aws secret manager is always gzip-compressed.
                  type: boolean
              type: object
            status:
              description: AWSMachineStatus defines the observed state of AWSMachine
              properties:
                addresses:
                  description: Addresses contains the AWS instance associated addresses.
                  items:
                    description: MachineAddress contains information for the node's
                      address.
                    properties:
                      address:
                        description: The machine address.
                        type: string
                      type:
                        description: Machine address type, one of Hostname, ExternalIP
                          or InternalIP.
                        type: string
                    required:
                      - address
                      - type
                    type: object
                  type: array
                conditions:
                  description: Conditions defines current service state of the AWSMachine.
                  items:
                    description: Condition defines an observation of a Cluster API resource
                      operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status
                          to another. This should be when the underlying condition changed.
                          If that is not known, then using the time when the API field
                          changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not this
                          field is considered a guaranteed API. This field may not be
                          empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification of
                          Reason code, so the users or machines can immediately understand
                          the current situation and act accordingly. The Severity field
                          MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important.
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                failureMessage:
                  description: "FailureMessage will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a more
                  verbose string suitable for logging and human consumption. \n This
                  field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the Machine's spec or the configuration of the controller,
                  and that manual intervention is required. Examples of terminal errors
                  would be invalid combinations of settings in the spec, values that
                  are unsupported by the controller, or the responsible controller
                  itself being critically misconfigured. \n Any transient errors that
                  occur during the reconciliation of Machines can be added as events
                  to the Machine object and/or logged in the controller's output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a succinct
                  value suitable for machine interpretation. \n This field should
                  not be set for transitive errors that a controller faces that are
                  expected to be fixed automatically over time (like service outages),
                  but instead indicate that something is fundamentally wrong with
                  the Machine's spec or the configuration of the controller, and that
                  manual intervention is required. Examples of terminal errors would
                  be invalid combinations of settings in the spec, values that are
                  unsupported by the controller, or the responsible controller itself
                  being critically misconfigured. \n Any transient errors that occur
                  during the reconciliation of Machines can be added as events to
                  the Machine object and/or logged in the controller's output."
                  type: string
                instanceState:
                  description: InstanceState is the state of the AWS instance for this
                    machine.
                  type: string
                interruptible:
                  description: Interruptible reports that this machine is using spot
                    instances and can therefore be interrupted by CAPI when it receives
                    a notice that the spot instance is to be terminated by AWS. This
                    will be set to true when SpotMarketOptions is not nil (i.e. this
                    machine is using a spot instance).
                  type: boolean
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
    controller-gen.kubebuilder.io/version: v0.2.9
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: awsmachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capa-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
        - v1
        - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AWSMachineTemplate
    listKind: AWSMachineTemplateList
    plural: awsmachinetemplates
    singular: awsmachinetemplate
  scope: Namespaced
  versions:
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          description: AWSMachineTemplate is the Schema for the awsmachinetemplates
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachineTemplateSpec defines the desired state of AWSMachineTemplate
              properties:
                template:
                  description: AWSMachineTemplateResource describes the data needed
                    to create am AWSMachine from a template
                  properties:
                    spec:
                      description: Spec is the specification of the desired behavior
                        of the machine.
                      properties:
                        additionalSecurityGroups:
                          description: AdditionalSecurityGroups is an array of references
                            to security groups that should be applied to the instance.
                            These security groups would be set in addition to any security
                            groups defined at the cluster level or in the actuator.
                          items:
                            description: AWSResourceReference is a reference to a specific
                              AWS resource by ID, ARN, or filters. Only one of ID, ARN
                              or Filters may be specified. Specifying more than one
                              will result in a validation error.
                            properties:
                              arn:
                                description: ARN of resource
                                type: string
                              filters:
                                description: 'Filters is a set of key/value pairs used
                                to identify a resource They are applied according
                                to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                                items:
                                  description: Filter is a filter used to identify an
                                    AWS resource
                                  properties:
                                    name:
                                      description: Name of the filter. Filter names
                                        are case-sensitive.
                                      type: string
                                    values:
                                      description: Values includes one or more filter
                                        values. Filter values are case-sensitive.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - name
                                    - values
                                  type: object
                                type: array
                              id:
                                description: ID of resource
                                type: string
                            type: object
                          type: array
                        additionalTags:
                          additionalProperties:
                            type: string
                          description: AdditionalTags is an optional set of tags to
                            add to an instance, in addition to the ones added by default
                            by the AWS provider. If both the AWSCluster and the AWSMachine
                            specify the same tag name with different values, the AWSMachine's
                            value takes precedence.
                          type: object
                        ami:
                          description: AMI is the reference to the AMI from which to
                            create the machine instance.
                          properties:
                            arn:
                              description: ARN of resource
                              type: string
                            filters:
                              description: 'Filters is a set of key/value pairs used
                              to identify a resource They are applied according to
                              the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                              items:
                                description: Filter is a filter used to identify an
                                  AWS resource
                                properties:
                                  name:
                                    description: Name of the filter. Filter names are
                                      case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter
                                      values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                  - name
                                  - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        availabilityZone:
                          description: AvailabilityZone is references the AWS availability
                            zone to use for this instance. If multiple subnets are matched
                            for the availability zone, the first one return is picked.
                          type: string
                        cloudInit:
                          description: CloudInit defines options related to the bootstrapping
                            systems where CloudInit is used.
                          properties:
                            enableSecureSecretsManager:
                              description: enableSecureSecretsManager, when set to true
                                will use AWS Secrets Manager to ensure userdata privacy.
                                A cloud-init boothook shell script is prepended to download
                                the userdata from Secrets Manager and additionally delete
                                the secret.
                              type: boolean
                            secretCount:
                              description: SecretCount is the number of secrets used
                                to form the complete secret
                              format: int32
                              type: integer
                            secretPrefix:
                              description: SecretPrefix is the prefix for the secret
                                name. This is stored temporarily, and deleted when the
                                machine registers as a node against the workload cluster.
                              type: string
                          type: object
                        iamInstanceProfile:
                          description: IAMInstanceProfile is a name of an IAM instance
                            profile to assign to the instance
                          type: string
                        imageLookupOrg:
                          description: ImageLookupOrg is the AWS Organization ID to
                            use for image lookup if AMI is not set.
                          type: string
                        instanceType:
                          description: 'InstanceType is the type of instance to create.
                          Example: m4.xlarge'
                          type: string
                        networkInterfaces:
                          description: NetworkInterfaces is a list of ENIs to associate
                            with the instance. A maximum of 2 may be specified.
                          items:
                            type: string
                          maxItems: 2
                          type: array
                        providerID:
                          description: ProviderID is the unique identifier as specified
                            by the cloud provider.
                          type: string
                        publicIP:
                          description: 'PublicIP specifies whether the instance should
                          get a public IP. Precedence for this setting is as follows:
                          1. This field if set 2. Cluster/flavor setting 3. Subnet
                          default'
                          type: boolean
                        rootDeviceSize:
                          description: RootDeviceSize is the size of the root volume
                            in gigabytes(GB).
                          format: int64
                          type: integer
                        sshKeyName:
                          description: SSHKeyName is the name of the ssh key to attach
                            to the instance.
                          type: string
                        subnet:
                          description: Subnet is a reference to the subnet to use for
                            this instance. If not specified, the cluster subnet will
                            be used.
                          properties:
                            arn:
                              description: ARN of resource
                              type: string
                            filters:
                              description: 'Filters is a set of key/value pairs used
                              to identify a resource They are applied according to
                              the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                              items:
                                description: Filter is a filter used to identify an
                                  AWS resource
                                properties:
                                  name:
                                    description: Name of the filter. Filter names are
                                      case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter
                                      values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                  - name
                                  - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                      type: object
                  required:
                    - spec
                  type: object
              required:
                - template
              type: object
          type: object
      served: true
      storage: false
    - name: v1alpha3
      schema:
        openAPIV3Schema:
          description: AWSMachineTemplate is the Schema for the awsmachinetemplates
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachineTemplateSpec defines the desired state of AWSMachineTemplate
              properties:
                template:
                  description: AWSMachineTemplateResource describes the data needed
                    to create am AWSMachine from a template
                  properties:
                    spec:
                      description: Spec is the specification of the desired behavior
                        of the machine.
                      properties:
                        additionalSecurityGroups:
                          description: AdditionalSecurityGroups is an array of references
                            to security groups that should be applied to the instance.
                            These security groups would be set in addition to any security
                            groups defined at the cluster level or in the actuator.
                            It is possible to specify either IDs of Filters. Using Filters
                            will cause additional requests to AWS API and if tags change
                            the attached security groups might change too.
                          items:
                            description: AWSResourceReference is a reference to a specific
                              AWS resource by ID, ARN, or filters. Only one of ID, ARN
                              or Filters may be specified. Specifying more than one
                              will result in a validation error.
                            properties:
                              arn:
                                description: ARN of resource
                                type: string
                              filters:
                                description: 'Filters is a set of key/value pairs used
                                to identify a resource They are applied according
                                to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                                items:
                                  description: Filter is a filter used to identify an
                                    AWS resource
                                  properties:
                                    name:
                                      description: Name of the filter. Filter names
                                        are case-sensitive.
                                      type: string
                                    values:
                                      description: Values includes one or more filter
                                        values. Filter values are case-sensitive.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - name
                                    - values
                                  type: object
                                type: array
                              id:
                                description: ID of resource
                                type: string
                            type: object
                          type: array
                        additionalTags:
                          additionalProperties:
                            type: string
                          description: AdditionalTags is an optional set of tags to
                            add to an instance, in addition to the ones added by default
                            by the AWS provider. If both the AWSCluster and the AWSMachine
                            specify the same tag name with different values, the AWSMachine's
                            value takes precedence.
                          type: object
                        ami:
                          description: AMI is the reference to the AMI from which to
                            create the machine instance.
                          properties:
                            arn:
                              description: ARN of resource
                              type: string
                            filters:
                              description: 'Filters is a set of key/value pairs used
                              to identify a resource They are applied according to
                              the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                              items:
                                description: Filter is a filter used to identify an
                                  AWS resource
                                properties:
                                  name:
                                    description: Name of the filter. Filter names are
                                      case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter
                                      values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                  - name
                                  - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        cloudInit:
                          description: CloudInit defines options related to the bootstrapping
                            systems where CloudInit is used.
                          properties:
                            insecureSkipSecretsManager:
                              description: InsecureSkipSecretsManager, when set to true
                                will not use AWS Secrets Manager or AWS Systems Manager
                                Parameter Store to ensure privacy of userdata. By default,
                                a cloud-init boothook shell script is prepended to download
                                the userdata from Secrets Manager and additionally delete
                                the secret.
                              type: boolean
                            secretCount:
                              description: SecretCount is the number of secrets used
                                to form the complete secret
                              format: int32
                              type: integer
                            secretPrefix:
                              description: SecretPrefix is the prefix for the secret
                                name. This is stored temporarily, and deleted when the
                                machine registers as a node against the workload cluster.
                              type: string
                            secureSecretsBackend:
                              description: SecureSecretsBackend, when set to parameter-store
                                will utilize the AWS Systems Manager Parameter Storage
                                to distribute secrets. By default or with the value
                                of secrets-manager, will use AWS Secrets Manager instead.
                              enum:
                                - secrets-manager
                                - ssm-parameter-store
                              type: string
                          type: object
                        failureDomain:
                          description: FailureDomain is the failure domain unique identifier
                            this Machine should be attached to, as defined in Cluster
                            API. For this infrastructure provider, the ID is equivalent
                            to an AWS Availability Zone. If multiple subnets are matched
                            for the availability zone, the first one returned is picked.
                          type: string
                        iamInstanceProfile:
                          description: IAMInstanceProfile is a name of an IAM instance
                            profile to assign to the instance
                          type: string
                        imageLookupBaseOS:
                          description: ImageLookupBaseOS is the name of the base operating
                            system to use for image lookup the AMI is not set.
                          type: string
                        imageLookupFormat:
                          description: 'ImageLookupFormat is the AMI naming format to
                          look up the image for this machine It will be ignored if
                          an explicit AMI is set. Supports substitutions for {{.BaseOS}}
                          and {{.K8sVersion}} with the base OS and kubernetes version,
                          respectively. The BaseOS will be the value in ImageLookupBaseOS
                          or ubuntu (the default), and the kubernetes version as defined
                          by the packages produced by kubernetes/release without v
                          as a prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example,
                          the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                          will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                          for a Machine that is targeting kubernetes v1.18.0 and the
                          ubuntu base OS. See also: https://golang.org/pkg/text/template/'
                          type: string
                        imageLookupOrg:
                          description: ImageLookupOrg is the AWS Organization ID to
                            use for image lookup if AMI is not set.
                          type: string
                        instanceID:
                          description: InstanceID is the EC2 instance ID for this machine.
                          type: string
                        instanceType:
                          description: 'InstanceType is the type of instance to create.
                          Example: m4.xlarge'
                          type: string
                        networkInterfaces:
                          description: NetworkInterfaces is a list of ENIs to associate
                            with the instance. A maximum of 2 may be specified.
                          items:
                            type: string
                          maxItems: 2
                          type: array
                        nonRootVolumes:
                          description: Configuration options for the non root storage
                            volumes.
                          items:
                            description: Volume encapsulates the configuration options
                              for the storage device
                            properties:
                              deviceName:
                                description: Device name
                                type: string
                              encrypted:
                                description: Encrypted is whether the volume should
                                  be encrypted or not.
                                type: boolean
                              encryptionKey:
                                description: EncryptionKey is the KMS key to use to
                                  encrypt the volume. Can be either a KMS key ID or
                                  ARN. If Encrypted is set and this is omitted, the
                                  default AWS key will be used. The key must already
                                  exist and be accessible by the controller.
                                type: string
                              iops:
                                description: IOPS is the number of IOPS requested for
                                  the disk. Not applicable to all types.
                                format: int64
                                type: integer
                              size:
                                description: Size specifies size (in Gi) of the storage
                                  device. Must be greater than the image snapshot size
                                  or 8 (whichever is greater).
                                format: int64
                                minimum: 8
                                type: integer
                              type:
                                description: Type is the type of the volume (e.g. gp2,
                                  io1, etc...).
                                type: string
                            required:
                              - size
                            type: object
                          type: array
                        providerID:
                          description: ProviderID is the unique identifier as specified
                            by the cloud provider.
                          type: string
                        publicIP:
                          description: 'PublicIP specifies whether the instance should
                          get a public IP. Precedence for this setting is as follows:
                          1. This field if set 2. Cluster/flavor setting 3. Subnet
                          default'
                          type: boolean
                        rootVolume:
                          description: RootVolume encapsulates the configuration options
                            for the root volume
                          properties:
                            deviceName:
                              description: Device name
                              type: string
                            encrypted:
                              description: Encrypted is whether the volume should be
                                encrypted or not.
                              type: boolean
                            encryptionKey:
                              description: EncryptionKey is the KMS key to use to encrypt
                                the volume. Can be either a KMS key ID or ARN. If Encrypted
                                is set and this is omitted, the default AWS key will
                                be used. The key must already exist and be accessible
                                by the controller.
                              type: string
                            iops:
                              description: IOPS is the number of IOPS requested for
                                the disk. Not applicable to all types.
                              format: int64
                              type: integer
                            size:
                              description: Size specifies size (in Gi) of the storage
                                device. Must be greater than the image snapshot size
                                or 8 (whichever is greater).
                              format: int64
                              minimum: 8
                              type: integer
                            type:
                              description: Type is the type of the volume (e.g. gp2,
                                io1, etc...).
                              type: string
                          required:
                            - size
                          type: object
                        spotMarketOptions:
                          description: SpotMarketOptions allows users to configure instances
                            to be run using AWS Spot instances.
                          properties:
                            maxPrice:
                              description: MaxPrice defines the maximum price the user
                                is willing to pay for Spot VM instances
                              type: string
                          type: object
                        sshKeyName:
                          description: SSHKeyName is the name of the ssh key to attach
                            to the instance. Valid values are empty string (do not use
                            SSH keys), a valid SSH key name, or omitted (use the default
                            SSH key name)
                          type: string
                        subnet:
                          description: Subnet is a reference to the subnet to use for
                            this instance. If not specified, the cluster subnet will
                            be used.
                          properties:
                            arn:
                              description: ARN of resource
                              type: string
                            filters:
                              description: 'Filters is a set of key/value pairs used
                              to identify a resource They are applied according to
                              the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                              items:
                                description: Filter is a filter used to identify an
                                  AWS resource
                                properties:
                                  name:
                                    description: Name of the filter. Filter names are
                                      case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter
                                      values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                  - name
                                  - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        tenancy:
                          description: Tenancy indicates if instance should run on shared
                            or single-tenant hardware.
                          enum:
                            - default
                            - dedicated
                            - host
                          type: string
                        uncompressedUserData:
                          description: UncompressedUserData specify whether the user
                            data is gzip-compressed before it is sent to ec2 instance.
                            cloud-init has built-in support for gzip-compressed user
                            data user data stored in aws secret manager is always gzip-compressed.
                          type: boolean
                      type: object
                  required:
                    - spec
                  type: object
              required:
                - template
              type: object
          type: object
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.9
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: awsmanagedclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AWSManagedCluster
    listKind: AWSManagedClusterList
    plural: awsmanagedclusters
    shortNames:
      - awsmc
    singular: awsmanagedcluster
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Cluster to which this AWSManagedControl belongs
          jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
          name: Cluster
          type: string
        - description: Control plane infrastructure is ready for worker nodes
          jsonPath: .status.ready
          name: Ready
          type: string
        - description: AWS VPC the control plane is using
          jsonPath: .spec.networkSpec.vpc.id
          name: VPC
          type: string
        - description: API Endpoint
          jsonPath: .spec.controlPlaneEndpoint.host
          name: Endpoint
          priority: 1
          type: string
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: AWSManagedCluster is the Schema for the awsmanagedclusters API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSManagedClusterSpec defines the desired state of AWSManagedCluster
              properties:
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to
                    communicate with the control plane.
                  properties:
                    host:
                      description: The hostname on which the API server is serving.
                      type: string
                    port:
                      description: The port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                    - host
                    - port
                  type: object
              type: object
            status:
              description: AWSManagedClusterStatus defines the observed state of AWSManagedCluster
              properties:
                failureDomains:
                  additionalProperties:
                    description: FailureDomainSpec is the Schema for Cluster API failure
                      domains. It allows controllers to understand how many failure
                      domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: Attributes is a free form map of attributes an
                          infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: ControlPlane determines if this failure domain
                          is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: FailureDomains specifies a list fo available availability
                    zones that can be used
                  type: object
                ready:
                  description: Ready is when the AWSManagedControlPlane has a API server
                    URL.
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.9
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: awsmanagedmachinepools.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AWSManagedMachinePool
    listKind: AWSManagedMachinePoolList
    plural: awsmanagedmachinepools
    singular: awsmanagedmachinepool
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: MachinePool ready status
          jsonPath: .status.ready
          name: Ready
          type: string
        - description: Number of replicas
          jsonPath: .status.replicas
          name: Replicas
          type: integer
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: AWSManagedMachinePool is the Schema for the awsmanagedmachinepools
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSManagedMachinePoolSpec defines the desired state of AWSManagedMachinePool
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to AWS
                    resources managed by the AWS provider, in addition to the ones added
                    by default.
                  type: object
                amiType:
                  default: AL2_x86_64
                  description: AMIType defines the AMI type
                  enum:
                    - AL2_x86_64
                    - AL2_x86_64_GPU
                    - AL2_ARM_64
                  type: string
                amiVersion:
                  description: AMIVersion defines the desired AMI release version. If
                    no version number is supplied then the latest version for the Kubernetes
                    version will be used
                  minLength: 2
                  type: string
                availabilityZones:
                  description: AvailabilityZones is an array of availability zones instances
                    can run in
                  items:
                    type: string
                  type: array
                diskSize:
                  description: DiskSize specifies the root disk size
                  format: int32
                  type: integer
                eksNodegroupName:
                  description: EKSNodegroupName specifies the name of the nodegroup
                    in AWS corresponding to this MachinePool. If you don't specify a
                    name then a default name will be created based on the namespace
                    and name of the managed machine pool.
                  type: string
                instanceType:
                  description: InstanceType specifies the AWS instance type
                  type: string
                labels:
                  additionalProperties:
                    type: string
                  description: Labels specifies labels for the Kubernetes node objects
                  type: object
                providerIDList:
                  description: ProviderIDList are the provider IDs of instances in the
                    autoscaling group corresponding to the nodegroup represented by
                    this machine pool
                  items:
                    type: string
                  type: array
                remoteAccess:
                  description: RemoteAccess specifies how machines can be accessed remotely
                  properties:
                    public:
                      description: Public specifies whether to open port 22 to the public
                        internet
                      type: boolean
                    sourceSecurityGroups:
                      description: SourceSecurityGroups specifies which security groups
                        are allowed access
                      items:
                        type: string
                      type: array
                    sshKeyName:
                      description: SSHKeyName specifies which EC2 SSH key can be used
                        to access machines. If left empty, the key from the control
                        plane is used.
                      type: string
                  type: object
                roleName:
                  description: RoleName specifies the name of IAM role for the node
                    group. If the role is pre-existing we will treat it as unmanaged
                    and not delete it on deletion. If the EKSEnableIAM feature flag
                    is true and no name is supplied then a role is created.
                  type: string
                scaling:
                  description: Scaling specifies scaling for the ASG behind this pool
                  properties:
                    maxSize:
                      format: int32
                      type: integer
                    minSize:
                      format: int32
                      type: integer
                  type: object
                subnetIDs:
                  description: SubnetIDs specifies which subnets are used for the auto
                    scaling group of this nodegroup
                  items:
                    type: string
                  type: array
              type: object
            status:
              description: AWSManagedMachinePoolStatus defines the observed state of
                AWSManagedMachinePool
              properties:
                conditions:
                  description: Conditions defines current service state of the managed
                    machine pool
                  items:
                    description: Condition defines an observation of a Cluster API resource
                      operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status
                          to another. This should be when the underlying condition changed.
                          If that is not known, then using the time when the API field
                          changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not this
                          field is considered a guaranteed API. This field may not be
                          empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification of
                          Reason code, so the users or machines can immediately understand
                          the current situation and act accordingly. The Severity field
                          MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important.
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                failureMessage:
                  description: "FailureMessage will be set in the event that there is
                  a terminal problem reconciling the MachinePool and will contain
                  a more verbose string suitable for logging and human consumption.
                  \n This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the MachinePool's spec or the configuration of the controller,
                  and that manual intervention is required. Examples of terminal errors
                  would be invalid combinations of settings in the spec, values that
                  are unsupported by the controller, or the responsible controller
                  itself being critically misconfigured. \n Any transient errors that
                  occur during the reconciliation of MachinePools can be added as
                  events to the MachinePool object and/or logged in the controller's
                  output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there is
                  a terminal problem reconciling the MachinePool and will contain
                  a succinct value suitable for machine interpretation. \n This field
                  should not be set for transitive errors that a controller faces
                  that are expected to be fixed automatically over time (like service
                  outages), but instead indicate that something is fundamentally wrong
                  with the Machine's spec or the configuration of the controller,
                  and that manual intervention is required. Examples of terminal errors
                  would be invalid combinations of settings in the spec, values that
                  are unsupported by the controller, or the responsible controller
                  itself being critically misconfigured. \n Any transient errors that
                  occur during the reconciliation of MachinePools can be added as
                  events to the MachinePool object and/or logged in the controller's
                  output."
                  type: string
                ready:
                  default: false
                  description: Ready denotes that the AWSManagedMachinePool nodegroup
                    has joined the cluster
                  type: boolean
                replicas:
                  description: Replicas is the most recently observed number of replicas.
                  format: int32
                  type: integer
              required:
                - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    ${AWS_CONTROLLER_IAM_ROLE/#arn/eks.amazonaws.com/role-arn: arn}
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    control-plane: controller-manager
  name: capa-controller-manager
  namespace: capa-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
  name: capa-leader-election-role
  namespace: capa-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps/status
    verbs:
      - get
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
  name: capa-manager-role
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - cluster.x-k8s.io
    resources:
      - clusters
      - clusters/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cluster.x-k8s.io
    resources:
      - machines
      - machines/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - controlplane.cluster.x-k8s.io
    resources:
      - awsmanagedcontrolplanes
      - awsmanagedcontrolplanes/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - get
      - list
      - patch
      - watch
  - apiGroups:
      - exp.cluster.x-k8s.io
    resources:
      - machinepools
      - machinepools/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - awsclustercontrolleridentities
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - awsclusterroleidentities
      - awsclusterstaticidentities
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - awsclusters
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - awsclusters/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - awsfargateprofiles
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - awsfargateprofiles/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - awsmachinepools
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - awsmachinepools/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - awsmachines
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - awsmachines/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - awsmanagedclusters
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - awsmanagedclusters/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - awsmanagedmachinepools
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - awsmanagedmachinepools/status
    verbs:
      - get
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
  name: capa-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
  name: capa-leader-election-rolebinding
  namespace: capa-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capa-leader-election-role
subjects:
  - kind: ServiceAccount
    name: capa-controller-manager
    namespace: capa-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
  name: capa-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capa-manager-role
subjects:
  - kind: ServiceAccount
    name: capa-controller-manager
    namespace: capa-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
  name: capa-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capa-proxy-role
subjects:
  - kind: ServiceAccount
    name: capa-controller-manager
    namespace: capa-system
---
apiVersion: v1
data:
  credentials: ${AWS_B64ENCODED_CREDENTIALS}
kind: Secret
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
  name: capa-manager-bootstrap-credentials
  namespace: capa-system
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    control-plane: capa-controller-manager
  name: capa-controller-manager-metrics-service
  namespace: capa-system
spec:
  ports:
    - name: https
      port: 8443
      targetPort: https
  selector:
    cluster.x-k8s.io/provider: infrastructure-aws
    control-plane: capa-controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
  name: capa-webhook-service
  namespace: capi-webhook-system
spec:
  ports:
    - port: 443
      targetPort: webhook-server
  selector:
    cluster.x-k8s.io/provider: infrastructure-aws
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    control-plane: capa-controller-manager
  name: capa-controller-manager
  namespace: capa-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-aws
      control-plane: capa-controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-aws
        control-plane: capa-controller-manager
    spec:
      containers:
        - args:
            - --metrics-addr=127.0.0.1:8080
            - --enable-leader-election
            - --feature-gates=EKS=${EXP_EKS:=false},EKSEnableIAM=${EXP_EKS_IAM:=false},MachinePool=${EXP_MACHINE_POOL:=false},EventBridgeInstanceState=${EVENT_BRIDGE_INSTANCE_STATE:=false},AutoControllerIdentityCreator=${AUTO_CONTROLLER_IDENTITY_CREATOR:=true}
          image: registry.tkg.vmware.run/cluster-api-aws/cluster-api-aws-controller:${CAPA_CONTROLLER_IMAGE_TAG}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
          name: manager
          env:
            - name: AWS_SHARED_CREDENTIALS_FILE
              value: /home/.aws/credentials
            - name: HTTP_PROXY
              value: ${TKG_HTTP_PROXY}
            - name: HTTPS_PROXY
              value: ${TKG_HTTPS_PROXY}
            - name: NO_PROXY
              value: ${TKG_NO_PROXY}
          ports:
            - containerPort: 9440
              name: healthz
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: healthz
          volumeMounts:
            - mountPath: /home/.aws
              name: credentials
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=10
          image: registry.tkg.vmware.run/cluster-api/kube-rbac-proxy:${KUBE_RBAC_PROXY_IMAGE_TAG}
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
      metadata:
        annotations:
          iam.amazonaws.com/role: ${AWS_CONTROLLER_IAM_ROLE:=""}
      securityContext:
        fsGroup: 1000
      serviceAccountName: capa-controller-manager
      terminationGracePeriodSeconds: 10
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      volumes:
        - name: credentials
          secret:
            secretName: capa-manager-bootstrap-credentials
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    control-plane: capa-controller-manager
  name: capa-controller-manager
  namespace: capi-webhook-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-aws
      control-plane: capa-controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-aws
        control-plane: capa-controller-manager
    spec:
      containers:
        - args:
            - --metrics-addr=127.0.0.1:8080
            - --webhook-port=9443
            - --feature-gates=EKS=${EXP_EKS:=false},EKSEnableIAM=${EXP_EKS_IAM:=false},MachinePool=${EXP_MACHINE_POOL:=false},EventBridgeInstanceState=${EVENT_BRIDGE_INSTANCE_STATE:=false},AutoControllerIdentityCreator=${AUTO_CONTROLLER_IDENTITY_CREATOR:=true}
          image: registry.tkg.vmware.run/cluster-api-aws/cluster-api-aws-controller:${CAPA_CONTROLLER_IMAGE_TAG}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
            - containerPort: 9440
              name: healthz
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: healthz
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=10
          image: registry.tkg.vmware.run/cluster-api/kube-rbac-proxy:${KUBE_RBAC_PROXY_IMAGE_TAG}
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
      terminationGracePeriodSeconds: 10
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: capa-webhook-service-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
  name: capa-serving-cert
  namespace: capi-webhook-system
spec:
  dnsNames:
    - capa-webhook-service.capi-webhook-system.svc
    - capa-webhook-service.capi-webhook-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: capa-selfsigned-issuer
  secretName: capa-webhook-service-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
  name: capa-selfsigned-issuer
  namespace: capi-webhook-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
  name: capa-mutating-webhook-configuration
webhooks:
  - clientConfig:
      caBundle: Cg==
      service:
        name: capa-webhook-service
        namespace: capi-webhook-system
        path: /mutate-infrastructure-cluster-x-k8s-io-v1alpha3-awscluster
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: default.awscluster.infrastructure.cluster.x-k8s.io
    rules:
      - apiGroups:
          - infrastructure.cluster.x-k8s.io
        apiVersions:
          - v1alpha3
        operations:
          - CREATE
          - UPDATE
        resources:
          - awsclusters
    sideEffects: None
  - clientConfig:
      caBundle: Cg==
      service:
        name: capa-webhook-service
        namespace: capi-webhook-system
        path: /mutate-infrastructure-cluster-x-k8s-io-v1alpha3-awsclustercontrolleridentity
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: default.awsclustercontrolleridentity.infrastructure.cluster.x-k8s.io
    rules:
      - apiGroups:
          - infrastructure.cluster.x-k8s.io
        apiVersions:
          - v1alpha3
        operations:
          - CREATE
          - UPDATE
        resources:
          - awsclustercontrolleridentities
    sideEffects: None
  - clientConfig:
      caBundle: Cg==
      service:
        name: capa-webhook-service
        namespace: capi-webhook-system
        path: /mutate-infrastructure-cluster-x-k8s-io-v1alpha3-awsclusterroleidentity
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: default.awsclusterroleidentity.infrastructure.cluster.x-k8s.io
    rules:
      - apiGroups:
          - infrastructure.cluster.x-k8s.io
        apiVersions:
          - v1alpha3
        operations:
          - CREATE
          - UPDATE
        resources:
          - awsclusterroleidentities
    sideEffects: None
  - clientConfig:
      caBundle: Cg==
      service:
        name: capa-webhook-service
        namespace: capi-webhook-system
        path: /mutate-infrastructure-cluster-x-k8s-io-v1alpha3-awsmachine
    failurePolicy: Fail
    name: mutation.awsmachine.infrastructure.cluster.x-k8s.io
    rules:
      - apiGroups:
          - infrastructure.cluster.x-k8s.io
        apiVersions:
          - v1alpha3
        operations:
          - CREATE
          - UPDATE
        resources:
          - awsmachines
    sideEffects: None
  - clientConfig:
      caBundle: Cg==
      service:
        name: capa-webhook-service
        namespace: capi-webhook-system
        path: /mutate-infrastructure-cluster-x-k8s-io-v1alpha3-awsfargateprofile
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: default.awsfargateprofile.infrastructure.cluster.x-k8s.io
    rules:
      - apiGroups:
          - infrastructure.cluster.x-k8s.io
        apiVersions:
          - v1alpha3
        operations:
          - CREATE
          - UPDATE
        resources:
          - awsfargateprofiles
    sideEffects: None
  - clientConfig:
      caBundle: Cg==
      service:
        name: capa-webhook-service
        namespace: capi-webhook-system
        path: /mutate-infrastructure-cluster-x-k8s-io-v1alpha3-awsmachinepool
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: default.awsmachinepool.infrastructure.cluster.x-k8s.io
    rules:
      - apiGroups:
          - infrastructure.cluster.x-k8s.io
        apiVersions:
          - v1alpha3
        operations:
          - CREATE
          - UPDATE
        resources:
          - awsmachinepools
    sideEffects: None
  - clientConfig:
      caBundle: Cg==
      service:
        name: capa-webhook-service
        namespace: capi-webhook-system
        path: /mutate-infrastructure-cluster-x-k8s-io-v1alpha3-awsmanagedmachinepool
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: default.awsmanagedmachinepool.infrastructure.cluster.x-k8s.io
    rules:
      - apiGroups:
          - infrastructure.cluster.x-k8s.io
        apiVersions:
          - v1alpha3
        operations:
          - CREATE
          - UPDATE
        resources:
          - awsmanagedmachinepools
    sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
  name: capa-validating-webhook-configuration
webhooks:
  - clientConfig:
      caBundle: Cg==
      service:
        name: capa-webhook-service
        namespace: capi-webhook-system
        path: /validate-infrastructure-cluster-x-k8s-io-v1alpha3-awscluster
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: validation.awscluster.infrastructure.cluster.x-k8s.io
    rules:
      - apiGroups:
          - infrastructure.cluster.x-k8s.io
        apiVersions:
          - v1alpha3
        operations:
          - CREATE
          - UPDATE
        resources:
          - awsclusters
    sideEffects: None
  - clientConfig:
      caBundle: Cg==
      service:
        name: capa-webhook-service
        namespace: capi-webhook-system
        path: /validate-infrastructure-cluster-x-k8s-io-v1alpha3-awsclustercontrolleridentity
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: validation.awsclustercontrolleridentity.infrastructure.cluster.x-k8s.io
    rules:
      - apiGroups:
          - infrastructure.cluster.x-k8s.io
        apiVersions:
          - v1alpha3
        operations:
          - CREATE
          - UPDATE
        resources:
          - awsclustercontrolleridentities
    sideEffects: None
  - clientConfig:
      caBundle: Cg==
      service:
        name: capa-webhook-service
        namespace: capi-webhook-system
        path: /validate-infrastructure-cluster-x-k8s-io-v1alpha3-awsclusterroleidentity
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: validation.awsclusterroleidentity.infrastructure.cluster.x-k8s.io
    rules:
      - apiGroups:
          - infrastructure.cluster.x-k8s.io
        apiVersions:
          - v1alpha3
        operations:
          - CREATE
          - UPDATE
        resources:
          - awsclusterroleidentities
    sideEffects: None
  - clientConfig:
      caBundle: Cg==
      service:
        name: capa-webhook-service
        namespace: capi-webhook-system
        path: /validate-infrastructure-cluster-x-k8s-io-v1alpha3-awsmachine
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: validation.awsmachine.infrastructure.cluster.x-k8s.io
    rules:
      - apiGroups:
          - infrastructure.cluster.x-k8s.io
        apiVersions:
          - v1alpha3
        operations:
          - CREATE
          - UPDATE
        resources:
          - awsmachines
    sideEffects: None
  - clientConfig:
      caBundle: Cg==
      service:
        name: capa-webhook-service
        namespace: capi-webhook-system
        path: /validate-infrastructure-cluster-x-k8s-io-v1alpha3-awsmachinetemplate
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: validation.awsmachinetemplate.infrastructure.x-k8s.io
    rules:
      - apiGroups:
          - infrastructure.cluster.x-k8s.io
        apiVersions:
          - v1alpha3
        operations:
          - CREATE
          - UPDATE
        resources:
          - awsmachinetemplates
    sideEffects: None
  - clientConfig:
      caBundle: Cg==
      service:
        name: capa-webhook-service
        namespace: capi-webhook-system
        path: /validate-infrastructure-cluster-x-k8s-io-v1alpha3-awsfargateprofile
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: validation.awsfargateprofile.infrastructure.cluster.x-k8s.io
    rules:
      - apiGroups:
          - infrastructure.cluster.x-k8s.io
        apiVersions:
          - v1alpha3
        operations:
          - CREATE
          - UPDATE
        resources:
          - fargateprofiles
    sideEffects: None
  - clientConfig:
      caBundle: Cg==
      service:
        name: capa-webhook-service
        namespace: capi-webhook-system
        path: /validate-infrastructure-cluster-x-k8s-io-v1alpha3-awsmachinepool
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: validation.awsmachinepool.infrastructure.cluster.x-k8s.io
    rules:
      - apiGroups:
          - infrastructure.cluster.x-k8s.io
        apiVersions:
          - v1alpha3
        operations:
          - CREATE
          - UPDATE
        resources:
          - awsmachinepools
    sideEffects: None
  - clientConfig:
      caBundle: Cg==
      service:
        name: capa-webhook-service
        namespace: capi-webhook-system
        path: /validate-infrastructure-cluster-x-k8s-io-v1alpha3-awsmanagedmachinepool
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: validation.awsmanagedmachinepool.infrastructure.cluster.x-k8s.io
    rules:
      - apiGroups:
          - infrastructure.cluster.x-k8s.io
        apiVersions:
          - v1alpha3
        operations:
          - CREATE
          - UPDATE
        resources:
          - awsmanagedmachinepools
    sideEffects: None
