#@ load("@ytt:data", "data")

#@ if data.values.metadata.infraProvider == "vsphere":
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tkr-vsphere-resolver-package-sa
  namespace: #@ data.values.tkrSourceControllerPackage.namespaceForPackageInstallation
  annotations:
    kapp.k14s.io/change-group: "tkr-vsphere-resolver-packageinstall/serviceaccount-0"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tkr-vsphere-resolver-package-role
  annotations:
    kapp.k14s.io/change-group: "tkr-vsphere-resolver-packageinstall/serviceaccount-0"
rules:
  #  RBAC rules to create PackageInstall CR and service accounts
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tkr-vsphere-resolver-package-cluster-rolebinding
  annotations:
    kapp.k14s.io/change-group: "tkr-vsphere-resolver-packageinstall/serviceaccount"
    kapp.k14s.io/change-rule.0: "upsert after upserting tkr-vsphere-resolver-packageinstall/serviceaccount-0"
    kapp.k14s.io/change-rule.1: "delete before deleting tkr-vsphere-resolver-packageinstall/serviceaccount-0"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tkr-vsphere-resolver-package-role
subjects:
  - kind: ServiceAccount
    name: tkr-vsphere-resolver-package-sa
    namespace: #@ data.values.tkrSourceControllerPackage.namespaceForPackageInstallation

#@ end
