#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:template", "template")
#@ load("/upstream/webhook-manifests.lib.yaml", "webhook_manifests")

#@ antreaconfigscrd = overlay.subset({"kind": "CustomResourceDefinition", "metadata": {"name": "antreaconfigs.cni.tanzu.vmware.com"}})
#@ calicoconfigscrd = overlay.subset({"kind": "CustomResourceDefinition", "metadata": {"name": "calicoconfigs.cni.tanzu.vmware.com"}})
#@ clusterbootstrapscrd = overlay.subset({"kind": "CustomResourceDefinition", "metadata": {"name": "clusterbootstraps.run.tanzu.vmware.com"}})
#@ clusterbootstraptemplatescrd = overlay.subset({"kind": "CustomResourceDefinition", "metadata": {"name": "clusterbootstraptemplates.run.tanzu.vmware.com"}})
#@ kappcontrollerconfigscrd = overlay.subset({"kind": "CustomResourceDefinition", "metadata": {"name": "kappcontrollerconfigs.run.tanzu.vmware.com"}})
#@ vspherecpiconfigscrd = overlay.subset({"kind": "CustomResourceDefinition", "metadata": {"name": "vspherecpiconfigs.cpi.tanzu.vmware.com"}})
#@ vspherecsiconfigscrd = overlay.subset({"kind": "CustomResourceDefinition", "metadata": {"name": "vspherecsiconfigs.csi.tanzu.vmware.com"}})

#@ if data.values.tanzuAddonsManager.featureGates.clusterBootstrapController:
--- #@ template.replace(webhook_manifests())
#@ end

#@overlay/match by=overlay.or_op(antreaconfigscrd, calicoconfigscrd, clusterbootstrapscrd, clusterbootstraptemplatescrd, kappcontrollerconfigscrd, vspherecpiconfigscrd, vspherecsiconfigscrd), expects=7
#@ if/end not data.values.tanzuAddonsManager.featureGates.clusterBootstrapController:
#@overlay/remove

