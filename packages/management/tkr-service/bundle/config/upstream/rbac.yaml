apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: tkr-resolver-cluster-webhook
  name: tkr-service-manager-sa
  namespace: tkr-system
  annotations:
    kapp.k14s.io/change-group: "v1/sa-tkr-service-manager"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tkr-service-manager-role
  annotations:
    kapp.k14s.io/change-group: "v1/sa-tkr-service-manager"
rules:
- apiGroups:
  - run.tanzu.vmware.com
  resources:
  - tanzukubernetesreleases
  - osimages
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - run.tanzu.vmware.com
  resources:
  - tanzukubernetesreleases/status
  - osimages/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/status
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusterclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tkr-service-manager-clusterrolebinding
  annotations:
    kapp.k14s.io/change-rule: "upsert after upserting v1/sa-tkr-service-manager"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tkr-service-manager-role
subjects:
- kind: ServiceAccount
  name: tkr-service-manager-sa
  namespace: tkr-system
