#@ load("@ytt:data", "data")

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: tanzu-featuregates-manager
  name: tanzu-featuregates-controller-manager
  namespace: #@ data.values.namespace
  annotations:
    kapp.k14s.io/change-rule.0: "upsert after upserting featuregates.config.tanzu.vmware.com/certificate"
    kapp.k14s.io/change-rule.1: "delete before deleting featuregates.config.tanzu.vmware.com/certificate"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tanzu-featuregates-manager
  template:
    metadata:
      labels:
        app: tanzu-featuregates-manager
    spec:
      containers:
        - image: featuregates-controller-manager:latest
          imagePullPolicy: IfNotPresent
          name: manager
          resources:
            limits:
              cpu: 100m
              memory: 30Mi
            requests:
              cpu: 100m
              memory: 20Mi
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: tanzu-featuregates-webhook-server-cert
      serviceAccount: tanzu-featuregates-manager-sa
      terminationGracePeriodSeconds: 10
      #@ if hasattr(data.values, 'deployment') and hasattr(data.values.deployment, 'hostNetwork') and data.values.deployment.hostNetwork:
      #@overlay/match missing_ok=True
      hostNetwork: true
      #@ end
      #@ if hasattr(data.values, 'deployment') and hasattr(data.values.deployment, 'tolerations') and data.values.deployment.tolerations:
      #@overlay/match missing_ok=True
      tolerations: #@ data.values.deployment.tolerations
      #@ else:
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      #@ end
      #@ if hasattr(data.values, 'deployment') and hasattr(data.values.deployment, 'nodeSelector') and data.values.deployment.nodeSelector:
      #@overlay/match missing_ok=True
      nodeSelector: #@ data.values.deployment.nodeSelector
      #@ end
