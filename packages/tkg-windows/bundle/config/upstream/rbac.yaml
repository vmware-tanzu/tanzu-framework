#@ load("@ytt:data", "data")

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: #@ data.values.namespace
  name: node:antrea-read-secrets
rules:
- apiGroups: [""]
  resources: ["serviceaccounts"]
  resourceNames: ["antrea-agent"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["list","get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: node:read-antrea-sa
  namespace: #@ data.values.namespace
subjects:
- kind: Group
  name: system:nodes
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: node:antrea-read-secrets
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: node:kube-proxy
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - list
  - watch
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: node:kube-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: node:kube-proxy
subjects:
- kind: Group
  name: system:nodes
  apiGroup: rbac.authorization.k8s.io
- kind: ServiceAccount
  name: kube-proxy-windows
  namespace: #@ data.values.namespace
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: kube-proxy
  name: kube-proxy-windows
  namespace: #@ data.values.namespace
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: kube-proxy-windows
  name: kube-proxy-windows-token
  namespace: #@ data.values.namespace
type: kubernetes.io/service-account-token
---
