---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: readinessproviders.core.tanzu.vmware.com
spec:
  group: core.tanzu.vmware.com
  names:
    kind: ReadinessProvider
    listKind: ReadinessProviderList
    plural: readinessproviders
    singular: readinessprovider
  scope: Cluster
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: ReadinessProvider is the Schema for the readinessproviders API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ReadinessProviderSpec defines the desired state of ReadinessProvider
            properties:
              checkRef:
                description: CheckRef is the name of the check that the current provider
                  satisfies
                type: string
              conditions:
                description: Conditions is the set of checks that must be evaluated
                  to true to mark the provider as ready
                items:
                  properties:
                    name:
                      description: Name is the name of the condition
                      type: string
                    resourceExistenceCondition:
                      description: ResourceExistenceCondition is the condition that
                        checks for the presence of a certain resource in the cluster
                      properties:
                        apiVersion:
                          description: APIVersion is the API version of the resource
                            that is being checked
                          type: string
                        kind:
                          description: Kind is the API kind of the resource that is
                            being checked
                          type: string
                        name:
                          type: string
                        namespace:
                          description: Namespace is the namespace of the resource
                            that is being checked; if the Namespace is nil, the resource
                            is assumed to be cluster scoped. Empty string for the
                            namespace will throw error
                          type: string
                      required:
                      - apiVersion
                      - kind
                      - name
                      type: object
                  required:
                  - name
                  - resourceExistenceCondition
                  type: object
                type: array
              repeatInterval:
                description: 'RepeatInterval is the re-evaluation interval; if RepeatInterval
                  is not provided or nil, the provider will be evaluated only once
                  and the evaluation will not be repeated. A valid value specifies
                  a duration string, such as "1.5h", "1h10m" or "200s". Refer: https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1#Duration'
                type: string
            required:
            - checkRef
            - conditions
            type: object
          status:
            description: ReadinessProviderStatus defines the observed state of ReadinessProvider
            properties:
              conditions:
                description: Conditions is the set of ReadinessConditions that are
                  being evaluated
                items:
                  properties:
                    message:
                      description: Message is the field that provides information
                        about the condition evaluation
                      type: string
                    name:
                      description: Name is the name of the readiness condition
                      type: string
                    state:
                      description: State is the computed state of the condition
                      enum:
                      - success
                      - failure
                      - inprogress
                      type: string
                  required:
                  - message
                  - name
                  - state
                  type: object
                type: array
              state:
                description: State is the computed state of the provider. The state
                  will be success if all the coditions pass; The state will be failure
                  if any of the conditions fail. Otherwise, the state will be in-progress
                enum:
                - success
                - failure
                - inprogress
                type: string
            required:
            - conditions
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
