apiVersion: v1
kind: Namespace
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    control-plane: controller-manager
  name: cluster-api-provider-oci-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cluster-api-provider-oci-system/capoci-serving-cert
    controller-gen.kubebuilder.io/version: v0.7.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    cluster.x-k8s.io/v1beta1: v1beta1
  name: ociclusters.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: capoci-webhook-service
          namespace: cluster-api-provider-oci-system
          path: /convert
      conversionReviewVersions:
        - v1
        - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: OCICluster
    listKind: OCIClusterList
    plural: ociclusters
    singular: ocicluster
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: OCICluster is the Schema for the ociclusters API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: OCIClusterSpec defines the desired state of OciCluster
              properties:
                compartmentId:
                  description: Compartment to create the cluster network.
                  type: string
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to
                    communicate with the control plane.
                  properties:
                    host:
                      description: The hostname on which the API server is serving.
                      type: string
                    port:
                      description: The port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                    - host
                    - port
                  type: object
                definedTags:
                  additionalProperties:
                    additionalProperties:
                      type: string
                    type: object
                  description: 'Defined tags for this resource. Each key is predefined
                  and scoped to a namespace. For more information, see Resource Tags
                  (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
                  Example: `{"Operations": {"CostCenter": "42"}}`'
                  type: object
                freeformTags:
                  additionalProperties:
                    type: string
                  description: Free-form tags for this resource.
                  type: object
                networkSpec:
                  description: NetworkSpec encapsulates all things related to OCI network.
                  properties:
                    apiServerLoadBalancer:
                      description: API Server LB configuration.
                      properties:
                        loadBalancerId:
                          description: ID of Load Balancer.
                          type: string
                        name:
                          description: LoadBalancer Name.
                          type: string
                      type: object
                    skipNetworkManagement:
                      description: SkipNetworkManagement defines if the networking spec(VCN
                        related) specified by the user needs to be reconciled(actioned-upon)
                        or used as it is. APIServerLB will still be reconciled.
                      type: boolean
                    vcn:
                      description: VCN configuration.
                      properties:
                        cidr:
                          description: VCN CIDR.
                          type: string
                        id:
                          description: VCN OCID.
                          type: string
                        internetGatewayId:
                          description: ID of Internet Gateway.
                          type: string
                        name:
                          description: VCN Name.
                          type: string
                        natGatewayId:
                          description: ID of Nat Gateway.
                          type: string
                        networkSecurityGroups:
                          description: NetworkSecurityGroups is the configuration for
                            the Network Security Groups required in the VCN.
                          items:
                            description: NSG defines configuration for a Network Security
                              Group. https://docs.oracle.com/en-us/iaas/Content/Network/Concepts/networksecuritygroups.htm
                            properties:
                              egressRules:
                                description: EgressRules on the NSG.
                                items:
                                  description: EgressSecurityRuleForNSG is EgressSecurityRule
                                    for NSG.
                                  properties:
                                    egressRule:
                                      description: EgressSecurityRule A rule for allowing
                                        outbound IP packets.
                                      properties:
                                        description:
                                          description: An optional description of your
                                            choice for the rule.
                                          type: string
                                        destination:
                                          description: 'Conceptually, this is the range
                                          of IP addresses that a packet originating
                                          from the instance can go to. Allowed values:   *
                                          IP address range in CIDR notation. For example:
                                          `192.168.1.0/24` or `2001:0db8:0123:45::/56`     Note
                                          that IPv6 addressing is currently supported
                                          only in certain regions. See     IPv6 Addresses
                                          (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).   *
                                          The `cidrBlock` value for a Service, if
                                          you''re     setting up a security list rule
                                          for traffic destined for a particular `Service`
                                          through     a service gateway. For example:
                                          `oci-phx-objectstorage`.'
                                          type: string
                                        destinationType:
                                          description: 'Type of destination for the
                                          rule. The default is `CIDR_BLOCK`. Allowed
                                          values:   * `CIDR_BLOCK`: If the rule''s
                                          `destination` is an IP address range in
                                          CIDR notation.   * `SERVICE_CIDR_BLOCK`:
                                          If the rule''s `destination` is the `cidrBlock`
                                          value for a     Service (the rule is for
                                          traffic destined for a     particular `Service`
                                          through a service gateway).'
                                          type: string
                                        icmpOptions:
                                          description: 'IcmpOptions Optional and valid
                                          only for ICMP and ICMPv6. Use to specify
                                          a particular ICMP type and code as defined
                                          in: - ICMP Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                          - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                          If you specify ICMP or ICMPv6 as the protocol
                                          but omit this object, then all ICMP types
                                          and codes are allowed. If you do provide
                                          this object, the type is required and the
                                          code is optional. To enable MTU negotiation
                                          for ingress internet traffic via IPv4, make
                                          sure to allow type 3 ("Destination Unreachable")
                                          code 4 ("Fragmentation Needed and Don''t
                                          Fragment was Set"). If you need to specify
                                          multiple codes for a single type, create
                                          a separate security list rule for each.'
                                          properties:
                                            code:
                                              description: The ICMP code (optional).
                                              type: integer
                                            type:
                                              description: The ICMP type.
                                              type: integer
                                          type: object
                                        isStateless:
                                          description: A stateless rule allows traffic
                                            in one direction. Remember to add a corresponding
                                            stateless rule in the other direction if
                                            you need to support bidirectional traffic.
                                            For example, if egress traffic allows TCP
                                            destination port 80, there should be an
                                            ingress rule to allow TCP source port 80.
                                            Defaults to false, which means the rule
                                            is stateful and a corresponding rule is
                                            not necessary for bidirectional traffic.
                                          type: boolean
                                        protocol:
                                          description: The transport protocol. Specify
                                            either `all` or an IPv4 protocol number
                                            as defined in Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                            Options are supported only for ICMP ("1"),
                                            TCP ("6"), UDP ("17"), and ICMPv6 ("58").
                                          type: string
                                        tcpOptions:
                                          description: TcpOptions Optional and valid
                                            only for TCP. Use to specify particular
                                            destination ports for TCP rules. If you
                                            specify TCP as the protocol but omit this
                                            object, then all destination ports are allowed.
                                          properties:
                                            destinationPortRange:
                                              description: PortRange The representation
                                                of PortRange.
                                              properties:
                                                max:
                                                  description: The maximum port number,
                                                    which must not be less than the
                                                    minimum port number. To specify
                                                    a single port number, set both the
                                                    min and max to the same value.
                                                  type: integer
                                                min:
                                                  description: The minimum port number,
                                                    which must not be greater than the
                                                    maximum port number.
                                                  type: integer
                                              type: object
                                            sourcePortRange:
                                              description: PortRange The representation
                                                of PortRange.
                                              properties:
                                                max:
                                                  description: The maximum port number,
                                                    which must not be less than the
                                                    minimum port number. To specify
                                                    a single port number, set both the
                                                    min and max to the same value.
                                                  type: integer
                                                min:
                                                  description: The minimum port number,
                                                    which must not be greater than the
                                                    maximum port number.
                                                  type: integer
                                              type: object
                                          type: object
                                        udpOptions:
                                          description: UdpOptions Optional and valid
                                            only for UDP. Use to specify particular
                                            destination ports for UDP rules. If you
                                            specify UDP as the protocol but omit this
                                            object, then all destination ports are allowed.
                                          properties:
                                            destinationPortRange:
                                              description: PortRange The representation
                                                of PortRange.
                                              properties:
                                                max:
                                                  description: The maximum port number,
                                                    which must not be less than the
                                                    minimum port number. To specify
                                                    a single port number, set both the
                                                    min and max to the same value.
                                                  type: integer
                                                min:
                                                  description: The minimum port number,
                                                    which must not be greater than the
                                                    maximum port number.
                                                  type: integer
                                              type: object
                                            sourcePortRange:
                                              description: PortRange The representation
                                                of PortRange.
                                              properties:
                                                max:
                                                  description: The maximum port number,
                                                    which must not be less than the
                                                    minimum port number. To specify
                                                    a single port number, set both the
                                                    min and max to the same value.
                                                  type: integer
                                                min:
                                                  description: The minimum port number,
                                                    which must not be greater than the
                                                    maximum port number.
                                                  type: integer
                                              type: object
                                          type: object
                                      type: object
                                    id:
                                      description: 'EgressSecurityRule ID for NSG. Deprecated:
                                      this field is not populated and used during
                                      reconciliation'
                                      type: string
                                  type: object
                                type: array
                              id:
                                description: NSG OCID.
                                type: string
                              ingressRules:
                                description: IngressRules on the NSG.
                                items:
                                  description: IngressSecurityRuleForNSG is IngressSecurityRule
                                    for NSG
                                  properties:
                                    id:
                                      description: 'IngressSecurityRule ID for NSG.
                                      Deprecated: this field is not populated and
                                      used during reconciliation'
                                      type: string
                                    ingressRule:
                                      description: IngressSecurityRule A rule for allowing
                                        inbound IP packets.
                                      properties:
                                        description:
                                          description: An optional description of your
                                            choice for the rule.
                                          type: string
                                        icmpOptions:
                                          description: 'IcmpOptions Optional and valid
                                          only for ICMP and ICMPv6. Use to specify
                                          a particular ICMP type and code as defined
                                          in: - ICMP Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                          - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                          If you specify ICMP or ICMPv6 as the protocol
                                          but omit this object, then all ICMP types
                                          and codes are allowed. If you do provide
                                          this object, the type is required and the
                                          code is optional. To enable MTU negotiation
                                          for ingress internet traffic via IPv4, make
                                          sure to allow type 3 ("Destination Unreachable")
                                          code 4 ("Fragmentation Needed and Don''t
                                          Fragment was Set"). If you need to specify
                                          multiple codes for a single type, create
                                          a separate security list rule for each.'
                                          properties:
                                            code:
                                              description: The ICMP code (optional).
                                              type: integer
                                            type:
                                              description: The ICMP type.
                                              type: integer
                                          type: object
                                        isStateless:
                                          description: A stateless rule allows traffic
                                            in one direction. Remember to add a corresponding
                                            stateless rule in the other direction if
                                            you need to support bidirectional traffic.
                                            For example, if ingress traffic allows TCP
                                            destination port 80, there should be an
                                            egress rule to allow TCP source port 80.
                                            Defaults to false, which means the rule
                                            is stateful and a corresponding rule is
                                            not necessary for bidirectional traffic.
                                          type: boolean
                                        protocol:
                                          description: The transport protocol. Specify
                                            either `all` or an IPv4 protocol number
                                            as defined in Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                            Options are supported only for ICMP ("1"),
                                            TCP ("6"), UDP ("17"), and ICMPv6 ("58").
                                          type: string
                                        source:
                                          description: 'Conceptually, this is the range
                                          of IP addresses that a packet coming into
                                          the instance can come from. Allowed values:   *
                                          IP address range in CIDR notation. For example:
                                          `192.168.1.0/24` or `2001:0db8:0123:45::/56`.     IPv6
                                          addressing is supported for all commercial
                                          and government regions. See     IPv6 Addresses
                                          (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).   *
                                          The `cidrBlock` value for a Service, if
                                          you''re     setting up a security list rule
                                          for traffic coming from a particular `Service`
                                          through     a service gateway. For example:
                                          `oci-phx-objectstorage`.'
                                          type: string
                                        sourceType:
                                          description: 'Type of source for the rule.
                                          The default is `CIDR_BLOCK`.   * `CIDR_BLOCK`:
                                          If the rule''s `source` is an IP address
                                          range in CIDR notation.   * `SERVICE_CIDR_BLOCK`:
                                          If the rule''s `source` is the `cidrBlock`
                                          value for a     Service (the rule is for
                                          traffic coming from a     particular `Service`
                                          through a service gateway).'
                                          type: string
                                        tcpOptions:
                                          description: TcpOptions Optional and valid
                                            only for TCP. Use to specify particular
                                            destination ports for TCP rules. If you
                                            specify TCP as the protocol but omit this
                                            object, then all destination ports are allowed.
                                          properties:
                                            destinationPortRange:
                                              description: PortRange The representation
                                                of PortRange.
                                              properties:
                                                max:
                                                  description: The maximum port number,
                                                    which must not be less than the
                                                    minimum port number. To specify
                                                    a single port number, set both the
                                                    min and max to the same value.
                                                  type: integer
                                                min:
                                                  description: The minimum port number,
                                                    which must not be greater than the
                                                    maximum port number.
                                                  type: integer
                                              type: object
                                            sourcePortRange:
                                              description: PortRange The representation
                                                of PortRange.
                                              properties:
                                                max:
                                                  description: The maximum port number,
                                                    which must not be less than the
                                                    minimum port number. To specify
                                                    a single port number, set both the
                                                    min and max to the same value.
                                                  type: integer
                                                min:
                                                  description: The minimum port number,
                                                    which must not be greater than the
                                                    maximum port number.
                                                  type: integer
                                              type: object
                                          type: object
                                        udpOptions:
                                          description: UdpOptions Optional and valid
                                            only for UDP. Use to specify particular
                                            destination ports for UDP rules. If you
                                            specify UDP as the protocol but omit this
                                            object, then all destination ports are allowed.
                                          properties:
                                            destinationPortRange:
                                              description: PortRange The representation
                                                of PortRange.
                                              properties:
                                                max:
                                                  description: The maximum port number,
                                                    which must not be less than the
                                                    minimum port number. To specify
                                                    a single port number, set both the
                                                    min and max to the same value.
                                                  type: integer
                                                min:
                                                  description: The minimum port number,
                                                    which must not be greater than the
                                                    maximum port number.
                                                  type: integer
                                              type: object
                                            sourcePortRange:
                                              description: PortRange The representation
                                                of PortRange.
                                              properties:
                                                max:
                                                  description: The maximum port number,
                                                    which must not be less than the
                                                    minimum port number. To specify
                                                    a single port number, set both the
                                                    min and max to the same value.
                                                  type: integer
                                                min:
                                                  description: The minimum port number,
                                                    which must not be greater than the
                                                    maximum port number.
                                                  type: integer
                                              type: object
                                          type: object
                                      type: object
                                  type: object
                                type: array
                              name:
                                description: NSG Name.
                                type: string
                              role:
                                description: Role defines the NSG role (eg. control-plane,
                                  control-plane-endpoint, service-lb, worker).
                                type: string
                            required:
                              - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        privateRouteTableId:
                          description: ID of Private Route Table.
                          type: string
                        publicRouteTableId:
                          description: ID of Public Route Table.
                          type: string
                        serviceGatewayId:
                          description: ID of Service Gateway.
                          type: string
                        subnets:
                          description: Subnets is the configuration for subnets required
                            in the VCN.
                          items:
                            description: Subnet defines the configuration for a network's
                              subnet https://docs.oracle.com/en-us/iaas/Content/Network/Tasks/managingVCNs_topic-Overview_of_VCNs_and_Subnets.htm#Overview
                            properties:
                              cidr:
                                description: Subnet CIDR.
                                type: string
                              id:
                                description: Subnet OCID.
                                type: string
                              name:
                                description: Subnet Name.
                                type: string
                              role:
                                description: Role defines the subnet role (eg. control-plane,
                                  control-plane-endpoint, service-lb, worker).
                                type: string
                              securityList:
                                description: The security list associated with Subnet.
                                properties:
                                  egressRules:
                                    description: EgressRules on the SecurityList.
                                    items:
                                      description: EgressSecurityRule A rule for allowing
                                        outbound IP packets.
                                      properties:
                                        description:
                                          description: An optional description of your
                                            choice for the rule.
                                          type: string
                                        destination:
                                          description: 'Conceptually, this is the range
                                          of IP addresses that a packet originating
                                          from the instance can go to. Allowed values:   *
                                          IP address range in CIDR notation. For example:
                                          `192.168.1.0/24` or `2001:0db8:0123:45::/56`     Note
                                          that IPv6 addressing is currently supported
                                          only in certain regions. See     IPv6 Addresses
                                          (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).   *
                                          The `cidrBlock` value for a Service, if
                                          you''re     setting up a security list rule
                                          for traffic destined for a particular `Service`
                                          through     a service gateway. For example:
                                          `oci-phx-objectstorage`.'
                                          type: string
                                        destinationType:
                                          description: 'Type of destination for the
                                          rule. The default is `CIDR_BLOCK`. Allowed
                                          values:   * `CIDR_BLOCK`: If the rule''s
                                          `destination` is an IP address range in
                                          CIDR notation.   * `SERVICE_CIDR_BLOCK`:
                                          If the rule''s `destination` is the `cidrBlock`
                                          value for a     Service (the rule is for
                                          traffic destined for a     particular `Service`
                                          through a service gateway).'
                                          type: string
                                        icmpOptions:
                                          description: 'IcmpOptions Optional and valid
                                          only for ICMP and ICMPv6. Use to specify
                                          a particular ICMP type and code as defined
                                          in: - ICMP Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                          - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                          If you specify ICMP or ICMPv6 as the protocol
                                          but omit this object, then all ICMP types
                                          and codes are allowed. If you do provide
                                          this object, the type is required and the
                                          code is optional. To enable MTU negotiation
                                          for ingress internet traffic via IPv4, make
                                          sure to allow type 3 ("Destination Unreachable")
                                          code 4 ("Fragmentation Needed and Don''t
                                          Fragment was Set"). If you need to specify
                                          multiple codes for a single type, create
                                          a separate security list rule for each.'
                                          properties:
                                            code:
                                              description: The ICMP code (optional).
                                              type: integer
                                            type:
                                              description: The ICMP type.
                                              type: integer
                                          type: object
                                        isStateless:
                                          description: A stateless rule allows traffic
                                            in one direction. Remember to add a corresponding
                                            stateless rule in the other direction if
                                            you need to support bidirectional traffic.
                                            For example, if egress traffic allows TCP
                                            destination port 80, there should be an
                                            ingress rule to allow TCP source port 80.
                                            Defaults to false, which means the rule
                                            is stateful and a corresponding rule is
                                            not necessary for bidirectional traffic.
                                          type: boolean
                                        protocol:
                                          description: The transport protocol. Specify
                                            either `all` or an IPv4 protocol number
                                            as defined in Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                            Options are supported only for ICMP ("1"),
                                            TCP ("6"), UDP ("17"), and ICMPv6 ("58").
                                          type: string
                                        tcpOptions:
                                          description: TcpOptions Optional and valid
                                            only for TCP. Use to specify particular
                                            destination ports for TCP rules. If you
                                            specify TCP as the protocol but omit this
                                            object, then all destination ports are allowed.
                                          properties:
                                            destinationPortRange:
                                              description: PortRange The representation
                                                of PortRange.
                                              properties:
                                                max:
                                                  description: The maximum port number,
                                                    which must not be less than the
                                                    minimum port number. To specify
                                                    a single port number, set both the
                                                    min and max to the same value.
                                                  type: integer
                                                min:
                                                  description: The minimum port number,
                                                    which must not be greater than the
                                                    maximum port number.
                                                  type: integer
                                              type: object
                                            sourcePortRange:
                                              description: PortRange The representation
                                                of PortRange.
                                              properties:
                                                max:
                                                  description: The maximum port number,
                                                    which must not be less than the
                                                    minimum port number. To specify
                                                    a single port number, set both the
                                                    min and max to the same value.
                                                  type: integer
                                                min:
                                                  description: The minimum port number,
                                                    which must not be greater than the
                                                    maximum port number.
                                                  type: integer
                                              type: object
                                          type: object
                                        udpOptions:
                                          description: UdpOptions Optional and valid
                                            only for UDP. Use to specify particular
                                            destination ports for UDP rules. If you
                                            specify UDP as the protocol but omit this
                                            object, then all destination ports are allowed.
                                          properties:
                                            destinationPortRange:
                                              description: PortRange The representation
                                                of PortRange.
                                              properties:
                                                max:
                                                  description: The maximum port number,
                                                    which must not be less than the
                                                    minimum port number. To specify
                                                    a single port number, set both the
                                                    min and max to the same value.
                                                  type: integer
                                                min:
                                                  description: The minimum port number,
                                                    which must not be greater than the
                                                    maximum port number.
                                                  type: integer
                                              type: object
                                            sourcePortRange:
                                              description: PortRange The representation
                                                of PortRange.
                                              properties:
                                                max:
                                                  description: The maximum port number,
                                                    which must not be less than the
                                                    minimum port number. To specify
                                                    a single port number, set both the
                                                    min and max to the same value.
                                                  type: integer
                                                min:
                                                  description: The minimum port number,
                                                    which must not be greater than the
                                                    maximum port number.
                                                  type: integer
                                              type: object
                                          type: object
                                      type: object
                                    type: array
                                  id:
                                    description: ID of the SecurityList.
                                    type: string
                                  ingressRules:
                                    description: IngressRules on the SecurityList.
                                    items:
                                      description: IngressSecurityRule A rule for allowing
                                        inbound IP packets.
                                      properties:
                                        description:
                                          description: An optional description of your
                                            choice for the rule.
                                          type: string
                                        icmpOptions:
                                          description: 'IcmpOptions Optional and valid
                                          only for ICMP and ICMPv6. Use to specify
                                          a particular ICMP type and code as defined
                                          in: - ICMP Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                          - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                          If you specify ICMP or ICMPv6 as the protocol
                                          but omit this object, then all ICMP types
                                          and codes are allowed. If you do provide
                                          this object, the type is required and the
                                          code is optional. To enable MTU negotiation
                                          for ingress internet traffic via IPv4, make
                                          sure to allow type 3 ("Destination Unreachable")
                                          code 4 ("Fragmentation Needed and Don''t
                                          Fragment was Set"). If you need to specify
                                          multiple codes for a single type, create
                                          a separate security list rule for each.'
                                          properties:
                                            code:
                                              description: The ICMP code (optional).
                                              type: integer
                                            type:
                                              description: The ICMP type.
                                              type: integer
                                          type: object
                                        isStateless:
                                          description: A stateless rule allows traffic
                                            in one direction. Remember to add a corresponding
                                            stateless rule in the other direction if
                                            you need to support bidirectional traffic.
                                            For example, if ingress traffic allows TCP
                                            destination port 80, there should be an
                                            egress rule to allow TCP source port 80.
                                            Defaults to false, which means the rule
                                            is stateful and a corresponding rule is
                                            not necessary for bidirectional traffic.
                                          type: boolean
                                        protocol:
                                          description: The transport protocol. Specify
                                            either `all` or an IPv4 protocol number
                                            as defined in Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                            Options are supported only for ICMP ("1"),
                                            TCP ("6"), UDP ("17"), and ICMPv6 ("58").
                                          type: string
                                        source:
                                          description: 'Conceptually, this is the range
                                          of IP addresses that a packet coming into
                                          the instance can come from. Allowed values:   *
                                          IP address range in CIDR notation. For example:
                                          `192.168.1.0/24` or `2001:0db8:0123:45::/56`.     IPv6
                                          addressing is supported for all commercial
                                          and government regions. See     IPv6 Addresses
                                          (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).   *
                                          The `cidrBlock` value for a Service, if
                                          you''re     setting up a security list rule
                                          for traffic coming from a particular `Service`
                                          through     a service gateway. For example:
                                          `oci-phx-objectstorage`.'
                                          type: string
                                        sourceType:
                                          description: 'Type of source for the rule.
                                          The default is `CIDR_BLOCK`.   * `CIDR_BLOCK`:
                                          If the rule''s `source` is an IP address
                                          range in CIDR notation.   * `SERVICE_CIDR_BLOCK`:
                                          If the rule''s `source` is the `cidrBlock`
                                          value for a     Service (the rule is for
                                          traffic coming from a     particular `Service`
                                          through a service gateway).'
                                          type: string
                                        tcpOptions:
                                          description: TcpOptions Optional and valid
                                            only for TCP. Use to specify particular
                                            destination ports for TCP rules. If you
                                            specify TCP as the protocol but omit this
                                            object, then all destination ports are allowed.
                                          properties:
                                            destinationPortRange:
                                              description: PortRange The representation
                                                of PortRange.
                                              properties:
                                                max:
                                                  description: The maximum port number,
                                                    which must not be less than the
                                                    minimum port number. To specify
                                                    a single port number, set both the
                                                    min and max to the same value.
                                                  type: integer
                                                min:
                                                  description: The minimum port number,
                                                    which must not be greater than the
                                                    maximum port number.
                                                  type: integer
                                              type: object
                                            sourcePortRange:
                                              description: PortRange The representation
                                                of PortRange.
                                              properties:
                                                max:
                                                  description: The maximum port number,
                                                    which must not be less than the
                                                    minimum port number. To specify
                                                    a single port number, set both the
                                                    min and max to the same value.
                                                  type: integer
                                                min:
                                                  description: The minimum port number,
                                                    which must not be greater than the
                                                    maximum port number.
                                                  type: integer
                                              type: object
                                          type: object
                                        udpOptions:
                                          description: UdpOptions Optional and valid
                                            only for UDP. Use to specify particular
                                            destination ports for UDP rules. If you
                                            specify UDP as the protocol but omit this
                                            object, then all destination ports are allowed.
                                          properties:
                                            destinationPortRange:
                                              description: PortRange The representation
                                                of PortRange.
                                              properties:
                                                max:
                                                  description: The maximum port number,
                                                    which must not be less than the
                                                    minimum port number. To specify
                                                    a single port number, set both the
                                                    min and max to the same value.
                                                  type: integer
                                                min:
                                                  description: The minimum port number,
                                                    which must not be greater than the
                                                    maximum port number.
                                                  type: integer
                                              type: object
                                            sourcePortRange:
                                              description: PortRange The representation
                                                of PortRange.
                                              properties:
                                                max:
                                                  description: The maximum port number,
                                                    which must not be less than the
                                                    minimum port number. To specify
                                                    a single port number, set both the
                                                    min and max to the same value.
                                                  type: integer
                                                min:
                                                  description: The minimum port number,
                                                    which must not be greater than the
                                                    maximum port number.
                                                  type: integer
                                              type: object
                                          type: object
                                      type: object
                                    type: array
                                  name:
                                    description: SecurityList Name.
                                    type: string
                                type: object
                              type:
                                description: Type defines the subnet type (e.g. public,
                                  private).
                                type: string
                            required:
                              - name
                              - role
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                      type: object
                    vcnPeering:
                      description: VCNPeering configuration.
                      properties:
                        drg:
                          description: DRG configuration refers to the DRG which has
                            to be created if required. If management cluster and workload
                            cluster shares the same DRG, this fields is not required
                            to be specified.
                          properties:
                            id:
                              description: ID is the OCID for the created DRG.
                              type: string
                            manage:
                              description: Manage defines whether the DRG has to be
                                managed(including create). If set to false(the default)
                                the ID has to be specified by the user to a valid DRG
                                ID to which the VCN has to be attached.
                              type: boolean
                            name:
                              description: Name is the name of the created DRG.
                              type: string
                            vcnAttachmentId:
                              description: VcnAttachmentId is the ID of the VCN attachment
                                of the DRG. The workload cluster VCN can be attached
                                to either the management cluster VCN if they are sharing
                                the same DRG or to the workload cluster DRG.
                              type: string
                          type: object
                        peerRouteRules:
                          description: PeerRouteRules defines the routing rules which
                            will be added to the private route tables of the workload
                            cluster VCN. The routes defined here will be directed to
                            DRG.
                          items:
                            description: PeerRouteRule defines a Route Rule to be routed
                              via a DRG.
                            properties:
                              vcnCIDRRange:
                                description: VCNCIDRRange is the CIDR Range of peer
                                  VCN to which the workload cluster VCN will be peered.
                                  The CIDR range is required to add the route rule in
                                  the workload cluster VCN, the route rule will forward
                                  any traffic to the CIDR to the DRG.
                                type: string
                            type: object
                          type: array
                        remotePeeringConnections:
                          description: RemotePeeringConnections defines the RPC connections
                            which be established with the workload cluster DRG.
                          items:
                            description: RemotePeeringConnection is used to peer VCNs
                              residing in different regions(typically). Remote VCN Peering
                              is explained here - https://docs.oracle.com/en-us/iaas/Content/Network/Tasks/remoteVCNpeering.htm
                            properties:
                              managePeerRPC:
                                description: ManagePeerRPC will define if the Peer VCN
                                  needs to be managed. If set to true a Remote Peering
                                  Connection will be created in the Peer DRG and the
                                  connection will be created between local and peer
                                  RPC.
                                type: boolean
                              peerDRGId:
                                description: PeerDRGId defines the DRG ID of the peer.
                                type: string
                              peerRPCConnectionId:
                                description: PeerRPCConnectionId defines the RPC ID
                                  of peer. If ManagePeerRPC is set to true this will
                                  be created by Cluster API Provider for OCI, otherwise
                                  this has be defined by the user.
                                type: string
                              peerRegionName:
                                description: PeerRegionName defined the region name
                                  of Peer VCN.
                                type: string
                              rpcConnectionId:
                                description: RPCConnectionId is the connection ID of
                                  the connection between peer and local RPC.
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
                ociResourceIdentifier:
                  description: The unique ID which will be used to tag all the resources
                    created by this Cluster. The tag will be used to identify resources
                    belonging to this cluster. this will be auto-generated and should
                    not be set by the user.
                  type: string
                region:
                  description: Region the cluster operates in. It must be one of available
                    regions in Region Identifier format. See https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
                  type: string
              type: object
            status:
              description: OCIClusterStatus defines the observed state of OCICluster
              properties:
                availabilityDomains:
                  additionalProperties:
                    description: OCIAvailabilityDomain contains information about an
                      Availability Domain (AD).
                    properties:
                      faultDomains:
                        description: 'FaultDomains a list of fault domain (FD) names.
                        Example: ["FAULT-DOMAIN-1"]'
                        items:
                          type: string
                        type: array
                      name:
                        description: 'Name is the AD''s full name. Example: Uocm:PHX-AD-1'
                        type: string
                    type: object
                  description: AvailabilityDomains encapsulates the clusters Availability
                    Domain (AD) information in a map where the map key is the AD name
                    and the struct is details about the AD.
                  type: object
                conditions:
                  description: NetworkSpec encapsulates all things related to OCI network.
                  items:
                    description: Condition defines an observation of a Cluster API resource
                      operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status
                          to another. This should be when the underlying condition changed.
                          If that is not known, then using the time when the API field
                          changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not this
                          field is considered a guaranteed API. This field may not be
                          empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification of
                          Reason code, so the users or machines can immediately understand
                          the current situation and act accordingly. The Severity field
                          MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important.
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureDomains:
                  additionalProperties:
                    description: FailureDomainSpec is the Schema for Cluster API failure
                      domains. It allows controllers to understand how many failure
                      domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: Attributes is a free form map of attributes an
                          infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: ControlPlane determines if this failure domain
                          is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: FailureDomains is a slice of FailureDomains.
                  type: object
                ready:
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    cluster.x-k8s.io/v1beta1: v1beta1
  name: ociclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: OCIClusterTemplate
    listKind: OCIClusterTemplateList
    plural: ociclustertemplates
    singular: ociclustertemplate
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: OCIClusterTemplate is the Schema for the ociclustertemplates
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: OCIClusterTemplateSpec defines the desired state of OCIClusterTemplate.
              properties:
                template:
                  description: OCIClusterTemplateResource describes the data needed
                    to create an OCICluster from a template.
                  properties:
                    spec:
                      description: OCIClusterSpec defines the desired state of OciCluster
                      properties:
                        compartmentId:
                          description: Compartment to create the cluster network.
                          type: string
                        controlPlaneEndpoint:
                          description: ControlPlaneEndpoint represents the endpoint
                            used to communicate with the control plane.
                          properties:
                            host:
                              description: The hostname on which the API server is serving.
                              type: string
                            port:
                              description: The port on which the API server is serving.
                              format: int32
                              type: integer
                          required:
                            - host
                            - port
                          type: object
                        definedTags:
                          additionalProperties:
                            additionalProperties:
                              type: string
                            type: object
                          description: 'Defined tags for this resource. Each key is
                          predefined and scoped to a namespace. For more information,
                          see Resource Tags (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
                          Example: `{"Operations": {"CostCenter": "42"}}`'
                          type: object
                        freeformTags:
                          additionalProperties:
                            type: string
                          description: Free-form tags for this resource.
                          type: object
                        networkSpec:
                          description: NetworkSpec encapsulates all things related to
                            OCI network.
                          properties:
                            apiServerLoadBalancer:
                              description: API Server LB configuration.
                              properties:
                                loadBalancerId:
                                  description: ID of Load Balancer.
                                  type: string
                                name:
                                  description: LoadBalancer Name.
                                  type: string
                              type: object
                            skipNetworkManagement:
                              description: SkipNetworkManagement defines if the networking
                                spec(VCN related) specified by the user needs to be
                                reconciled(actioned-upon) or used as it is. APIServerLB
                                will still be reconciled.
                              type: boolean
                            vcn:
                              description: VCN configuration.
                              properties:
                                cidr:
                                  description: VCN CIDR.
                                  type: string
                                id:
                                  description: VCN OCID.
                                  type: string
                                internetGatewayId:
                                  description: ID of Internet Gateway.
                                  type: string
                                name:
                                  description: VCN Name.
                                  type: string
                                natGatewayId:
                                  description: ID of Nat Gateway.
                                  type: string
                                networkSecurityGroups:
                                  description: NetworkSecurityGroups is the configuration
                                    for the Network Security Groups required in the
                                    VCN.
                                  items:
                                    description: NSG defines configuration for a Network
                                      Security Group. https://docs.oracle.com/en-us/iaas/Content/Network/Concepts/networksecuritygroups.htm
                                    properties:
                                      egressRules:
                                        description: EgressRules on the NSG.
                                        items:
                                          description: EgressSecurityRuleForNSG is EgressSecurityRule
                                            for NSG.
                                          properties:
                                            egressRule:
                                              description: EgressSecurityRule A rule
                                                for allowing outbound IP packets.
                                              properties:
                                                description:
                                                  description: An optional description
                                                    of your choice for the rule.
                                                  type: string
                                                destination:
                                                  description: 'Conceptually, this is
                                                  the range of IP addresses that a
                                                  packet originating from the instance
                                                  can go to. Allowed values:   * IP
                                                  address range in CIDR notation.
                                                  For example: `192.168.1.0/24` or
                                                  `2001:0db8:0123:45::/56`     Note
                                                  that IPv6 addressing is currently
                                                  supported only in certain regions.
                                                  See     IPv6 Addresses (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).   *
                                                  The `cidrBlock` value for a Service,
                                                  if you''re     setting up a security
                                                  list rule for traffic destined for
                                                  a particular `Service` through     a
                                                  service gateway. For example: `oci-phx-objectstorage`.'
                                                  type: string
                                                destinationType:
                                                  description: 'Type of destination
                                                  for the rule. The default is `CIDR_BLOCK`.
                                                  Allowed values:   * `CIDR_BLOCK`:
                                                  If the rule''s `destination` is
                                                  an IP address range in CIDR notation.   *
                                                  `SERVICE_CIDR_BLOCK`: If the rule''s
                                                  `destination` is the `cidrBlock`
                                                  value for a     Service (the rule
                                                  is for traffic destined for a     particular
                                                  `Service` through a service gateway).'
                                                  type: string
                                                icmpOptions:
                                                  description: 'IcmpOptions Optional
                                                  and valid only for ICMP and ICMPv6.
                                                  Use to specify a particular ICMP
                                                  type and code as defined in: - ICMP
                                                  Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                                  - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                                  If you specify ICMP or ICMPv6 as
                                                  the protocol but omit this object,
                                                  then all ICMP types and codes are
                                                  allowed. If you do provide this
                                                  object, the type is required and
                                                  the code is optional. To enable
                                                  MTU negotiation for ingress internet
                                                  traffic via IPv4, make sure to allow
                                                  type 3 ("Destination Unreachable")
                                                  code 4 ("Fragmentation Needed and
                                                  Don''t Fragment was Set"). If you
                                                  need to specify multiple codes for
                                                  a single type, create a separate
                                                  security list rule for each.'
                                                  properties:
                                                    code:
                                                      description: The ICMP code (optional).
                                                      type: integer
                                                    type:
                                                      description: The ICMP type.
                                                      type: integer
                                                  type: object
                                                isStateless:
                                                  description: A stateless rule allows
                                                    traffic in one direction. Remember
                                                    to add a corresponding stateless
                                                    rule in the other direction if you
                                                    need to support bidirectional traffic.
                                                    For example, if egress traffic allows
                                                    TCP destination port 80, there should
                                                    be an ingress rule to allow TCP
                                                    source port 80. Defaults to false,
                                                    which means the rule is stateful
                                                    and a corresponding rule is not
                                                    necessary for bidirectional traffic.
                                                  type: boolean
                                                protocol:
                                                  description: The transport protocol.
                                                    Specify either `all` or an IPv4
                                                    protocol number as defined in Protocol
                                                    Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                                    Options are supported only for ICMP
                                                    ("1"), TCP ("6"), UDP ("17"), and
                                                    ICMPv6 ("58").
                                                  type: string
                                                tcpOptions:
                                                  description: TcpOptions Optional and
                                                    valid only for TCP. Use to specify
                                                    particular destination ports for
                                                    TCP rules. If you specify TCP as
                                                    the protocol but omit this object,
                                                    then all destination ports are allowed.
                                                  properties:
                                                    destinationPortRange:
                                                      description: PortRange The representation
                                                        of PortRange.
                                                      properties:
                                                        max:
                                                          description: The maximum port
                                                            number, which must not be
                                                            less than the minimum port
                                                            number. To specify a single
                                                            port number, set both the
                                                            min and max to the same
                                                            value.
                                                          type: integer
                                                        min:
                                                          description: The minimum port
                                                            number, which must not be
                                                            greater than the maximum
                                                            port number.
                                                          type: integer
                                                      type: object
                                                    sourcePortRange:
                                                      description: PortRange The representation
                                                        of PortRange.
                                                      properties:
                                                        max:
                                                          description: The maximum port
                                                            number, which must not be
                                                            less than the minimum port
                                                            number. To specify a single
                                                            port number, set both the
                                                            min and max to the same
                                                            value.
                                                          type: integer
                                                        min:
                                                          description: The minimum port
                                                            number, which must not be
                                                            greater than the maximum
                                                            port number.
                                                          type: integer
                                                      type: object
                                                  type: object
                                                udpOptions:
                                                  description: UdpOptions Optional and
                                                    valid only for UDP. Use to specify
                                                    particular destination ports for
                                                    UDP rules. If you specify UDP as
                                                    the protocol but omit this object,
                                                    then all destination ports are allowed.
                                                  properties:
                                                    destinationPortRange:
                                                      description: PortRange The representation
                                                        of PortRange.
                                                      properties:
                                                        max:
                                                          description: The maximum port
                                                            number, which must not be
                                                            less than the minimum port
                                                            number. To specify a single
                                                            port number, set both the
                                                            min and max to the same
                                                            value.
                                                          type: integer
                                                        min:
                                                          description: The minimum port
                                                            number, which must not be
                                                            greater than the maximum
                                                            port number.
                                                          type: integer
                                                      type: object
                                                    sourcePortRange:
                                                      description: PortRange The representation
                                                        of PortRange.
                                                      properties:
                                                        max:
                                                          description: The maximum port
                                                            number, which must not be
                                                            less than the minimum port
                                                            number. To specify a single
                                                            port number, set both the
                                                            min and max to the same
                                                            value.
                                                          type: integer
                                                        min:
                                                          description: The minimum port
                                                            number, which must not be
                                                            greater than the maximum
                                                            port number.
                                                          type: integer
                                                      type: object
                                                  type: object
                                              type: object
                                            id:
                                              description: 'EgressSecurityRule ID for
                                              NSG. Deprecated: this field is not populated
                                              and used during reconciliation'
                                              type: string
                                          type: object
                                        type: array
                                      id:
                                        description: NSG OCID.
                                        type: string
                                      ingressRules:
                                        description: IngressRules on the NSG.
                                        items:
                                          description: IngressSecurityRuleForNSG is
                                            IngressSecurityRule for NSG
                                          properties:
                                            id:
                                              description: 'IngressSecurityRule ID for
                                              NSG. Deprecated: this field is not populated
                                              and used during reconciliation'
                                              type: string
                                            ingressRule:
                                              description: IngressSecurityRule A rule
                                                for allowing inbound IP packets.
                                              properties:
                                                description:
                                                  description: An optional description
                                                    of your choice for the rule.
                                                  type: string
                                                icmpOptions:
                                                  description: 'IcmpOptions Optional
                                                  and valid only for ICMP and ICMPv6.
                                                  Use to specify a particular ICMP
                                                  type and code as defined in: - ICMP
                                                  Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                                  - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                                  If you specify ICMP or ICMPv6 as
                                                  the protocol but omit this object,
                                                  then all ICMP types and codes are
                                                  allowed. If you do provide this
                                                  object, the type is required and
                                                  the code is optional. To enable
                                                  MTU negotiation for ingress internet
                                                  traffic via IPv4, make sure to allow
                                                  type 3 ("Destination Unreachable")
                                                  code 4 ("Fragmentation Needed and
                                                  Don''t Fragment was Set"). If you
                                                  need to specify multiple codes for
                                                  a single type, create a separate
                                                  security list rule for each.'
                                                  properties:
                                                    code:
                                                      description: The ICMP code (optional).
                                                      type: integer
                                                    type:
                                                      description: The ICMP type.
                                                      type: integer
                                                  type: object
                                                isStateless:
                                                  description: A stateless rule allows
                                                    traffic in one direction. Remember
                                                    to add a corresponding stateless
                                                    rule in the other direction if you
                                                    need to support bidirectional traffic.
                                                    For example, if ingress traffic
                                                    allows TCP destination port 80,
                                                    there should be an egress rule to
                                                    allow TCP source port 80. Defaults
                                                    to false, which means the rule is
                                                    stateful and a corresponding rule
                                                    is not necessary for bidirectional
                                                    traffic.
                                                  type: boolean
                                                protocol:
                                                  description: The transport protocol.
                                                    Specify either `all` or an IPv4
                                                    protocol number as defined in Protocol
                                                    Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                                    Options are supported only for ICMP
                                                    ("1"), TCP ("6"), UDP ("17"), and
                                                    ICMPv6 ("58").
                                                  type: string
                                                source:
                                                  description: 'Conceptually, this is
                                                  the range of IP addresses that a
                                                  packet coming into the instance
                                                  can come from. Allowed values:   *
                                                  IP address range in CIDR notation.
                                                  For example: `192.168.1.0/24` or
                                                  `2001:0db8:0123:45::/56`.     IPv6
                                                  addressing is supported for all
                                                  commercial and government regions.
                                                  See     IPv6 Addresses (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).   *
                                                  The `cidrBlock` value for a Service,
                                                  if you''re     setting up a security
                                                  list rule for traffic coming from
                                                  a particular `Service` through     a
                                                  service gateway. For example: `oci-phx-objectstorage`.'
                                                  type: string
                                                sourceType:
                                                  description: 'Type of source for the
                                                  rule. The default is `CIDR_BLOCK`.   *
                                                  `CIDR_BLOCK`: If the rule''s `source`
                                                  is an IP address range in CIDR notation.   *
                                                  `SERVICE_CIDR_BLOCK`: If the rule''s
                                                  `source` is the `cidrBlock` value
                                                  for a     Service (the rule is for
                                                  traffic coming from a     particular
                                                  `Service` through a service gateway).'
                                                  type: string
                                                tcpOptions:
                                                  description: TcpOptions Optional and
                                                    valid only for TCP. Use to specify
                                                    particular destination ports for
                                                    TCP rules. If you specify TCP as
                                                    the protocol but omit this object,
                                                    then all destination ports are allowed.
                                                  properties:
                                                    destinationPortRange:
                                                      description: PortRange The representation
                                                        of PortRange.
                                                      properties:
                                                        max:
                                                          description: The maximum port
                                                            number, which must not be
                                                            less than the minimum port
                                                            number. To specify a single
                                                            port number, set both the
                                                            min and max to the same
                                                            value.
                                                          type: integer
                                                        min:
                                                          description: The minimum port
                                                            number, which must not be
                                                            greater than the maximum
                                                            port number.
                                                          type: integer
                                                      type: object
                                                    sourcePortRange:
                                                      description: PortRange The representation
                                                        of PortRange.
                                                      properties:
                                                        max:
                                                          description: The maximum port
                                                            number, which must not be
                                                            less than the minimum port
                                                            number. To specify a single
                                                            port number, set both the
                                                            min and max to the same
                                                            value.
                                                          type: integer
                                                        min:
                                                          description: The minimum port
                                                            number, which must not be
                                                            greater than the maximum
                                                            port number.
                                                          type: integer
                                                      type: object
                                                  type: object
                                                udpOptions:
                                                  description: UdpOptions Optional and
                                                    valid only for UDP. Use to specify
                                                    particular destination ports for
                                                    UDP rules. If you specify UDP as
                                                    the protocol but omit this object,
                                                    then all destination ports are allowed.
                                                  properties:
                                                    destinationPortRange:
                                                      description: PortRange The representation
                                                        of PortRange.
                                                      properties:
                                                        max:
                                                          description: The maximum port
                                                            number, which must not be
                                                            less than the minimum port
                                                            number. To specify a single
                                                            port number, set both the
                                                            min and max to the same
                                                            value.
                                                          type: integer
                                                        min:
                                                          description: The minimum port
                                                            number, which must not be
                                                            greater than the maximum
                                                            port number.
                                                          type: integer
                                                      type: object
                                                    sourcePortRange:
                                                      description: PortRange The representation
                                                        of PortRange.
                                                      properties:
                                                        max:
                                                          description: The maximum port
                                                            number, which must not be
                                                            less than the minimum port
                                                            number. To specify a single
                                                            port number, set both the
                                                            min and max to the same
                                                            value.
                                                          type: integer
                                                        min:
                                                          description: The minimum port
                                                            number, which must not be
                                                            greater than the maximum
                                                            port number.
                                                          type: integer
                                                      type: object
                                                  type: object
                                              type: object
                                          type: object
                                        type: array
                                      name:
                                        description: NSG Name.
                                        type: string
                                      role:
                                        description: Role defines the NSG role (eg.
                                          control-plane, control-plane-endpoint, service-lb,
                                          worker).
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                                privateRouteTableId:
                                  description: ID of Private Route Table.
                                  type: string
                                publicRouteTableId:
                                  description: ID of Public Route Table.
                                  type: string
                                serviceGatewayId:
                                  description: ID of Service Gateway.
                                  type: string
                                subnets:
                                  description: Subnets is the configuration for subnets
                                    required in the VCN.
                                  items:
                                    description: Subnet defines the configuration for
                                      a network's subnet https://docs.oracle.com/en-us/iaas/Content/Network/Tasks/managingVCNs_topic-Overview_of_VCNs_and_Subnets.htm#Overview
                                    properties:
                                      cidr:
                                        description: Subnet CIDR.
                                        type: string
                                      id:
                                        description: Subnet OCID.
                                        type: string
                                      name:
                                        description: Subnet Name.
                                        type: string
                                      role:
                                        description: Role defines the subnet role (eg.
                                          control-plane, control-plane-endpoint, service-lb,
                                          worker).
                                        type: string
                                      securityList:
                                        description: The security list associated with
                                          Subnet.
                                        properties:
                                          egressRules:
                                            description: EgressRules on the SecurityList.
                                            items:
                                              description: EgressSecurityRule A rule
                                                for allowing outbound IP packets.
                                              properties:
                                                description:
                                                  description: An optional description
                                                    of your choice for the rule.
                                                  type: string
                                                destination:
                                                  description: 'Conceptually, this is
                                                  the range of IP addresses that a
                                                  packet originating from the instance
                                                  can go to. Allowed values:   * IP
                                                  address range in CIDR notation.
                                                  For example: `192.168.1.0/24` or
                                                  `2001:0db8:0123:45::/56`     Note
                                                  that IPv6 addressing is currently
                                                  supported only in certain regions.
                                                  See     IPv6 Addresses (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).   *
                                                  The `cidrBlock` value for a Service,
                                                  if you''re     setting up a security
                                                  list rule for traffic destined for
                                                  a particular `Service` through     a
                                                  service gateway. For example: `oci-phx-objectstorage`.'
                                                  type: string
                                                destinationType:
                                                  description: 'Type of destination
                                                  for the rule. The default is `CIDR_BLOCK`.
                                                  Allowed values:   * `CIDR_BLOCK`:
                                                  If the rule''s `destination` is
                                                  an IP address range in CIDR notation.   *
                                                  `SERVICE_CIDR_BLOCK`: If the rule''s
                                                  `destination` is the `cidrBlock`
                                                  value for a     Service (the rule
                                                  is for traffic destined for a     particular
                                                  `Service` through a service gateway).'
                                                  type: string
                                                icmpOptions:
                                                  description: 'IcmpOptions Optional
                                                  and valid only for ICMP and ICMPv6.
                                                  Use to specify a particular ICMP
                                                  type and code as defined in: - ICMP
                                                  Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                                  - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                                  If you specify ICMP or ICMPv6 as
                                                  the protocol but omit this object,
                                                  then all ICMP types and codes are
                                                  allowed. If you do provide this
                                                  object, the type is required and
                                                  the code is optional. To enable
                                                  MTU negotiation for ingress internet
                                                  traffic via IPv4, make sure to allow
                                                  type 3 ("Destination Unreachable")
                                                  code 4 ("Fragmentation Needed and
                                                  Don''t Fragment was Set"). If you
                                                  need to specify multiple codes for
                                                  a single type, create a separate
                                                  security list rule for each.'
                                                  properties:
                                                    code:
                                                      description: The ICMP code (optional).
                                                      type: integer
                                                    type:
                                                      description: The ICMP type.
                                                      type: integer
                                                  type: object
                                                isStateless:
                                                  description: A stateless rule allows
                                                    traffic in one direction. Remember
                                                    to add a corresponding stateless
                                                    rule in the other direction if you
                                                    need to support bidirectional traffic.
                                                    For example, if egress traffic allows
                                                    TCP destination port 80, there should
                                                    be an ingress rule to allow TCP
                                                    source port 80. Defaults to false,
                                                    which means the rule is stateful
                                                    and a corresponding rule is not
                                                    necessary for bidirectional traffic.
                                                  type: boolean
                                                protocol:
                                                  description: The transport protocol.
                                                    Specify either `all` or an IPv4
                                                    protocol number as defined in Protocol
                                                    Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                                    Options are supported only for ICMP
                                                    ("1"), TCP ("6"), UDP ("17"), and
                                                    ICMPv6 ("58").
                                                  type: string
                                                tcpOptions:
                                                  description: TcpOptions Optional and
                                                    valid only for TCP. Use to specify
                                                    particular destination ports for
                                                    TCP rules. If you specify TCP as
                                                    the protocol but omit this object,
                                                    then all destination ports are allowed.
                                                  properties:
                                                    destinationPortRange:
                                                      description: PortRange The representation
                                                        of PortRange.
                                                      properties:
                                                        max:
                                                          description: The maximum port
                                                            number, which must not be
                                                            less than the minimum port
                                                            number. To specify a single
                                                            port number, set both the
                                                            min and max to the same
                                                            value.
                                                          type: integer
                                                        min:
                                                          description: The minimum port
                                                            number, which must not be
                                                            greater than the maximum
                                                            port number.
                                                          type: integer
                                                      type: object
                                                    sourcePortRange:
                                                      description: PortRange The representation
                                                        of PortRange.
                                                      properties:
                                                        max:
                                                          description: The maximum port
                                                            number, which must not be
                                                            less than the minimum port
                                                            number. To specify a single
                                                            port number, set both the
                                                            min and max to the same
                                                            value.
                                                          type: integer
                                                        min:
                                                          description: The minimum port
                                                            number, which must not be
                                                            greater than the maximum
                                                            port number.
                                                          type: integer
                                                      type: object
                                                  type: object
                                                udpOptions:
                                                  description: UdpOptions Optional and
                                                    valid only for UDP. Use to specify
                                                    particular destination ports for
                                                    UDP rules. If you specify UDP as
                                                    the protocol but omit this object,
                                                    then all destination ports are allowed.
                                                  properties:
                                                    destinationPortRange:
                                                      description: PortRange The representation
                                                        of PortRange.
                                                      properties:
                                                        max:
                                                          description: The maximum port
                                                            number, which must not be
                                                            less than the minimum port
                                                            number. To specify a single
                                                            port number, set both the
                                                            min and max to the same
                                                            value.
                                                          type: integer
                                                        min:
                                                          description: The minimum port
                                                            number, which must not be
                                                            greater than the maximum
                                                            port number.
                                                          type: integer
                                                      type: object
                                                    sourcePortRange:
                                                      description: PortRange The representation
                                                        of PortRange.
                                                      properties:
                                                        max:
                                                          description: The maximum port
                                                            number, which must not be
                                                            less than the minimum port
                                                            number. To specify a single
                                                            port number, set both the
                                                            min and max to the same
                                                            value.
                                                          type: integer
                                                        min:
                                                          description: The minimum port
                                                            number, which must not be
                                                            greater than the maximum
                                                            port number.
                                                          type: integer
                                                      type: object
                                                  type: object
                                              type: object
                                            type: array
                                          id:
                                            description: ID of the SecurityList.
                                            type: string
                                          ingressRules:
                                            description: IngressRules on the SecurityList.
                                            items:
                                              description: IngressSecurityRule A rule
                                                for allowing inbound IP packets.
                                              properties:
                                                description:
                                                  description: An optional description
                                                    of your choice for the rule.
                                                  type: string
                                                icmpOptions:
                                                  description: 'IcmpOptions Optional
                                                  and valid only for ICMP and ICMPv6.
                                                  Use to specify a particular ICMP
                                                  type and code as defined in: - ICMP
                                                  Parameters (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
                                                  - ICMPv6 Parameters (https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml)
                                                  If you specify ICMP or ICMPv6 as
                                                  the protocol but omit this object,
                                                  then all ICMP types and codes are
                                                  allowed. If you do provide this
                                                  object, the type is required and
                                                  the code is optional. To enable
                                                  MTU negotiation for ingress internet
                                                  traffic via IPv4, make sure to allow
                                                  type 3 ("Destination Unreachable")
                                                  code 4 ("Fragmentation Needed and
                                                  Don''t Fragment was Set"). If you
                                                  need to specify multiple codes for
                                                  a single type, create a separate
                                                  security list rule for each.'
                                                  properties:
                                                    code:
                                                      description: The ICMP code (optional).
                                                      type: integer
                                                    type:
                                                      description: The ICMP type.
                                                      type: integer
                                                  type: object
                                                isStateless:
                                                  description: A stateless rule allows
                                                    traffic in one direction. Remember
                                                    to add a corresponding stateless
                                                    rule in the other direction if you
                                                    need to support bidirectional traffic.
                                                    For example, if ingress traffic
                                                    allows TCP destination port 80,
                                                    there should be an egress rule to
                                                    allow TCP source port 80. Defaults
                                                    to false, which means the rule is
                                                    stateful and a corresponding rule
                                                    is not necessary for bidirectional
                                                    traffic.
                                                  type: boolean
                                                protocol:
                                                  description: The transport protocol.
                                                    Specify either `all` or an IPv4
                                                    protocol number as defined in Protocol
                                                    Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                                                    Options are supported only for ICMP
                                                    ("1"), TCP ("6"), UDP ("17"), and
                                                    ICMPv6 ("58").
                                                  type: string
                                                source:
                                                  description: 'Conceptually, this is
                                                  the range of IP addresses that a
                                                  packet coming into the instance
                                                  can come from. Allowed values:   *
                                                  IP address range in CIDR notation.
                                                  For example: `192.168.1.0/24` or
                                                  `2001:0db8:0123:45::/56`.     IPv6
                                                  addressing is supported for all
                                                  commercial and government regions.
                                                  See     IPv6 Addresses (https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).   *
                                                  The `cidrBlock` value for a Service,
                                                  if you''re     setting up a security
                                                  list rule for traffic coming from
                                                  a particular `Service` through     a
                                                  service gateway. For example: `oci-phx-objectstorage`.'
                                                  type: string
                                                sourceType:
                                                  description: 'Type of source for the
                                                  rule. The default is `CIDR_BLOCK`.   *
                                                  `CIDR_BLOCK`: If the rule''s `source`
                                                  is an IP address range in CIDR notation.   *
                                                  `SERVICE_CIDR_BLOCK`: If the rule''s
                                                  `source` is the `cidrBlock` value
                                                  for a     Service (the rule is for
                                                  traffic coming from a     particular
                                                  `Service` through a service gateway).'
                                                  type: string
                                                tcpOptions:
                                                  description: TcpOptions Optional and
                                                    valid only for TCP. Use to specify
                                                    particular destination ports for
                                                    TCP rules. If you specify TCP as
                                                    the protocol but omit this object,
                                                    then all destination ports are allowed.
                                                  properties:
                                                    destinationPortRange:
                                                      description: PortRange The representation
                                                        of PortRange.
                                                      properties:
                                                        max:
                                                          description: The maximum port
                                                            number, which must not be
                                                            less than the minimum port
                                                            number. To specify a single
                                                            port number, set both the
                                                            min and max to the same
                                                            value.
                                                          type: integer
                                                        min:
                                                          description: The minimum port
                                                            number, which must not be
                                                            greater than the maximum
                                                            port number.
                                                          type: integer
                                                      type: object
                                                    sourcePortRange:
                                                      description: PortRange The representation
                                                        of PortRange.
                                                      properties:
                                                        max:
                                                          description: The maximum port
                                                            number, which must not be
                                                            less than the minimum port
                                                            number. To specify a single
                                                            port number, set both the
                                                            min and max to the same
                                                            value.
                                                          type: integer
                                                        min:
                                                          description: The minimum port
                                                            number, which must not be
                                                            greater than the maximum
                                                            port number.
                                                          type: integer
                                                      type: object
                                                  type: object
                                                udpOptions:
                                                  description: UdpOptions Optional and
                                                    valid only for UDP. Use to specify
                                                    particular destination ports for
                                                    UDP rules. If you specify UDP as
                                                    the protocol but omit this object,
                                                    then all destination ports are allowed.
                                                  properties:
                                                    destinationPortRange:
                                                      description: PortRange The representation
                                                        of PortRange.
                                                      properties:
                                                        max:
                                                          description: The maximum port
                                                            number, which must not be
                                                            less than the minimum port
                                                            number. To specify a single
                                                            port number, set both the
                                                            min and max to the same
                                                            value.
                                                          type: integer
                                                        min:
                                                          description: The minimum port
                                                            number, which must not be
                                                            greater than the maximum
                                                            port number.
                                                          type: integer
                                                      type: object
                                                    sourcePortRange:
                                                      description: PortRange The representation
                                                        of PortRange.
                                                      properties:
                                                        max:
                                                          description: The maximum port
                                                            number, which must not be
                                                            less than the minimum port
                                                            number. To specify a single
                                                            port number, set both the
                                                            min and max to the same
                                                            value.
                                                          type: integer
                                                        min:
                                                          description: The minimum port
                                                            number, which must not be
                                                            greater than the maximum
                                                            port number.
                                                          type: integer
                                                      type: object
                                                  type: object
                                              type: object
                                            type: array
                                          name:
                                            description: SecurityList Name.
                                            type: string
                                        type: object
                                      type:
                                        description: Type defines the subnet type (e.g.
                                          public, private).
                                        type: string
                                    required:
                                      - name
                                      - role
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                              type: object
                            vcnPeering:
                              description: VCNPeering configuration.
                              properties:
                                drg:
                                  description: DRG configuration refers to the DRG which
                                    has to be created if required. If management cluster
                                    and workload cluster shares the same DRG, this fields
                                    is not required to be specified.
                                  properties:
                                    id:
                                      description: ID is the OCID for the created DRG.
                                      type: string
                                    manage:
                                      description: Manage defines whether the DRG has
                                        to be managed(including create). If set to false(the
                                        default) the ID has to be specified by the user
                                        to a valid DRG ID to which the VCN has to be
                                        attached.
                                      type: boolean
                                    name:
                                      description: Name is the name of the created DRG.
                                      type: string
                                    vcnAttachmentId:
                                      description: VcnAttachmentId is the ID of the
                                        VCN attachment of the DRG. The workload cluster
                                        VCN can be attached to either the management
                                        cluster VCN if they are sharing the same DRG
                                        or to the workload cluster DRG.
                                      type: string
                                  type: object
                                peerRouteRules:
                                  description: PeerRouteRules defines the routing rules
                                    which will be added to the private route tables
                                    of the workload cluster VCN. The routes defined
                                    here will be directed to DRG.
                                  items:
                                    description: PeerRouteRule defines a Route Rule
                                      to be routed via a DRG.
                                    properties:
                                      vcnCIDRRange:
                                        description: VCNCIDRRange is the CIDR Range
                                          of peer VCN to which the workload cluster
                                          VCN will be peered. The CIDR range is required
                                          to add the route rule in the workload cluster
                                          VCN, the route rule will forward any traffic
                                          to the CIDR to the DRG.
                                        type: string
                                    type: object
                                  type: array
                                remotePeeringConnections:
                                  description: RemotePeeringConnections defines the
                                    RPC connections which be established with the workload
                                    cluster DRG.
                                  items:
                                    description: RemotePeeringConnection is used to
                                      peer VCNs residing in different regions(typically).
                                      Remote VCN Peering is explained here - https://docs.oracle.com/en-us/iaas/Content/Network/Tasks/remoteVCNpeering.htm
                                    properties:
                                      managePeerRPC:
                                        description: ManagePeerRPC will define if the
                                          Peer VCN needs to be managed. If set to true
                                          a Remote Peering Connection will be created
                                          in the Peer DRG and the connection will be
                                          created between local and peer RPC.
                                        type: boolean
                                      peerDRGId:
                                        description: PeerDRGId defines the DRG ID of
                                          the peer.
                                        type: string
                                      peerRPCConnectionId:
                                        description: PeerRPCConnectionId defines the
                                          RPC ID of peer. If ManagePeerRPC is set to
                                          true this will be created by Cluster API Provider
                                          for OCI, otherwise this has be defined by
                                          the user.
                                        type: string
                                      peerRegionName:
                                        description: PeerRegionName defined the region
                                          name of Peer VCN.
                                        type: string
                                      rpcConnectionId:
                                        description: RPCConnectionId is the connection
                                          ID of the connection between peer and local
                                          RPC.
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        ociResourceIdentifier:
                          description: The unique ID which will be used to tag all the
                            resources created by this Cluster. The tag will be used
                            to identify resources belonging to this cluster. this will
                            be auto-generated and should not be set by the user.
                          type: string
                        region:
                          description: Region the cluster operates in. It must be one
                            of available regions in Region Identifier format. See https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
                          type: string
                      type: object
                  required:
                    - spec
                  type: object
              required:
                - template
              type: object
          type: object
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    cluster.x-k8s.io/v1beta1: v1beta1
  name: ocimachinepools.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: OCIMachinePool
    listKind: OCIMachinePoolList
    plural: ocimachinepools
    singular: ocimachinepool
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: OCIMachinePoolSpec defines the desired state of OCIMachinePool
              properties:
                imageId:
                  description: OCID of the image to be used to launch the instance.
                  type: string
                instanceConfiguration:
                  properties:
                    instanceConfigurationId:
                      type: string
                    instanceDetails:
                      properties:
                        shape:
                          type: string
                      type: object
                  type: object
                metadata:
                  additionalProperties:
                    type: string
                  description: Custom metadata key/value pairs that you provide, such
                    as the SSH public key required to connect to the instance.
                  type: object
                ocid:
                  description: OCID is the OCID of the associated InstancePool
                  type: string
                placementDetails:
                  items:
                    properties:
                      availabilityDomain:
                        description: The availability domain to place instances.
                        type: integer
                    required:
                      - availabilityDomain
                    type: object
                  type: array
                providerID:
                  description: ProviderID is the OCID of the associated InstancePool
                    in a provider format
                  type: string
                providerIDList:
                  description: ProviderIDList are the identification IDs of machine
                    instances provided by the provider. This field must match the provider
                    IDs as seen on the node objects corresponding to a machine pool's
                    machine instances.
                  items:
                    type: string
                  type: array
                shapeConfig:
                  description: The shape configuration of the instance, applicable for
                    flex instances.
                  properties:
                    baselineOcpuUtilization:
                      description: 'The baseline OCPU utilization for a subcore burstable
                      VM instance. Leave this attribute blank for a non-burstable
                      instance, or explicitly specify non-burstable with `BASELINE_1_1`.
                      The following values are supported: - `BASELINE_1_8` - baseline
                      usage is 1/8 of an OCPU. - `BASELINE_1_2` - baseline usage is
                      1/2 of an OCPU. - `BASELINE_1_1` - baseline usage is an entire
                      OCPU. This represents a non-burstable instance.'
                      type: string
                    memoryInGBs:
                      description: The total amount of memory available to the instance,
                        in gigabytes.
                      type: string
                    ocpus:
                      description: The total number of OCPUs available to the instance.
                      type: string
                  type: object
                vnicAssignPublicIp:
                  default: false
                  description: Whether the VNIC should be assigned a public IP address.
                  type: boolean
              type: object
            status:
              description: OCIMachinePoolStatus defines the observed state of OCIMachinePool
              properties:
                conditions:
                  description: Conditions defines current service state of the OCIMachinePool.
                  items:
                    description: Condition defines an observation of a Cluster API resource
                      operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status
                          to another. This should be when the underlying condition changed.
                          If that is not known, then using the time when the API field
                          changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not this
                          field is considered a guaranteed API. This field may not be
                          empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification of
                          Reason code, so the users or machines can immediately understand
                          the current situation and act accordingly. The Severity field
                          MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important.
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureMessage:
                  type: string
                failureReason:
                  description: MachineStatusError defines errors states for Machine
                    objects.
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
                replicas:
                  description: Replicas is the most recently observed number of replicas
                  format: int32
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cluster-api-provider-oci-system/capoci-serving-cert
    controller-gen.kubebuilder.io/version: v0.7.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    cluster.x-k8s.io/v1beta1: v1beta1
  name: ocimachines.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: capoci-webhook-service
          namespace: cluster-api-provider-oci-system
          path: /convert
      conversionReviewVersions:
        - v1
        - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: OCIMachine
    listKind: OCIMachineList
    plural: ocimachines
    singular: ocimachine
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: OCIMachine is the Schema for the ocimachines API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: OCIMachineSpec defines the desired state of OCIMachine Please
                read the API https://docs.oracle.com/en-us/iaas/api/#/en/iaas/20160918/Instance/LaunchInstance
                for more information about the parameters below
              properties:
                bootVolumeSizeInGBs:
                  description: The size of boot volume. Please see https://docs.oracle.com/en-us/iaas/Content/Block/Tasks/extendingbootpartition.htm
                    to extend the boot volume size.
                  type: string
                compartmentId:
                  description: Compartment to launch the instance in.
                  type: string
                definedTags:
                  additionalProperties:
                    additionalProperties:
                      type: string
                    type: object
                  description: 'Defined tags for this resource. Each key is predefined
                  and scoped to a namespace. For more information, see Resource Tags
                  (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
                  Example: `{"Operations": {"CostCenter": "42"}}`'
                  type: object
                freeformTags:
                  additionalProperties:
                    type: string
                  description: Free-form tags for this resource.
                  type: object
                imageId:
                  description: OCID of the image to be used to launch the instance.
                  type: string
                instanceId:
                  description: OCID of launched compute instance.
                  type: string
                isPvEncryptionInTransitEnabled:
                  default: true
                  description: Is in transit encryption of volumes required.
                  type: boolean
                metadata:
                  additionalProperties:
                    type: string
                  description: Custom metadata key/value pairs that you provide, such
                    as the SSH public key required to connect to the instance.
                  type: object
                networkDetails:
                  description: PrimaryNetworkInterface is required to specify subnet.
                  properties:
                    assignPublicIp:
                      type: boolean
                    nsgId:
                      type: string
                    subnetId:
                      type: string
                    subnetName:
                      type: string
                  type: object
                nsgName:
                  description: The name of NSG to use. The name here refers to the NSGs
                    defined in the OCICluster Spec. Optional, only if multiple NSGs
                    of a type is defined, else the first element is used.
                  type: string
                providerID:
                  description: Provider ID of the instance, this will be set by Cluster
                    API provider itself, users should not set this parameter.
                  type: string
                shape:
                  description: Shape of the instance.
                  type: string
                shapeConfig:
                  description: The shape configuration of rhe instance, applicable for
                    flex instances.
                  properties:
                    baselineOcpuUtilization:
                      description: 'The baseline OCPU utilization for a subcore burstable
                      VM instance. Leave this attribute blank for a non-burstable
                      instance, or explicitly specify non-burstable with `BASELINE_1_1`.
                      The following values are supported: - `BASELINE_1_8` - baseline
                      usage is 1/8 of an OCPU. - `BASELINE_1_2` - baseline usage is
                      1/2 of an OCPU. - `BASELINE_1_1` - baseline usage is an entire
                      OCPU. This represents a non-burstable instance.'
                      type: string
                    memoryInGBs:
                      description: The total amount of memory available to the instance,
                        in gigabytes.
                      type: string
                    ocpus:
                      description: The total number of OCPUs available to the instance.
                      type: string
                  type: object
                subnetName:
                  description: The name of the subnet to use. The name here refers to
                    the subnets defined in the OCICluster Spec. Optional, only if multiple
                    subnets of a type is defined, else the first element is used.
                  type: string
              type: object
            status:
              description: OCIMachineStatus defines the observed state of OCIMachine.
              properties:
                addresses:
                  description: Addresses contains the addresses of the associated OCI
                    instance.
                  items:
                    description: MachineAddress contains information for the node's
                      address.
                    properties:
                      address:
                        description: The machine address.
                        type: string
                      type:
                        description: Machine address type, one of Hostname, ExternalIP
                          or InternalIP.
                        type: string
                    required:
                      - address
                      - type
                    type: object
                  type: array
                conditions:
                  description: Conditions defines current service state of the OCIMachine.
                  items:
                    description: Condition defines an observation of a Cluster API resource
                      operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status
                          to another. This should be when the underlying condition changed.
                          If that is not known, then using the time when the API field
                          changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not this
                          field is considered a guaranteed API. This field may not be
                          empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification of
                          Reason code, so the users or machines can immediately understand
                          the current situation and act accordingly. The Severity field
                          MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important.
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                createBackendWorkRequestId:
                  description: Create Backend OPC work request ID for the machine backend.
                  type: string
                deleteBackendWorkRequestId:
                  description: Delete Backend OPC work request ID for the machine backend.
                  type: string
                failureMessage:
                  description: The error message corresponding to the error on the machine.
                  type: string
                failureReason:
                  description: Error status on the machine.
                  type: string
                launchInstanceWorkRequestId:
                  description: Launch instance work request ID.
                  type: string
                ready:
                  description: Flag set to true when machine is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    cluster.x-k8s.io/v1beta1: v1beta1
  name: ocimachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: OCIMachineTemplate
    listKind: OCIMachineTemplateList
    plural: ocimachinetemplates
    singular: ocimachinetemplate
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: OCIMachineTemplate is the schema for the OCI compute instance
            machine template.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: OCIMachineTemplateSpec defines the desired state of OCIMachineTemplate.
              properties:
                template:
                  description: OCIMachineTemplateResource describes the data needed
                    to create an OCIMachine from a template.
                  properties:
                    spec:
                      description: Spec is the specification of the desired behavior
                        of the machine.
                      properties:
                        bootVolumeSizeInGBs:
                          description: The size of boot volume. Please see https://docs.oracle.com/en-us/iaas/Content/Block/Tasks/extendingbootpartition.htm
                            to extend the boot volume size.
                          type: string
                        compartmentId:
                          description: Compartment to launch the instance in.
                          type: string
                        definedTags:
                          additionalProperties:
                            additionalProperties:
                              type: string
                            type: object
                          description: 'Defined tags for this resource. Each key is
                          predefined and scoped to a namespace. For more information,
                          see Resource Tags (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
                          Example: `{"Operations": {"CostCenter": "42"}}`'
                          type: object
                        freeformTags:
                          additionalProperties:
                            type: string
                          description: Free-form tags for this resource.
                          type: object
                        imageId:
                          description: OCID of the image to be used to launch the instance.
                          type: string
                        instanceId:
                          description: OCID of launched compute instance.
                          type: string
                        isPvEncryptionInTransitEnabled:
                          default: true
                          description: Is in transit encryption of volumes required.
                          type: boolean
                        metadata:
                          additionalProperties:
                            type: string
                          description: Custom metadata key/value pairs that you provide,
                            such as the SSH public key required to connect to the instance.
                          type: object
                        networkDetails:
                          description: PrimaryNetworkInterface is required to specify
                            subnet.
                          properties:
                            assignPublicIp:
                              type: boolean
                            nsgId:
                              type: string
                            subnetId:
                              type: string
                            subnetName:
                              type: string
                          type: object
                        nsgName:
                          description: The name of NSG to use. The name here refers
                            to the NSGs defined in the OCICluster Spec. Optional, only
                            if multiple NSGs of a type is defined, else the first element
                            is used.
                          type: string
                        providerID:
                          description: Provider ID of the instance, this will be set
                            by Cluster API provider itself, users should not set this
                            parameter.
                          type: string
                        shape:
                          description: Shape of the instance.
                          type: string
                        shapeConfig:
                          description: The shape configuration of rhe instance, applicable
                            for flex instances.
                          properties:
                            baselineOcpuUtilization:
                              description: 'The baseline OCPU utilization for a subcore
                              burstable VM instance. Leave this attribute blank for
                              a non-burstable instance, or explicitly specify non-burstable
                              with `BASELINE_1_1`. The following values are supported:
                              - `BASELINE_1_8` - baseline usage is 1/8 of an OCPU.
                              - `BASELINE_1_2` - baseline usage is 1/2 of an OCPU.
                              - `BASELINE_1_1` - baseline usage is an entire OCPU.
                              This represents a non-burstable instance.'
                              type: string
                            memoryInGBs:
                              description: The total amount of memory available to the
                                instance, in gigabytes.
                              type: string
                            ocpus:
                              description: The total number of OCPUs available to the
                                instance.
                              type: string
                          type: object
                        subnetName:
                          description: The name of the subnet to use. The name here
                            refers to the subnets defined in the OCICluster Spec. Optional,
                            only if multiple subnets of a type is defined, else the
                            first element is used.
                          type: string
                      type: object
                  required:
                    - spec
                  type: object
              required:
                - template
              type: object
          type: object
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-controller-manager
  namespace: cluster-api-provider-oci-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-leader-election-role
  namespace: cluster-api-provider-oci-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-manager-role
rules:
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - ociclusters
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - ociclusters/finalizers
    verbs:
      - update
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - ociclusters/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - ocimachines
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - ocimachines/finalizers
    verbs:
      - update
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - ocimachines/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - ocimachinepools
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - ocimachinepools
      - ocimachinepools/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - ocimachinepools/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - infrastructure.cluster.x-k8s.io
    resources:
      - ocimachinepools/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - cluster.x-k8s.io
    resources:
      - machines
      - machines/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cluster.x-k8s.io
    resources:
      - clusters
      - clusters/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cluster.x-k8s.io
    resources:
      - machinepools
      - machinepools/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-leader-election-rolebinding
  namespace: cluster-api-provider-oci-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capoci-leader-election-role
subjects:
  - kind: ServiceAccount
    name: capoci-controller-manager
    namespace: cluster-api-provider-oci-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capoci-manager-role
subjects:
  - kind: ServiceAccount
    name: capoci-controller-manager
    namespace: cluster-api-provider-oci-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capoci-proxy-role
subjects:
  - kind: ServiceAccount
    name: capoci-controller-manager
    namespace: cluster-api-provider-oci-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 237d8a8a.cluster.x-k8s.io
kind: ConfigMap
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-manager-config
  namespace: cluster-api-provider-oci-system
---
apiVersion: v1
data:
  fingerprint: ${OCI_CREDENTIALS_FINGERPRINT_B64:=""}
  key: ${OCI_CREDENTIALS_KEY_B64:=""}
  passphrase: ${OCI_CREDENTIALS_PASSPHRASE_B64:=""}
  region: ${OCI_REGION_B64:=""}
  tenancy: ${OCI_TENANCY_ID_B64:=""}
  useInstancePrincipal: ${USE_INSTANCE_PRINCIPAL_B64:="ZmFsc2U="}
  user: ${OCI_USER_ID_B64:=""}
kind: Secret
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-auth-config
  namespace: cluster-api-provider-oci-system
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    control-plane: controller-manager
  name: capoci-controller-manager-metrics-service
  namespace: cluster-api-provider-oci-system
spec:
  ports:
    - name: https
      port: 8443
      targetPort: https
  selector:
    cluster.x-k8s.io/provider: infrastructure-oci
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-webhook-service
  namespace: cluster-api-provider-oci-system
spec:
  ports:
    - port: 443
      targetPort: webhook-server
  selector:
    cluster.x-k8s.io/provider: infrastructure-oci
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
    control-plane: controller-manager
  name: capoci-controller-manager
  namespace: cluster-api-provider-oci-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-oci
      control-plane: controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-oci
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: ${K8S_CP_LABEL:=node-role.kubernetes.io/control-plane}
                    operator: Exists
              weight: 10
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
              weight: 10
      containers:
        - args:
            - --leader-elect
            - --feature-gates=MachinePool=${EXP_MACHINE_POOL:=false}
            - --metrics-bind-address=127.0.0.1:8080
            - --logging-format=${LOG_FORMAT:=text}
          command:
            - /manager
          env:
            - name: AUTH_CONFIG_DIR
              value: /etc/oci
            - name: HTTP_PROXY
              value: ${TKG_HTTP_PROXY}
            - name: HTTPS_PROXY
              value: ${TKG_HTTPS_PROXY}
            - name: NO_PROXY
              value: ${TKG_NO_PROXY}
          image: ghcr.io/oracle/cluster-api-oci-controller:${CAPOCI_CONTROLLER_IMAGE_TAG}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
            - mountPath: /etc/oci
              name: auth-config-dir
              readOnly: true
      serviceAccountName: capoci-controller-manager
      terminationGracePeriodSeconds: 10
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: capoci-webhook-service-cert
        - name: auth-config-dir
          secret:
            secretName: capoci-auth-config
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-serving-cert
  namespace: cluster-api-provider-oci-system
spec:
  dnsNames:
    - capoci-webhook-service.cluster-api-provider-oci-system.svc
    - capoci-webhook-service.cluster-api-provider-oci-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: capoci-selfsigned-issuer
  secretName: capoci-webhook-service-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-selfsigned-issuer
  namespace: cluster-api-provider-oci-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cluster-api-provider-oci-system/capoci-serving-cert
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-mutating-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1
      - v1beta1
    clientConfig:
      service:
        name: capoci-webhook-service
        namespace: cluster-api-provider-oci-system
        path: /mutate-infrastructure-cluster-x-k8s-io-v1beta1-ocicluster
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: default.ocicluster.infrastructure.cluster.x-k8s.io
    rules:
      - apiGroups:
          - infrastructure.cluster.x-k8s.io
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - ociclusters
    sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cluster-api-provider-oci-system/capoci-serving-cert
  labels:
    cluster.x-k8s.io/provider: infrastructure-oci
  name: capoci-validating-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1beta1
    clientConfig:
      service:
        name: capoci-webhook-service
        namespace: cluster-api-provider-oci-system
        path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-ocicluster
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: validation.ocicluster.infrastructure.cluster.x-k8s.io
    rules:
      - apiGroups:
          - infrastructure.cluster.x-k8s.io
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - ociclusters
    sideEffects: None
  - admissionReviewVersions:
      - v1beta1
    clientConfig:
      service:
        name: capoci-webhook-service
        namespace: cluster-api-provider-oci-system
        path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-ocimachinetemplate
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: validation.ocimachinetemplate.infrastructure.cluster.x-k8s.io
    rules:
      - apiGroups:
          - infrastructure.cluster.x-k8s.io
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - ocimachinetemplates
    sideEffects: None
