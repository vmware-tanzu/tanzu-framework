#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")

#@ def featuregates_default_resource():
apiVersion: config.tanzu.vmware.com/v1alpha1
kind: FeatureGate
metadata:
  name: tkg-system
  annotations:
    tkg.tanzu.vmware.com/addon-type: "packages/management-package"
spec:
  namespaceSelector: {}
#@ end

#@ if data.values.TKG_CLUSTER_ROLE != "workload" and data.values.PROVIDER_TYPE != "tkg-service-vsphere":
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  name: #@ "{}-featuregates-default-resource".format(data.values.CLUSTER_NAME)
  labels:
    cluster.x-k8s.io/cluster-name: #@ data.values.CLUSTER_NAME
  annotations:
    tkg.tanzu.vmware.com/addon-type: "packages/management-package"
spec:
  strategy: "ApplyOnce"
  clusterSelector:
    matchLabels:
      tkg.tanzu.vmware.com/cluster-name: #@ data.values.CLUSTER_NAME
  resources:
    - name: #@ "{}-featuregates-default-resource-crs".format(data.values.CLUSTER_NAME)
      kind: Secret
---
apiVersion: v1
kind: Secret
metadata:
  name: #@ "{}-featuregates-default-resource-crs".format(data.values.CLUSTER_NAME)
  annotations:
    tkg.tanzu.vmware.com/addon-type: "packages/management-package"
type: addons.cluster.x-k8s.io/resource-set
stringData:
  value: #@ yaml.encode(featuregates_default_resource())
#@ end
