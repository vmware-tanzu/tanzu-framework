#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")
#@ load("@ytt:template", "template")

#@ def featuregates_package_install_definition():
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tanzu-featuregates-package-sa
  namespace: tkg-system
  annotations:
    tkg.tanzu.vmware.com/addon-type: "packages/management-package"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tanzu-featuregates-package-cluster-role
  annotations:
    tkg.tanzu.vmware.com/addon-type: "packages/management-package"
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - serviceaccounts
      - services
    verbs:
      - create
      - update
      - get
      - list
      - delete
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - create
      - update
      - get
      - list
      - delete
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - update
      - get
      - list
      - delete
  - apiGroups:
      - cert-manager.io
    resources:
      - issuers
      - certificates
    verbs:
      - create
      - update
      - get
      - list
      - delete
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
    verbs:
      - create
      - update
      - get
      - list
      - delete
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterroles
      - clusterrolebindings
    verbs:
      - create
      - update
      - get
      - list
      - delete
  - apiGroups:
      - config.tanzu.vmware.com
    resources:
      - featuregates
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - config.tanzu.vmware.com
    resources:
      - featuregates/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - config.tanzu.vmware.com
    resources:
      - features
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - config.tanzu.vmware.com
    resources:
      - features/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - core.tanzu.vmware.com
    resources:
      - featuregates
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - core.tanzu.vmware.com
    resources:
      - featuregates/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - core.tanzu.vmware.com
    resources:
      - features
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - core.tanzu.vmware.com
    resources:
      - features/status
    verbs:
      - get
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tanzu-featuregates-package-cluster-rolebinding
  annotations:
    tkg.tanzu.vmware.com/addon-type: "packages/management-package"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tanzu-featuregates-package-cluster-role
subjects:
  - kind: ServiceAccount
    name: tanzu-featuregates-package-sa
    namespace: tkg-system
---
apiVersion: packaging.carvel.dev/v1alpha1
kind: PackageInstall
metadata:
  name: tanzu-featuregates
  namespace: tkg-system
  annotations:
    tkg.tanzu.vmware.com/addon-type: "packages/management-package"
spec:
  serviceAccountName: tanzu-featuregates-package-sa
  packageRef:
    refName: featuregates.tanzu.vmware.com
    versionSelection:
      prereleases: {}
  values:
    - secretRef:
        name: tanzu-featuregates-values
---
apiVersion: v1
kind: Secret
metadata:
  name: tanzu-featuregates-values
  namespace: tkg-system
  annotations:
    tkg.tanzu.vmware.com/addon-type: "packages/management-package"
type: Opaque
stringData:
  values.yaml: |
    namespace: tkg-system
#@ end

#@ if data.values.TKG_CLUSTER_ROLE != "workload" and data.values.PROVIDER_TYPE != "tkg-service-vsphere" :
#@ if data.values.DISABLE_CRS_FOR_ADDON_TYPE and "packages/management-package" in data.values.DISABLE_CRS_FOR_ADDON_TYPE:
--- #@ template.replace(featuregates_package_install_definition())
#@ else:
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  name: #@ "{}-featuregates-package".format(data.values.CLUSTER_NAME)
  labels:
    cluster.x-k8s.io/cluster-name: #@ data.values.CLUSTER_NAME
  annotations:
    tkg.tanzu.vmware.com/addon-type: "packages/management-package"
spec:
  strategy: "ApplyOnce"
  clusterSelector:
    matchLabels:
      tkg.tanzu.vmware.com/cluster-name: #@ data.values.CLUSTER_NAME
  resources:
    - name: #@ "{}-featuregates-package-crs".format(data.values.CLUSTER_NAME)
      kind: Secret
---
apiVersion: v1
kind: Secret
metadata:
  name: #@ "{}-featuregates-package-crs".format(data.values.CLUSTER_NAME)
  annotations:
    tkg.tanzu.vmware.com/addon-type: "packages/management-package"
type: addons.cluster.x-k8s.io/resource-set
stringData:
  value: #@ yaml.encode(featuregates_package_install_definition())
#@ end
#@ end
