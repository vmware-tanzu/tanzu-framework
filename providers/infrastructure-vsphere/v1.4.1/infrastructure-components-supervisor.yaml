apiVersion: v1
kind: Namespace
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-vsphere
    cluster.x-k8s.io/v1beta1: v1beta1
  name: capv-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-vsphere
    cluster.x-k8s.io/v1beta1: v1beta1
  name: providerserviceaccounts.vmware.infrastructure.cluster.x-k8s.io
spec:
  group: vmware.infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: ProviderServiceAccount
    listKind: ProviderServiceAccountList
    plural: providerserviceaccounts
    singular: providerserviceaccount
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.ref.name
      name: VSphereCluster
      type: string
    - jsonPath: .spec.targetNamespace
      name: TargetNamespace
      type: string
    - jsonPath: .spec.targetSecretName
      name: TargetSecretName
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ProviderServiceAccount is the schema for the ProviderServiceAccount API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProviderServiceAccountSpec defines the desired state of ProviderServiceAccount.
            properties:
              ref:
                description: Ref specifies the reference to the VSphereCluster for which the ProviderServiceAccount needs to be realized.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              rules:
                description: Rules specifies the privileges that need to be granted to the service account.
                items:
                  description: PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.
                  properties:
                    apiGroups:
                      description: APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.
                      items:
                        type: string
                      type: array
                    nonResourceURLs:
                      description: NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
                      items:
                        type: string
                      type: array
                    resourceNames:
                      description: ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.
                      items:
                        type: string
                      type: array
                    resources:
                      description: Resources is a list of resources this rule applies to. '*' represents all resources.
                      items:
                        type: string
                      type: array
                    verbs:
                      description: Verbs is a list of Verbs that apply to ALL the ResourceKinds contained in this rule. '*' represents all verbs.
                      items:
                        type: string
                      type: array
                  required:
                  - verbs
                  type: object
                type: array
              targetNamespace:
                description: TargetNamespace is the namespace in the target cluster where the secret containing the generated service account token needs to be created.
                type: string
              targetSecretName:
                description: TargetSecretName is the name of the secret in the target cluster that contains the generated service account token.
                type: string
            required:
            - ref
            - rules
            - targetNamespace
            - targetSecretName
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-vsphere
    cluster.x-k8s.io/v1beta1: v1beta1
  name: vsphereclusters.vmware.infrastructure.cluster.x-k8s.io
spec:
  group: vmware.infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: VSphereCluster
    listKind: VSphereClusterList
    plural: vsphereclusters
    singular: vspherecluster
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: VSphereCluster is the Schema for the VSphereClusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VSphereClusterSpec defines the desired state of VSphereCluster
            properties:
              controlPlaneEndpoint:
                description: APIEndpoint represents a reachable Kubernetes API endpoint.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
            required:
            - controlPlaneEndpoint
            type: object
          status:
            description: VSphereClusterStatus defines the observed state of VSphereClusterSpec
            properties:
              conditions:
                description: Conditions defines current service state of the VSphereCluster.
                items:
                  description: Condition defines an observation of a Cluster API resource operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureDomains:
                additionalProperties:
                  description: FailureDomainSpec is the Schema for Cluster API failure domains. It allows controllers to understand how many failure domains a cluster can optionally span across.
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      description: Attributes is a free form map of attributes an infrastructure provider might use or require.
                      type: object
                    controlPlane:
                      description: ControlPlane determines if this failure domain is suitable for use by control plane machines.
                      type: boolean
                  type: object
                description: FailureDomains is a list of failure domain objects synced from the infrastructure provider.
                type: object
              ready:
                description: Ready indicates the infrastructure required to deploy this cluster is ready.
                type: boolean
              resourcePolicyName:
                description: ResourcePolicyName is the name of the VirtualMachineSetResourcePolicy for the cluster, if one exists
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-vsphere
    cluster.x-k8s.io/v1beta1: v1beta1
  name: vsphereclustertemplates.vmware.infrastructure.cluster.x-k8s.io
spec:
  group: vmware.infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: VSphereClusterTemplate
    listKind: VSphereClusterTemplateList
    plural: vsphereclustertemplates
    singular: vsphereclustertemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: VSphereClusterTemplate is the Schema for the vsphereclustertemplates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VSphereClusterTemplateSpec defines the desired state of VSphereClusterTemplate
            properties:
              template:
                properties:
                  spec:
                    description: VSphereClusterSpec defines the desired state of VSphereCluster
                    properties:
                      controlPlaneEndpoint:
                        description: APIEndpoint represents a reachable Kubernetes API endpoint.
                        properties:
                          host:
                            description: The hostname on which the API server is serving.
                            type: string
                          port:
                            description: The port on which the API server is serving.
                            format: int32
                            type: integer
                        required:
                        - host
                        - port
                        type: object
                    required:
                    - controlPlaneEndpoint
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-vsphere
    cluster.x-k8s.io/v1beta1: v1beta1
  name: vspheremachines.vmware.infrastructure.cluster.x-k8s.io
spec:
  group: vmware.infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: VSphereMachine
    listKind: VSphereMachineList
    plural: vspheremachines
    singular: vspheremachine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Zone
      jsonPath: .spec.failureDomain
      name: Zone
      type: string
    - description: Provider ID
      jsonPath: .spec.providerID
      name: ProviderID
      type: string
    - description: IP address
      jsonPath: .status.vmIp
      name: IPAddr
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VSphereMachine is the Schema for the vspheremachines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VSphereMachineSpec defines the desired state of VSphereMachine
            properties:
              className:
                description: ClassName is the name of the class used when specifying the underlying virtual machine
                type: string
              failureDomain:
                description: FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.
                type: string
              imageName:
                description: ImageName is the name of the base image used when specifying the underlying virtual machine
                type: string
              providerID:
                description: ProviderID is the virtual machine's BIOS UUID formated as vsphere://12345678-1234-1234-1234-123456789abc. This is required at runtime by CAPI. Do not remove this field.
                type: string
              storageClass:
                description: StorageClass is the name of the storage class used when specifying the underlying virtual machine.
                type: string
              volumes:
                description: Volumes is the set of PVCs to be created and attached to the VSphereMachine
                items:
                  description: VSphereMachineVolume defines a PVC attachment
                  properties:
                    capacity:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: Capacity is the PVC capacity
                      type: object
                    name:
                      description: 'Name is suffix used to name this PVC as: VSphereMachine.Name + "-" + Name'
                      type: string
                    storageClass:
                      description: StorageClass defaults to VSphereMachineSpec.StorageClass
                      type: string
                  required:
                  - capacity
                  - name
                  type: object
                type: array
            required:
            - className
            - imageName
            type: object
          status:
            description: VSphereMachineStatus defines the observed state of VSphereMachine
            properties:
              addresses:
                description: Addresses contains the instance associated addresses.
                items:
                  description: NodeAddress contains information for the node's address.
                  properties:
                    address:
                      description: The node address.
                      type: string
                    type:
                      description: Node address type, one of Hostname, ExternalIP or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the VSphereMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: "FailureMessage will be set in the event that there is a terminal problem reconciling the Machine and will contain a more verbose string suitable for logging and human consumption. \n This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the Machine's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured. \n Any transient errors that occur during the reconciliation of Machines can be added as events to the Machine object and/or logged in the controller's output."
                type: string
              failureReason:
                description: "FailureReason will be set in the event that there is a terminal problem reconciling the Machine and will contain a succinct value suitable for machine interpretation. \n This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the Machine's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured. \n Any transient errors that occur during the reconciliation of Machines can be added as events to the Machine object and/or logged in the controller's output."
                type: string
              ready:
                description: Ready is true when the provider resource is ready. This is required at runtime by CAPI. Do not remove this field.
                type: boolean
              vmID:
                description: ID is used to identify the virtual machine.
                type: string
              vmIp:
                description: IPAddr is the IP address used to access the virtual machine.
                type: string
              vmstatus:
                description: VMStatus is used to identify the virtual machine status.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-vsphere
    cluster.x-k8s.io/v1beta1: v1beta1
  name: vspheremachinetemplates.vmware.infrastructure.cluster.x-k8s.io
spec:
  group: vmware.infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: VSphereMachineTemplate
    listKind: VSphereMachineTemplateList
    plural: vspheremachinetemplates
    singular: vspheremachinetemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: VSphereMachineTemplate is the Schema for the vspheremachinetemplates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VSphereMachineTemplateSpec defines the desired state of VSphereMachineTemplate
            properties:
              template:
                description: VSphereMachineTemplateResource describes the data needed to create a VSphereMachine from a template
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior of the machine.
                    properties:
                      className:
                        description: ClassName is the name of the class used when specifying the underlying virtual machine
                        type: string
                      failureDomain:
                        description: FailureDomain is the failure domain the machine will be created in. Must match a key in the FailureDomains map stored on the cluster object.
                        type: string
                      imageName:
                        description: ImageName is the name of the base image used when specifying the underlying virtual machine
                        type: string
                      providerID:
                        description: ProviderID is the virtual machine's BIOS UUID formated as vsphere://12345678-1234-1234-1234-123456789abc. This is required at runtime by CAPI. Do not remove this field.
                        type: string
                      storageClass:
                        description: StorageClass is the name of the storage class used when specifying the underlying virtual machine.
                        type: string
                      volumes:
                        description: Volumes is the set of PVCs to be created and attached to the VSphereMachine
                        items:
                          description: VSphereMachineVolume defines a PVC attachment
                          properties:
                            capacity:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: Capacity is the PVC capacity
                              type: object
                            name:
                              description: 'Name is suffix used to name this PVC as: VSphereMachine.Name + "-" + Name'
                              type: string
                            storageClass:
                              description: StorageClass defaults to VSphereMachineSpec.StorageClass
                              type: string
                          required:
                          - capacity
                          - name
                          type: object
                        type: array
                    required:
                    - className
                    - imageName
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-vsphere
    cluster.x-k8s.io/v1beta1: v1beta1
  name: capv-leader-election-role
  namespace: capv-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      capv.infrastucture.cluster.x-k8s.io/aggregate-to-manager: "true"
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-vsphere
    cluster.x-k8s.io/v1beta1: v1beta1
  name: capv-aggregated-manager-role
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    capv.infrastucture.cluster.x-k8s.io/aggregate-to-manager: "true"
    cluster.x-k8s.io/aggregate-to-manager: "true"
    cluster.x-k8s.io/provider: infrastructure-vsphere
    cluster.x-k8s.io/v1beta1: v1beta1
    kubeadm.controlplane.cluster.x-k8s.io/aggregate-to-manager: "true"
  name: capv-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - events
  - nodes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - machines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machinedeployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machinedeployments
  - machinesets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - controlplane.cluster.x-k8s.io
  resources:
  - kubeadmcontrolplanes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vsphereclusteridentities
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vsphereclusteridentities/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vsphereclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vsphereclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vspheredeploymentzones
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vspheredeploymentzones/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vspherefailuredomains
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vspheremachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vspheremachines/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vspheremachinetemplates
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vspherevms
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vspherevms/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - netoperator.vmware.com
  resources:
  - networks
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - topology.tanzu.vmware.com
  resources:
  - availabilityzones
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - topology.tanzu.vmware.com
  resources:
  - availabilityzones/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - vmoperator.vmware.com
  resources:
  - virtualmachineimages
  - virtualmachineimages/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - vmoperator.vmware.com
  resources:
  - virtualmachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - vmoperator.vmware.com
  resources:
  - virtualmachineservices
  - virtualmachineservices/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - vmoperator.vmware.com
  resources:
  - virtualmachinesetresourcepolicies
  - virtualmachinesetresourcepolicies/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - vmware.com
  resources:
  - virtualnetworks
  - virtualnetworks/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - vmware.infrastructure.cluster.x-k8s.io
  resources:
  - providerserviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - vmware.infrastructure.cluster.x-k8s.io
  resources:
  - providerserviceaccounts/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - vmware.infrastructure.cluster.x-k8s.io
  resources:
  - vsphereclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - vmware.infrastructure.cluster.x-k8s.io
  resources:
  - vsphereclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - vmware.infrastructure.cluster.x-k8s.io
  resources:
  - vsphereclustertemplates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - vmware.infrastructure.cluster.x-k8s.io
  resources:
  - vspheremachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - vmware.infrastructure.cluster.x-k8s.io
  resources:
  - vspheremachines/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - vmware.infrastructure.cluster.x-k8s.io
  resources:
  - vspheremachinetemplates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - vmware.infrastructure.cluster.x-k8s.io
  resources:
  - vspheremachinetemplates/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-vsphere
    cluster.x-k8s.io/v1beta1: v1beta1
  name: capv-leader-election-rolebinding
  namespace: capv-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capv-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capv-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-vsphere
    cluster.x-k8s.io/v1beta1: v1beta1
  name: capv-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capv-aggregated-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capv-system
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-vsphere
    cluster.x-k8s.io/v1beta1: v1beta1
  name: capv-manager-bootstrap-credentials
  namespace: capv-system
stringData:
  credentials.yaml: |-
    username: '${VSPHERE_USERNAME}'
    password: '${VSPHERE_PASSWORD}'
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-vsphere
    cluster.x-k8s.io/v1beta1: v1beta1
  name: capv-webhook-service
  namespace: capv-system
spec:
  ports:
  - port: 443
    targetPort: webhook-server
  selector:
    cluster.x-k8s.io/provider: infrastructure-vsphere
    cluster.x-k8s.io/v1beta1: v1beta1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-vsphere
    cluster.x-k8s.io/v1beta1: v1beta1
    control-plane: controller-manager
  name: capv-controller-manager
  namespace: capv-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-vsphere
      cluster.x-k8s.io/v1beta1: v1beta1
      control-plane: controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-vsphere
        cluster.x-k8s.io/v1beta1: v1beta1
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --leader-elect
        - --logtostderr
        - --v=4
        - --feature-gates=NodeAntiAffinity=${EXP_NODE_ANTI_AFFINITY:=true},NodeLabeling=${EXP_NODE_LABELING:=true}
        env:
        - name: SERVICE_ACCOUNTS_CM_NAMESPACE
          value: ${SERVICE_ACCOUNTS_CM_NAMESPACE}
        - name: SERVICE_ACCOUNTS_CM_NAME
          value: ${SERVICE_ACCOUNTS_CM_NAME}
        - name: HTTP_PROXY
          value: ${TKG_HTTP_PROXY}
        - name: HTTPS_PROXY
          value: ${TKG_HTTPS_PROXY}
        - name: NO_PROXY
          value: ${TKG_NO_PROXY}
        image: registry.tkg.vmware.run/cluster-api/cluster-api-vsphere-controller:${CAPV_CONTROLLER_IMAGE_TAG}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /etc/capv
          name: manager-bootstrap-credentials
          readOnly: true
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: capv-webhook-service-cert
      - name: manager-bootstrap-credentials
        secret:
          secretName: capv-manager-bootstrap-credentials
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-vsphere
    cluster.x-k8s.io/v1beta1: v1beta1
  name: capv-serving-cert
  namespace: capv-system
spec:
  dnsNames:
  - capv-webhook-service.capv-system.svc
  - capv-webhook-service.capv-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: capv-selfsigned-issuer
  secretName: capv-webhook-service-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-vsphere
    cluster.x-k8s.io/v1beta1: v1beta1
  name: capv-selfsigned-issuer
  namespace: capv-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capv-system/capv-serving-cert
  labels:
    cluster.x-k8s.io/provider: infrastructure-vsphere
    cluster.x-k8s.io/v1beta1: v1beta1
  name: capv-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capv-webhook-service
      namespace: capv-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta1-vspheredeploymentzone
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.vspheredeploymentzone.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - vspheredeploymentzones
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capv-webhook-service
      namespace: capv-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta1-vspherefailuredomain
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.vspherefailuredomain.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - vspherefailuredomains
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capv-webhook-service
      namespace: capv-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta1-vspheremachine
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.vspheremachine.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - vspheremachines
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capv-webhook-service
      namespace: capv-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta1-vspherevm
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.vspherevm.infrastructure.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - vspherevms
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capv-system/capv-serving-cert
  labels:
    cluster.x-k8s.io/provider: infrastructure-vsphere
    cluster.x-k8s.io/v1beta1: v1beta1
  name: capv-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capv-webhook-service
      namespace: capv-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-vsphereclustertemplate
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.vsphereclustertemplate.infrastructure.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - vsphereclustertemplates
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capv-webhook-service
      namespace: capv-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-vspherefailuredomain
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.vspherefailuredomain.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - vspherefailuredomains
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capv-webhook-service
      namespace: capv-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-vspheremachine
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.vspheremachine.infrastructure.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - vspheremachines
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capv-webhook-service
      namespace: capv-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-vspheremachinetemplate
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.vspheremachinetemplate.infrastructure.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - vspheremachinetemplates
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capv-webhook-service
      namespace: capv-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-vspherevm
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.vspherevm.infrastructure.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - vspherevms
  sideEffects: None
