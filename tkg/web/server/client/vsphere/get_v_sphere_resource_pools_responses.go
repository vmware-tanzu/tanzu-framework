// Code generated by go-swagger; DO NOT EDIT.

package vsphere

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware-tanzu/tanzu-framework/tkg/web/server/models"
)

// GetVSphereResourcePoolsReader is a Reader for the GetVSphereResourcePools structure.
type GetVSphereResourcePoolsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVSphereResourcePoolsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVSphereResourcePoolsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVSphereResourcePoolsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetVSphereResourcePoolsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVSphereResourcePoolsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetVSphereResourcePoolsOK creates a GetVSphereResourcePoolsOK with default headers values
func NewGetVSphereResourcePoolsOK() *GetVSphereResourcePoolsOK {
	return &GetVSphereResourcePoolsOK{}
}

/*
GetVSphereResourcePoolsOK handles this case with default header values.

Successful retrieval of vSphere resourcePools
*/
type GetVSphereResourcePoolsOK struct {
	Payload []*models.VSphereResourcePool
}

func (o *GetVSphereResourcePoolsOK) Error() string {
	return fmt.Sprintf("[GET /api/providers/vsphere/resourcepools][%d] getVSphereResourcePoolsOK  %+v", 200, o.Payload)
}

func (o *GetVSphereResourcePoolsOK) GetPayload() []*models.VSphereResourcePool {
	return o.Payload
}

func (o *GetVSphereResourcePoolsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVSphereResourcePoolsBadRequest creates a GetVSphereResourcePoolsBadRequest with default headers values
func NewGetVSphereResourcePoolsBadRequest() *GetVSphereResourcePoolsBadRequest {
	return &GetVSphereResourcePoolsBadRequest{}
}

/*
GetVSphereResourcePoolsBadRequest handles this case with default header values.

Bad request
*/
type GetVSphereResourcePoolsBadRequest struct {
	Payload *models.Error
}

func (o *GetVSphereResourcePoolsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/providers/vsphere/resourcepools][%d] getVSphereResourcePoolsBadRequest  %+v", 400, o.Payload)
}

func (o *GetVSphereResourcePoolsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVSphereResourcePoolsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVSphereResourcePoolsUnauthorized creates a GetVSphereResourcePoolsUnauthorized with default headers values
func NewGetVSphereResourcePoolsUnauthorized() *GetVSphereResourcePoolsUnauthorized {
	return &GetVSphereResourcePoolsUnauthorized{}
}

/*
GetVSphereResourcePoolsUnauthorized handles this case with default header values.

Incorrect credentials
*/
type GetVSphereResourcePoolsUnauthorized struct {
	Payload *models.Error
}

func (o *GetVSphereResourcePoolsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/providers/vsphere/resourcepools][%d] getVSphereResourcePoolsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetVSphereResourcePoolsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVSphereResourcePoolsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVSphereResourcePoolsInternalServerError creates a GetVSphereResourcePoolsInternalServerError with default headers values
func NewGetVSphereResourcePoolsInternalServerError() *GetVSphereResourcePoolsInternalServerError {
	return &GetVSphereResourcePoolsInternalServerError{}
}

/*
GetVSphereResourcePoolsInternalServerError handles this case with default header values.

Internal server error
*/
type GetVSphereResourcePoolsInternalServerError struct {
	Payload *models.Error
}

func (o *GetVSphereResourcePoolsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/providers/vsphere/resourcepools][%d] getVSphereResourcePoolsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetVSphereResourcePoolsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVSphereResourcePoolsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
