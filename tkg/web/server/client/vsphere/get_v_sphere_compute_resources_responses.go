// Code generated by go-swagger; DO NOT EDIT.

package vsphere

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware-tanzu/tanzu-framework/tkg/web/server/models"
)

// GetVSphereComputeResourcesReader is a Reader for the GetVSphereComputeResources structure.
type GetVSphereComputeResourcesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVSphereComputeResourcesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVSphereComputeResourcesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVSphereComputeResourcesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetVSphereComputeResourcesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVSphereComputeResourcesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetVSphereComputeResourcesOK creates a GetVSphereComputeResourcesOK with default headers values
func NewGetVSphereComputeResourcesOK() *GetVSphereComputeResourcesOK {
	return &GetVSphereComputeResourcesOK{}
}

/*
GetVSphereComputeResourcesOK handles this case with default header values.

Successful retrieval of vSphere folders
*/
type GetVSphereComputeResourcesOK struct {
	Payload []*models.VSphereManagementObject
}

func (o *GetVSphereComputeResourcesOK) Error() string {
	return fmt.Sprintf("[GET /api/providers/vsphere/compute][%d] getVSphereComputeResourcesOK  %+v", 200, o.Payload)
}

func (o *GetVSphereComputeResourcesOK) GetPayload() []*models.VSphereManagementObject {
	return o.Payload
}

func (o *GetVSphereComputeResourcesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVSphereComputeResourcesBadRequest creates a GetVSphereComputeResourcesBadRequest with default headers values
func NewGetVSphereComputeResourcesBadRequest() *GetVSphereComputeResourcesBadRequest {
	return &GetVSphereComputeResourcesBadRequest{}
}

/*
GetVSphereComputeResourcesBadRequest handles this case with default header values.

Bad request
*/
type GetVSphereComputeResourcesBadRequest struct {
	Payload *models.Error
}

func (o *GetVSphereComputeResourcesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/providers/vsphere/compute][%d] getVSphereComputeResourcesBadRequest  %+v", 400, o.Payload)
}

func (o *GetVSphereComputeResourcesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVSphereComputeResourcesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVSphereComputeResourcesUnauthorized creates a GetVSphereComputeResourcesUnauthorized with default headers values
func NewGetVSphereComputeResourcesUnauthorized() *GetVSphereComputeResourcesUnauthorized {
	return &GetVSphereComputeResourcesUnauthorized{}
}

/*
GetVSphereComputeResourcesUnauthorized handles this case with default header values.

Incorrect credentials
*/
type GetVSphereComputeResourcesUnauthorized struct {
	Payload *models.Error
}

func (o *GetVSphereComputeResourcesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/providers/vsphere/compute][%d] getVSphereComputeResourcesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetVSphereComputeResourcesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVSphereComputeResourcesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVSphereComputeResourcesInternalServerError creates a GetVSphereComputeResourcesInternalServerError with default headers values
func NewGetVSphereComputeResourcesInternalServerError() *GetVSphereComputeResourcesInternalServerError {
	return &GetVSphereComputeResourcesInternalServerError{}
}

/*
GetVSphereComputeResourcesInternalServerError handles this case with default header values.

Internal server error
*/
type GetVSphereComputeResourcesInternalServerError struct {
	Payload *models.Error
}

func (o *GetVSphereComputeResourcesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/providers/vsphere/compute][%d] getVSphereComputeResourcesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetVSphereComputeResourcesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVSphereComputeResourcesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
