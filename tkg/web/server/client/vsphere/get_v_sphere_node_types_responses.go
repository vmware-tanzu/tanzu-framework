// Code generated by go-swagger; DO NOT EDIT.

package vsphere

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware-tanzu/tanzu-framework/tkg/web/server/models"
)

// GetVSphereNodeTypesReader is a Reader for the GetVSphereNodeTypes structure.
type GetVSphereNodeTypesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVSphereNodeTypesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVSphereNodeTypesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVSphereNodeTypesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetVSphereNodeTypesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVSphereNodeTypesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetVSphereNodeTypesOK creates a GetVSphereNodeTypesOK with default headers values
func NewGetVSphereNodeTypesOK() *GetVSphereNodeTypesOK {
	return &GetVSphereNodeTypesOK{}
}

/*
GetVSphereNodeTypesOK handles this case with default header values.

Successful retrieval of node types supported by vSphere
*/
type GetVSphereNodeTypesOK struct {
	Payload []*models.NodeType
}

func (o *GetVSphereNodeTypesOK) Error() string {
	return fmt.Sprintf("[GET /api/providers/vsphere/nodetypes][%d] getVSphereNodeTypesOK  %+v", 200, o.Payload)
}

func (o *GetVSphereNodeTypesOK) GetPayload() []*models.NodeType {
	return o.Payload
}

func (o *GetVSphereNodeTypesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVSphereNodeTypesBadRequest creates a GetVSphereNodeTypesBadRequest with default headers values
func NewGetVSphereNodeTypesBadRequest() *GetVSphereNodeTypesBadRequest {
	return &GetVSphereNodeTypesBadRequest{}
}

/*
GetVSphereNodeTypesBadRequest handles this case with default header values.

Bad request
*/
type GetVSphereNodeTypesBadRequest struct {
	Payload *models.Error
}

func (o *GetVSphereNodeTypesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/providers/vsphere/nodetypes][%d] getVSphereNodeTypesBadRequest  %+v", 400, o.Payload)
}

func (o *GetVSphereNodeTypesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVSphereNodeTypesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVSphereNodeTypesUnauthorized creates a GetVSphereNodeTypesUnauthorized with default headers values
func NewGetVSphereNodeTypesUnauthorized() *GetVSphereNodeTypesUnauthorized {
	return &GetVSphereNodeTypesUnauthorized{}
}

/*
GetVSphereNodeTypesUnauthorized handles this case with default header values.

Incorrect credentials
*/
type GetVSphereNodeTypesUnauthorized struct {
	Payload *models.Error
}

func (o *GetVSphereNodeTypesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/providers/vsphere/nodetypes][%d] getVSphereNodeTypesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetVSphereNodeTypesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVSphereNodeTypesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVSphereNodeTypesInternalServerError creates a GetVSphereNodeTypesInternalServerError with default headers values
func NewGetVSphereNodeTypesInternalServerError() *GetVSphereNodeTypesInternalServerError {
	return &GetVSphereNodeTypesInternalServerError{}
}

/*
GetVSphereNodeTypesInternalServerError handles this case with default header values.

Internal server error
*/
type GetVSphereNodeTypesInternalServerError struct {
	Payload *models.Error
}

func (o *GetVSphereNodeTypesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/providers/vsphere/nodetypes][%d] getVSphereNodeTypesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetVSphereNodeTypesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVSphereNodeTypesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
