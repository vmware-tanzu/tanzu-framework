// Code generated by go-swagger; DO NOT EDIT.

package vsphere

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware-tanzu/tanzu-framework/tkg/web/server/models"
)

// GetVSphereOSImagesReader is a Reader for the GetVSphereOSImages structure.
type GetVSphereOSImagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVSphereOSImagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVSphereOSImagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVSphereOSImagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetVSphereOSImagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVSphereOSImagesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetVSphereOSImagesOK creates a GetVSphereOSImagesOK with default headers values
func NewGetVSphereOSImagesOK() *GetVSphereOSImagesOK {
	return &GetVSphereOSImagesOK{}
}

/*GetVSphereOSImagesOK handles this case with default header values.

Successful retrieval of node images supported by vSphere
*/
type GetVSphereOSImagesOK struct {
	Payload []*models.VSphereVirtualMachine
}

func (o *GetVSphereOSImagesOK) Error() string {
	return fmt.Sprintf("[GET /api/providers/vsphere/osimages][%d] getVSphereOSImagesOK  %+v", 200, o.Payload)
}

func (o *GetVSphereOSImagesOK) GetPayload() []*models.VSphereVirtualMachine {
	return o.Payload
}

func (o *GetVSphereOSImagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVSphereOSImagesBadRequest creates a GetVSphereOSImagesBadRequest with default headers values
func NewGetVSphereOSImagesBadRequest() *GetVSphereOSImagesBadRequest {
	return &GetVSphereOSImagesBadRequest{}
}

/*GetVSphereOSImagesBadRequest handles this case with default header values.

Bad request
*/
type GetVSphereOSImagesBadRequest struct {
	Payload *models.Error
}

func (o *GetVSphereOSImagesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/providers/vsphere/osimages][%d] getVSphereOSImagesBadRequest  %+v", 400, o.Payload)
}

func (o *GetVSphereOSImagesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVSphereOSImagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVSphereOSImagesUnauthorized creates a GetVSphereOSImagesUnauthorized with default headers values
func NewGetVSphereOSImagesUnauthorized() *GetVSphereOSImagesUnauthorized {
	return &GetVSphereOSImagesUnauthorized{}
}

/*GetVSphereOSImagesUnauthorized handles this case with default header values.

Incorrect credentials
*/
type GetVSphereOSImagesUnauthorized struct {
	Payload *models.Error
}

func (o *GetVSphereOSImagesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/providers/vsphere/osimages][%d] getVSphereOSImagesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetVSphereOSImagesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVSphereOSImagesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVSphereOSImagesInternalServerError creates a GetVSphereOSImagesInternalServerError with default headers values
func NewGetVSphereOSImagesInternalServerError() *GetVSphereOSImagesInternalServerError {
	return &GetVSphereOSImagesInternalServerError{}
}

/*GetVSphereOSImagesInternalServerError handles this case with default header values.

Internal server error
*/
type GetVSphereOSImagesInternalServerError struct {
	Payload *models.Error
}

func (o *GetVSphereOSImagesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/providers/vsphere/osimages][%d] getVSphereOSImagesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetVSphereOSImagesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVSphereOSImagesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
