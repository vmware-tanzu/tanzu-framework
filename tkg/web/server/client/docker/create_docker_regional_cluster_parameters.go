// Code generated by go-swagger; DO NOT EDIT.

package docker

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware-tanzu/tanzu-framework/tkg/web/server/models"
)

// NewCreateDockerRegionalClusterParams creates a new CreateDockerRegionalClusterParams object
// with the default values initialized.
func NewCreateDockerRegionalClusterParams() *CreateDockerRegionalClusterParams {
	var ()
	return &CreateDockerRegionalClusterParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateDockerRegionalClusterParamsWithTimeout creates a new CreateDockerRegionalClusterParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateDockerRegionalClusterParamsWithTimeout(timeout time.Duration) *CreateDockerRegionalClusterParams {
	var ()
	return &CreateDockerRegionalClusterParams{

		timeout: timeout,
	}
}

// NewCreateDockerRegionalClusterParamsWithContext creates a new CreateDockerRegionalClusterParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateDockerRegionalClusterParamsWithContext(ctx context.Context) *CreateDockerRegionalClusterParams {
	var ()
	return &CreateDockerRegionalClusterParams{

		Context: ctx,
	}
}

// NewCreateDockerRegionalClusterParamsWithHTTPClient creates a new CreateDockerRegionalClusterParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateDockerRegionalClusterParamsWithHTTPClient(client *http.Client) *CreateDockerRegionalClusterParams {
	var ()
	return &CreateDockerRegionalClusterParams{
		HTTPClient: client,
	}
}

/*
CreateDockerRegionalClusterParams contains all the parameters to send to the API endpoint
for the create docker regional cluster operation typically these are written to a http.Request
*/
type CreateDockerRegionalClusterParams struct {

	/*Params
	  parameters to create a regional cluster

	*/
	Params *models.DockerRegionalClusterParams

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create docker regional cluster params
func (o *CreateDockerRegionalClusterParams) WithTimeout(timeout time.Duration) *CreateDockerRegionalClusterParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create docker regional cluster params
func (o *CreateDockerRegionalClusterParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create docker regional cluster params
func (o *CreateDockerRegionalClusterParams) WithContext(ctx context.Context) *CreateDockerRegionalClusterParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create docker regional cluster params
func (o *CreateDockerRegionalClusterParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create docker regional cluster params
func (o *CreateDockerRegionalClusterParams) WithHTTPClient(client *http.Client) *CreateDockerRegionalClusterParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create docker regional cluster params
func (o *CreateDockerRegionalClusterParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithParams adds the params to the create docker regional cluster params
func (o *CreateDockerRegionalClusterParams) WithParams(params *models.DockerRegionalClusterParams) *CreateDockerRegionalClusterParams {
	o.SetParams(params)
	return o
}

// SetParams adds the params to the create docker regional cluster params
func (o *CreateDockerRegionalClusterParams) SetParams(params *models.DockerRegionalClusterParams) {
	o.Params = params
}

// WriteToRequest writes these params to a swagger request
func (o *CreateDockerRegionalClusterParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Params != nil {
		if err := r.SetBodyParam(o.Params); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
