// Code generated by go-swagger; DO NOT EDIT.

package ldap

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware-tanzu/tanzu-framework/tkg/web/server/models"
)

// VerifyLdapCloseConnectionReader is a Reader for the VerifyLdapCloseConnection structure.
type VerifyLdapCloseConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VerifyLdapCloseConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewVerifyLdapCloseConnectionCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewVerifyLdapCloseConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewVerifyLdapCloseConnectionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewVerifyLdapCloseConnectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewVerifyLdapCloseConnectionCreated creates a VerifyLdapCloseConnectionCreated with default headers values
func NewVerifyLdapCloseConnectionCreated() *VerifyLdapCloseConnectionCreated {
	return &VerifyLdapCloseConnectionCreated{}
}

/*
VerifyLdapCloseConnectionCreated handles this case with default header values.

Verified LDAP credentials successfully
*/
type VerifyLdapCloseConnectionCreated struct {
}

func (o *VerifyLdapCloseConnectionCreated) Error() string {
	return fmt.Sprintf("[POST /api/ldap/disconnect][%d] verifyLdapCloseConnectionCreated ", 201)
}

func (o *VerifyLdapCloseConnectionCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewVerifyLdapCloseConnectionBadRequest creates a VerifyLdapCloseConnectionBadRequest with default headers values
func NewVerifyLdapCloseConnectionBadRequest() *VerifyLdapCloseConnectionBadRequest {
	return &VerifyLdapCloseConnectionBadRequest{}
}

/*
VerifyLdapCloseConnectionBadRequest handles this case with default header values.

Bad request
*/
type VerifyLdapCloseConnectionBadRequest struct {
	Payload *models.Error
}

func (o *VerifyLdapCloseConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/ldap/disconnect][%d] verifyLdapCloseConnectionBadRequest  %+v", 400, o.Payload)
}

func (o *VerifyLdapCloseConnectionBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *VerifyLdapCloseConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVerifyLdapCloseConnectionUnauthorized creates a VerifyLdapCloseConnectionUnauthorized with default headers values
func NewVerifyLdapCloseConnectionUnauthorized() *VerifyLdapCloseConnectionUnauthorized {
	return &VerifyLdapCloseConnectionUnauthorized{}
}

/*
VerifyLdapCloseConnectionUnauthorized handles this case with default header values.

Incorrect credentials
*/
type VerifyLdapCloseConnectionUnauthorized struct {
	Payload *models.Error
}

func (o *VerifyLdapCloseConnectionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/ldap/disconnect][%d] verifyLdapCloseConnectionUnauthorized  %+v", 401, o.Payload)
}

func (o *VerifyLdapCloseConnectionUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *VerifyLdapCloseConnectionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVerifyLdapCloseConnectionInternalServerError creates a VerifyLdapCloseConnectionInternalServerError with default headers values
func NewVerifyLdapCloseConnectionInternalServerError() *VerifyLdapCloseConnectionInternalServerError {
	return &VerifyLdapCloseConnectionInternalServerError{}
}

/*
VerifyLdapCloseConnectionInternalServerError handles this case with default header values.

Internal server error
*/
type VerifyLdapCloseConnectionInternalServerError struct {
	Payload *models.Error
}

func (o *VerifyLdapCloseConnectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/ldap/disconnect][%d] verifyLdapCloseConnectionInternalServerError  %+v", 500, o.Payload)
}

func (o *VerifyLdapCloseConnectionInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *VerifyLdapCloseConnectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
