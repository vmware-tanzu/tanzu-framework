// Code generated by go-swagger; DO NOT EDIT.

package aws

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware-tanzu/tanzu-framework/tkg/web/server/models"
)

// GetVPCsReader is a Reader for the GetVPCs structure.
type GetVPCsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVPCsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVPCsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVPCsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetVPCsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVPCsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetVPCsOK creates a GetVPCsOK with default headers values
func NewGetVPCsOK() *GetVPCsOK {
	return &GetVPCsOK{}
}

/*
GetVPCsOK handles this case with default header values.

Successful retrieval of AWS VPCs
*/
type GetVPCsOK struct {
	Payload []*models.Vpc
}

func (o *GetVPCsOK) Error() string {
	return fmt.Sprintf("[GET /api/providers/aws/vpc][%d] getVPCsOK  %+v", 200, o.Payload)
}

func (o *GetVPCsOK) GetPayload() []*models.Vpc {
	return o.Payload
}

func (o *GetVPCsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVPCsBadRequest creates a GetVPCsBadRequest with default headers values
func NewGetVPCsBadRequest() *GetVPCsBadRequest {
	return &GetVPCsBadRequest{}
}

/*
GetVPCsBadRequest handles this case with default header values.

Bad request
*/
type GetVPCsBadRequest struct {
	Payload *models.Error
}

func (o *GetVPCsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/providers/aws/vpc][%d] getVPCsBadRequest  %+v", 400, o.Payload)
}

func (o *GetVPCsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVPCsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVPCsUnauthorized creates a GetVPCsUnauthorized with default headers values
func NewGetVPCsUnauthorized() *GetVPCsUnauthorized {
	return &GetVPCsUnauthorized{}
}

/*
GetVPCsUnauthorized handles this case with default header values.

Incorrect credentials
*/
type GetVPCsUnauthorized struct {
	Payload *models.Error
}

func (o *GetVPCsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/providers/aws/vpc][%d] getVPCsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetVPCsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVPCsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVPCsInternalServerError creates a GetVPCsInternalServerError with default headers values
func NewGetVPCsInternalServerError() *GetVPCsInternalServerError {
	return &GetVPCsInternalServerError{}
}

/*
GetVPCsInternalServerError handles this case with default header values.

Internal server error
*/
type GetVPCsInternalServerError struct {
	Payload *models.Error
}

func (o *GetVPCsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/providers/aws/vpc][%d] getVPCsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetVPCsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVPCsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
